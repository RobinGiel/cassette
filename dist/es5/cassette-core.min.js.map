{"version":3,"sources":["webpack://cassetteCore/webpack/universalModuleDefinition","webpack://cassetteCore/webpack/bootstrap","webpack://cassetteCore/external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://cassetteCore/external {\"root\":\"PropTypes\",\"commonjs\":\"prop-types\",\"commonjs2\":\"prop-types\",\"amd\":\"prop-types\"}","webpack://cassetteCore/./packages/core/src/utils/console.js","webpack://cassetteCore/./packages/core/src/utils/createSingleGlobalContext.js","webpack://cassetteCore/./packages/core/node_modules/array-find-index/index.js","webpack://cassetteCore/(webpack)/buildin/global.js","webpack://cassetteCore/./packages/core/src/PlayerContext.js","webpack://cassetteCore/./packages/core/src/GroupContext.js","webpack://cassetteCore/./packages/core/src/constants.js","webpack://cassetteCore/./packages/core/src/PlayerPropTypes.js","webpack://cassetteCore/./packages/core/src/factories/createCustomMediaElement.js","webpack://cassetteCore/./packages/core/src/utils/ShuffleManager.js","webpack://cassetteCore/./packages/core/src/utils/isPlaylistValid.js","webpack://cassetteCore/./packages/core/src/utils/getTrackSources.js","webpack://cassetteCore/./packages/core/src/utils/findTrackIndexByUrl.js","webpack://cassetteCore/./packages/core/src/utils/getSourceList.js","webpack://cassetteCore/./packages/core/src/utils/getTimeRangesArray.js","webpack://cassetteCore/./packages/core/src/utils/getRepeatStrategy.js","webpack://cassetteCore/./packages/core/src/utils/convertToNumberWithinIntervalBounds.js","webpack://cassetteCore/./packages/core/src/utils/getDisplayText.js","webpack://cassetteCore/./packages/core/src/PlayerContextProvider.js","webpack://cassetteCore/./packages/core/src/utils/snapshot.js","webpack://cassetteCore/./packages/core/src/utils/getReactParentNameStack.js","webpack://cassetteCore/./packages/core/src/PlayerContextConsumer.js","webpack://cassetteCore/./packages/core/src/PlayerContextGroup.js","webpack://cassetteCore/./packages/core/src/FullscreenContext.js","webpack://cassetteCore/./packages/core/src/FullscreenContextProvider.js","webpack://cassetteCore/./packages/core/src/playerContextFilter.js","webpack://cassetteCore/./packages/core/src/index.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","logWarning","log","console","logError","error","warn","packageVersion","version","_global","window","global","__cassette_contexts__","_ref","displayName","_ref$defaultValue","defaultValue","keysWillUpdate","ExistingContext","_console__WEBPACK_IMPORTED_MODULE_1__","flags","_iterator","_isArray","Array","isArray","_i","iterator","_ref2","length","next","done","Context","react__WEBPACK_IMPORTED_MODULE_0__","prev","mask","_iterator2","_isArray2","_i2","_ref3","__cassetteGetObservedBits","keys","observedBits","_iterator3","_isArray3","_i3","_ref4","arr","predicate","ctx","findIndex","TypeError","list","len","g","Function","eval","e","PlayerContext","createSingleGlobalContext","GroupContext","repeatStrategyOptions","requiredOnlyUnlessHasProp","propType","altPropName","warnedAboutDefiningBoth","props","propName","componentName","_len","arguments","rest","_key","isRequired","apply","concat","Error","controlKeyword","external_root_PropTypes_commonjs_prop_types_commonjs2_prop_types_amd_prop_types_default","a","oneOf","control","oneOfType","func","crossOriginAttribute","PlayerPropTypes_repeatStrategy","mediaSource","shape","src","string","type","mediaSessionAction","mediaSessionArtwork","sizes","PlayerPropTypes_track","url","sources","arrayOf","title","artist","album","artwork","meta","progressDirection","seekMode","aspectRatio","prop","undefined","split","some","isNaN","loopchange","srcrequest","factories_createCustomMediaElement","media","MutationObserver","dispatchEvent","Event","observe","attributes","attributeFilter","currentSrc","set","srcRequested","_goForward","forwardStack","backStack","currentItem","item","push","pop","_findNextItem","allowMore","indexOf","_allItemsMatch","nextItem","Math","floor","random","utils_ShuffleManager","ShuffleManager","options","_list","_forwardStack","_backStack","_currentItem","_allowBackShuffle","Boolean","allowBackShuffle","_proto","findNextItem","currentIndex","setCurrentIndex","findPreviousItem","pickNextItem","index","setList","setOptions","_arr","clear","utils_isPlaylistValid","playlist","blankSources","utils_getTrackSources","_playlist$index","utils_findTrackIndexByUrl","array_find_index_default","track","source","utils_getSourceList","map","_","utils_getTimeRangesArray","timeRangesObj","timeRangesArray","start","end","utils_getRepeatStrategy","loop","cycle","utils_convertToNumberWithinIntervalBounds","number","min","max","Infinity","utils_getDisplayText","displayText","playErrorHandler","err","warningMessage","Date","toLocaleTimeString","supportableMediaSessionActions","defaultState","paused","currentTime","seekPreviewTime","seekInProgress","awaitingResumeOnSeekComplete","awaitingPlayAfterTrackLoad","duration","bufferedRanges","playedRanges","seekableRanges","stalled","shouldRequestPlayOnNextUpdate","mediaCannotPlay","getGoToTrackState","prevState","_ref$shouldPlay","shouldPlay","_ref$shouldForceLoad","shouldForceLoad","isNewTrack","activeTrackIndex","trackLoading","awaitingForceLoad","PlayerContextProvider_PlayerContextProvider","_Component","PlayerContextProvider","_this","state","_objectSpread","startingTrackIndex","startingTime","volume","defaultVolume","muted","defaultMuted","defaultRepeatStrategy","shuffle","defaultShuffle","playbackRate","defaultPlaybackRate","setVolumeInProgress","autoplay","__playlist__","initialStateSnapshot","snapshot","_snapshot$__unstable_","__unstable__","activeTrackSrc","restoredStateValues","awaitingPlay","useCurrentTime","newTrackIndex","restoreStateFromSnapshot","lastStableVolume","shuffler","videoHostElementList","videoHostOccupiedCallbacks","Map","videoHostVacatedCallbacks","onTrackPlaybackFailure","_assertThisInitialized","togglePause","selectTrackIndex","forwardSkip","backSkip","seekPreview","seekComplete","setVolume","setVolumeComplete","toggleMuted","toggleShuffle","setRepeatStrategy","setPlaybackRate","registerVideoHostElement","renderVideoIntoHostElement","unregisterVideoHostElement","updateVideoHostElement","handleMediaPlay","handleMediaPause","handleMediaSrcrequest","handleMediaEnded","handleMediaEmptied","handleMediaStalled","handleMediaCanplaythrough","handleMediaTimeupdate","handleMediaLoadedmetadata","handleMediaVolumechange","handleMediaDurationchange","handleMediaProgress","handleMediaLoopchange","handleMediaRatechange","_inheritsLoose","componentDidMount","_this2","createMediaElement","_this$props","crossOrigin","autoplayDelayInSeconds","mediaElementRef","getPosterImageForTrack","getMediaTitleAttributeForTrack","onActiveTrackUpdate","_this$state","setAttribute","addEventListener","setMediaElementSources","mediaContainer","appendChild","setState","delayTimeout","setTimeout","getDerivedStateFromProps","nextProps","newPlaylist","baseNewState","prevSources","currentSources","componentDidUpdate","prevProps","_this3","newSources","prevTrack","newTrack","stealMediaSession","clearTimeout","snapshotUpdateTimeout","onStateSnapshot","getStateSnapshot","componentWillUnmount","removeEventListener","querySelectorAll","gapLengthTimeout","_this4","MediaSession","navigator","mediaSession","metadata","MediaMetadata","action","supportedMediaSessionActions","seekLength","mediaSessionSeekLengthInSeconds","forEach","handler","setActionHandler","firstChild","removeChild","sourceElement","document","createElement","load","event","hostElement","onHostOccupied","onHostVacated","_this5","cancelAnimationFrame","videoHostUpdateRaf","requestAnimationFrame","filter","elem","delete","parentNode","playing","oldHostElement","play","onVacated","onOccupied","_this$props2","loadFirstTrackOnPlaylistComplete","_this$state2","goToTrack","gapLengthInSeconds","_this$media","played","_this$media2","buffered","seekable","pause","playPromise","catch","Promise","reject","args","_this$props3","stayOnBackSkipThreshold","_this$state3","previousItem","_this$state4","targetTime","baseStateUpdate","_ref5","_ref6","ended","_this$state5","inProgress","volumeInBounds","repeatStrategy","rate","getControlProps","playerContext","awaitingPlayResume","onTogglePause","onSelectTrackIndex","onBackSkip","onForwardSkip","onSeekPreview","onSeekComplete","onSetVolume","onSetVolumeComplete","onToggleMuted","onToggleShuffle","onSetRepeatStrategy","onSetPlaybackRate","render","_this6","external_root_React_commonjs_react_commonjs2_react_amd_react_default","external_root_React_commonjs_react_commonjs2_react_amd_react_","ref","hidden","Provider","children","defaultProps","maintainPlaybackRate","PlayerContextProvider_PlayerContextGroupMember","_Component2","PlayerContextGroupMember","_proto2","groupContext","registerMediaElement","mediaElement","unregisterMediaElement","_this7","_this$props4","_objectWithoutPropertiesLoose","_extends","groupProps","src_PlayerContextProvider","Consumer","utils_getReactParentNameStack","componentInstance","parentStack","owner","_reactInternalFiber","_debugOwner","src_PlayerContextConsumer","filterList","warnedAboutFilterList","warning","unstable_observedBits","usedContext","src_PlayerContextGroup","PlayerContextGroup","PlayerContextGroup_assertThisInitialized","enforceOneMediaSourceOnly","mediaElements","PlayerContextGroup_inheritsLoose","element","target","PlayerContextGroup_objectSpread","FullscreenContext","fullscreen","requestFullscreen","requestExitFullscreen","fullscreenStyle","width","height","FullscreenContextProvider_FullscreenContextProvider","_PureComponent","FullscreenContextProvider","FullscreenContextProvider_assertThisInitialized","handleFullscreenChange","fullscreenElement","FullscreenContextProvider_inheritsLoose","fullscreenEnabled","webkitRequestFullscreen","mozRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","mozExitFullscreen","documentFullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","getFullscreenContext","fullscreenContext","style","src_FullscreenContextProvider","src_playerContextFilter","component","contextPropNames","warned","childName","PlayerContextFilter","childProps","playerContextFilter_objectSpread","FullscreenContextConsumer","donotuse_PlayerContext","donotuse_FullscreenContext"],"mappings":"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","file":"es5/cassette-core.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"prop-types\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cassetteCore\"] = factory(require(\"react\"), require(\"prop-types\"));\n\telse\n\t\troot[\"cassetteCore\"] = factory(root[\"React\"], root[\"PropTypes\"]);\n})((typeof self !== \"undefined\" ? self : this), function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/* eslint-disable no-console */\n\nconst log = console.log.bind(console);\n\nexport const logError = console.error ? console.error.bind(console) : log;\nexport const logWarning = console.warn ? console.warn.bind(console) : log;\n","import { createContext } from 'react';\n\nimport { logWarning } from './console';\n\nconst packageVersion = require('../../package.json').version;\n\nconst _global = typeof window === 'undefined' ? global : window;\n_global.__cassette_contexts__ = _global.__cassette_contexts__ || {};\n\nfunction createSingleGlobalContext({\n  displayName,\n  defaultValue = null,\n  keysWillUpdate\n}) {\n  const ExistingContext = _global.__cassette_contexts__[displayName];\n  if (ExistingContext) {\n    if (ExistingContext.packageVersion !== packageVersion) {\n      logWarning(\n        `Warning: multiple versions of ${displayName} from the @cassette/core` +\n          ` package have been loaded. v${packageVersion} will be ignored and` +\n          ` v${ExistingContext.packageVersion} will be used instead.`\n      );\n    }\n    return ExistingContext;\n  }\n  // inspired by:\n  // https://github.com/philosaf/observed-bits/blob/master/src/index.js\n  const flags = {};\n  let i = 0;\n  for (const key of keysWillUpdate) {\n    flags[key] = 1 << i++;\n  }\n  const Context = createContext(defaultValue, function getChangedBits(\n    prev,\n    next\n  ) {\n    let mask = 0;\n    for (const key of keysWillUpdate) {\n      if (prev[key] !== next[key]) {\n        mask |= flags[key];\n      }\n    }\n    return mask;\n  });\n  Context.__cassetteGetObservedBits = keys => {\n    let observedBits = 0;\n    for (const key of keys) {\n      observedBits |= flags[key];\n    }\n    return observedBits;\n  };\n  Context.displayName = displayName;\n  Context.packageVersion = packageVersion;\n  _global.__cassette_contexts__[displayName] = Context;\n  return Context;\n}\n\nexport default createSingleGlobalContext;\n","'use strict';\nmodule.exports = function (arr, predicate, ctx) {\n\tif (typeof Array.prototype.findIndex === 'function') {\n\t\treturn arr.findIndex(predicate, ctx);\n\t}\n\n\tif (typeof predicate !== 'function') {\n\t\tthrow new TypeError('predicate must be a function');\n\t}\n\n\tvar list = Object(arr);\n\tvar len = list.length;\n\n\tif (len === 0) {\n\t\treturn -1;\n\t}\n\n\tfor (var i = 0; i < len; i++) {\n\t\tif (predicate.call(ctx, list[i], i, list)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\n// TODO: test to make sure context contents stay in sync with\n// enumerated list here\n\nexport default createSingleGlobalContext({\n  displayName: 'PlayerContext',\n  keysWillUpdate: [\n    'playlist',\n    'activeTrackIndex',\n    'trackLoading',\n    'paused',\n    'currentTime',\n    'seekPreviewTime',\n    'seekInProgress',\n    'awaitingPlayResume',\n    'duration',\n    'bufferedRanges',\n    'playedRanges',\n    'seekableRanges',\n    'volume',\n    'muted',\n    'shuffle',\n    'stalled',\n    'playbackRate',\n    'setVolumeInProgress',\n    'repeatStrategy',\n    'mediaCannotPlay'\n  ]\n});\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\nexport default createSingleGlobalContext({\n  displayName: 'GroupContext',\n  keysWillUpdate: ['groupProps']\n});\n","export const repeatStrategyOptions = ['none', 'playlist', 'track'];\n","import PropTypes from 'prop-types';\n\nimport { repeatStrategyOptions } from './constants';\nimport { logWarning } from './utils/console';\n\nfunction requiredOnlyUnlessHasProp(propType, altPropName) {\n  let warnedAboutDefiningBoth = false;\n  function validate(props, propName, componentName, ...rest) {\n    if (propName in props) {\n      if (!warnedAboutDefiningBoth && altPropName in props) {\n        logWarning(\n          `Do not define both the '${propName}' and '${altPropName}' props.`\n        );\n        warnedAboutDefiningBoth = true;\n      }\n      return propType.isRequired(props, propName, componentName, ...rest);\n    }\n    if (!(altPropName in props)) {\n      return new Error(\n        `If the '${altPropName}' prop is not defined, '${propName}' must be.`\n      );\n    }\n  }\n  return validate;\n}\n\nexport const controlKeyword = PropTypes.oneOf([\n  'playpause',\n  'backskip',\n  'forwardskip',\n  'volume',\n  'mute',\n  'repeat',\n  'shuffle',\n  'progress',\n  'progressdisplay',\n  'fullscreen',\n  'spacer'\n]);\n\nexport const control = PropTypes.oneOfType([PropTypes.func, controlKeyword]);\n\nexport const crossOriginAttribute = PropTypes.oneOf([\n  'anonymous',\n  'use-credentials'\n]);\n\nexport const repeatStrategy = PropTypes.oneOf(repeatStrategyOptions);\n\nexport const mediaSource = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n\nexport const mediaSessionAction = PropTypes.oneOf([\n  'play',\n  'pause',\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n]);\n\nexport const mediaSessionArtwork = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  type: PropTypes.string\n});\n\nexport const track = PropTypes.shape({\n  url: requiredOnlyUnlessHasProp(PropTypes.string, 'sources'),\n  sources: requiredOnlyUnlessHasProp(\n    PropTypes.arrayOf(mediaSource.isRequired),\n    'url'\n  ),\n  title: PropTypes.string.isRequired,\n  artist: PropTypes.string,\n  album: PropTypes.string,\n  artwork: PropTypes.arrayOf(mediaSessionArtwork.isRequired),\n  meta: PropTypes.object\n});\n\nexport const progressDirection = PropTypes.oneOf([\n  'left',\n  'right',\n  'up',\n  'down'\n]);\n\nexport const seekMode = PropTypes.oneOf(['paused', 'immediate', 'onrelease']);\n\nexport function aspectRatio(props, propName) {\n  const prop = props[propName];\n  if (prop === undefined) {\n    return;\n  }\n  if (\n    typeof prop !== 'string' ||\n    prop.split(':').length !== 2 ||\n    prop.split(':').some(isNaN)\n  ) {\n    return new Error(\n      `The ${propName} prop should be a string of the form 'x:y'. Example: 16:9`\n    );\n  }\n}\n","const loopchange = 'loopchange';\nconst srcrequest = 'srcrequest';\n\nfunction createCustomMediaElement(media) {\n  new MutationObserver(() => {\n    media.dispatchEvent(new Event(loopchange));\n  }).observe(media, {\n    attributes: true,\n    attributeFilter: ['loop']\n  });\n  // Don't let the media src property get modified directly.\n  // Instead, when it does get set, dispatch an event to be\n  // handled in a way that doesn't conflict with the loaded\n  // playlist.\n  Object.defineProperty(media, 'src', {\n    get: () => media.currentSrc,\n    set: src => {\n      const e = new Event(srcrequest);\n      e.srcRequested = src;\n      media.dispatchEvent(e);\n    }\n  });\n  return media;\n}\n\nexport default createCustomMediaElement;\n","/* ShuffleManager\n *\n * Manages navigation throughout a list which is:\n * - Sourced from another provided list\n * - In random order (except to avoid consecutive duplicates)\n * - Extended endlessly on-the-fly, as needed\n * - Able to have future history overwritten by non-random choices\n * - Able to swap source lists and maintain shuffle order for common members\n */\n\nexport class ShuffleManager {\n  constructor(list, options = {}) {\n    this._list = list;\n    this._forwardStack = [];\n    this._backStack = [];\n    this._currentItem = undefined;\n\n    this._allowBackShuffle = Boolean(options.allowBackShuffle);\n  }\n\n  findNextItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._forwardStack,\n      this._backStack,\n      this._currentItem,\n      true\n    );\n    return this._currentItem;\n  }\n\n  findPreviousItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._backStack,\n      this._forwardStack,\n      this._currentItem,\n      this._allowBackShuffle\n    );\n    return this._currentItem;\n  }\n\n  pickNextItem(index, currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    if (this._list[index] === undefined) {\n      return undefined;\n    }\n    if (this._currentItem !== undefined) {\n      this._backStack.push(this._currentItem);\n    }\n    this._forwardStack.length = 0;\n    this._currentItem = this._list[index];\n    return this._currentItem;\n  }\n\n  setList(list) {\n    this._list = list;\n  }\n\n  setOptions(options) {\n    for (const o of Object.keys(options)) {\n      switch (o) {\n        case 'allowBackShuffle':\n          this[`_${o}`] = Boolean(options[o]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  setCurrentIndex(currentIndex) {\n    const item = this._list[currentIndex];\n    if (this._currentItem !== item) {\n      this.clear();\n      this._currentItem = item;\n    }\n  }\n\n  clear() {\n    this._forwardStack.length = 0;\n    this._backStack.length = 0;\n    this._currentItem = undefined;\n  }\n}\n\nfunction _goForward(n, forwardStack, backStack, currentItem) {\n  let item = currentItem;\n  for (let i = 0; i < n; i++) {\n    if (!forwardStack.length) {\n      // rollback before erroring (note stack reversal)\n      _goForward(i, backStack, forwardStack, item);\n      throw `Moving ${n} places was not possible!`;\n    }\n    backStack.push(item);\n    item = forwardStack.pop();\n  }\n  return item;\n}\n\nfunction _allItemsMatch(list, item) {\n  if (!list.length) {\n    return false;\n  }\n  for (let i = 0; i < list.length; i++) {\n    if (item !== list[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction _findNextItem(list, forwardStack, backStack, currentItem, allowMore) {\n  let item = currentItem;\n  if (!list.length) {\n    return undefined;\n  }\n  for (let i = 1; i <= forwardStack.length; i++) {\n    if (list.indexOf(forwardStack[forwardStack.length - i]) !== -1) {\n      return _goForward(i, forwardStack, backStack, item);\n    }\n  }\n  if (!allowMore) {\n    return undefined;\n  }\n  if (_allItemsMatch(list, item)) {\n    // we can serve this as our \"next\" item but we\n    // won't modify our history since it's the same.\n    return item;\n  }\n  let nextItem;\n  do {\n    nextItem = list[Math.floor(Math.random() * list.length)];\n  } while (item === nextItem || nextItem === undefined);\n  // if we're skipping items that aren't in our current list we may\n  // have some items in our forwardStack - make sure we move to the front.\n  item = _goForward(forwardStack.length, forwardStack, backStack, item);\n  if (item !== undefined) {\n    backStack.push(item);\n  }\n  return nextItem;\n}\n\nexport default ShuffleManager;\n","function isPlaylistValid(playlist) {\n  return Boolean(playlist && playlist.length);\n}\n\nexport default isPlaylistValid;\n","import isPlaylistValid from './isPlaylistValid';\n\nconst blankSources = [{ src: '' }];\n\nfunction getTrackSources(playlist, index) {\n  if (!isPlaylistValid(playlist)) {\n    return blankSources;\n  }\n  const { sources, url } = playlist[index];\n  if (sources) {\n    return sources.length ? sources : blankSources;\n  }\n  return [{ src: url }];\n}\n\nexport default getTrackSources;\n","import arrayFindIndex from 'array-find-index';\n\nfunction findTrackIndexByUrl(playlist, url) {\n  return arrayFindIndex(playlist, track => {\n    if (track.sources) {\n      return arrayFindIndex(track.sources, source => source.src === url) !== -1;\n    }\n    return track.url && url === track.url;\n  });\n}\n\nexport default findTrackIndexByUrl;\n","import getTrackSources from './getTrackSources';\n\n// collapses playlist into flat list containing\n// the first source url for each track\nfunction getSourceList(playlist) {\n  return (playlist || []).map((_, i) => getTrackSources(playlist, i)[0].src);\n}\n\nexport default getSourceList;\n","function getTimeRangesArray(timeRangesObj) {\n  const timeRangesArray = Array(timeRangesObj.length);\n  for (let i = 0; i < timeRangesObj.length; i++) {\n    timeRangesArray[i] = {\n      start: timeRangesObj.start(i),\n      end: timeRangesObj.end(i)\n    };\n  }\n  return timeRangesArray;\n}\n\nexport default getTimeRangesArray;\n","function getRepeatStrategy(loop, cycle) {\n  if (loop) {\n    return 'track';\n  }\n  if (cycle) {\n    return 'playlist';\n  }\n  return 'none';\n}\n\nexport default getRepeatStrategy;\n","function convertToNumberWithinIntervalBounds(number, min, max) {\n  min = typeof min === 'number' ? min : -Infinity;\n  max = typeof max === 'number' ? max : Infinity;\n  return Math.max(min, Math.min(number, max));\n}\n\nexport default convertToNumberWithinIntervalBounds;\n","function getDisplayText(track) {\n  if (!track) {\n    return '';\n  }\n  if (track.displayText) {\n    // TODO: Remove this check when support for the displayText prop is gone.\n    return track.displayText;\n  }\n  if (track.title && track.artist) {\n    return `${track.artist} - ${track.title}`;\n  }\n  return track.title || track.artist || track.album || '';\n}\n\nexport default getDisplayText;\n","import React, { Component, Fragment, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayFindIndex from 'array-find-index';\n\nimport PlayerContext from './PlayerContext';\nimport GroupContext from './GroupContext';\nimport * as PlayerPropTypes from './PlayerPropTypes';\nimport createCustomMediaElement from './factories/createCustomMediaElement';\nimport ShuffleManager from './utils/ShuffleManager';\nimport { getStateSnapshot, restoreStateFromSnapshot } from './utils/snapshot';\nimport getSourceList from './utils/getSourceList';\nimport getTrackSources from './utils/getTrackSources';\nimport getTimeRangesArray from './utils/getTimeRangesArray';\nimport findTrackIndexByUrl from './utils/findTrackIndexByUrl';\nimport isPlaylistValid from './utils/isPlaylistValid';\nimport getRepeatStrategy from './utils/getRepeatStrategy';\nimport convertToNumberWithinIntervalBounds from './utils/convertToNumberWithinIntervalBounds';\nimport { logError, logWarning } from './utils/console';\nimport getDisplayText from './utils/getDisplayText';\nimport { repeatStrategyOptions } from './constants';\n\nfunction playErrorHandler(err) {\n  logError(err);\n  if (err.name === 'NotAllowedError') {\n    const warningMessage =\n      'Media playback failed at ' +\n      new Date().toLocaleTimeString() +\n      '! (Perhaps autoplay is disabled in this browser.)';\n    logWarning(warningMessage);\n  }\n}\n\n// Existing Media Session API implementations have default handlers\n// for play/pause, and may yield unexpected behavior if custom\n// play/pause handlers are defined - so let's leave them be.\nconst supportableMediaSessionActions = [\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n];\n\nconst defaultState = {\n  // indicates whether media player should be paused\n  paused: true,\n  // elapsed time for active track, in seconds\n  currentTime: 0,\n  // The most recent targeted time, in seconds, for seek preview\n  seekPreviewTime: 0,\n  /* true if the user is currently dragging the mouse\n   * to seek a new track position\n   */\n  seekInProgress: false,\n  /* true if media was playing when seek previewing began,\n   * it was paused, and it should be resumed on seek\n   * complete\n   */\n  awaitingResumeOnSeekComplete: false,\n  // true if media will play once new track has loaded\n  awaitingPlayAfterTrackLoad: false,\n  // the duration in seconds of the loaded track\n  duration: 0,\n  // array describing the buffered ranges in the loaded track\n  bufferedRanges: [],\n  // array describing the already-played ranges in the loaded track\n  playedRanges: [],\n  // array describing the seekable ranges in the loaded track\n  seekableRanges: [],\n  // true if the media is currently stalled pending data buffering\n  stalled: false,\n  // true if the active track should play on the next componentDidUpdate\n  shouldRequestPlayOnNextUpdate: false,\n  /* true if an error occurs while fetching the active track media data\n   * or if its type is not a supported media format\n   */\n  mediaCannotPlay: false\n};\n\n// assumes playlist is valid\nfunction getGoToTrackState({\n  prevState,\n  index,\n  shouldPlay = true,\n  shouldForceLoad = false\n}) {\n  const isNewTrack = prevState.activeTrackIndex !== index;\n  return {\n    activeTrackIndex: index,\n    trackLoading: isNewTrack,\n    mediaCannotPlay:\n      prevState.mediaCannotPlay && !shouldForceLoad && !isNewTrack,\n    currentTime: 0,\n    loop: isNewTrack || shouldForceLoad ? false : prevState.loop,\n    shouldRequestPlayOnNextUpdate: Boolean(shouldPlay),\n    awaitingPlayAfterTrackLoad: Boolean(shouldPlay),\n    awaitingForceLoad: Boolean(shouldForceLoad)\n  };\n}\n\n/**\n * Wraps an area which shares a common [`playerContext`](#playercontext)\n */\nexport class PlayerContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...defaultState,\n      // index matching requested track (whether track has loaded or not)\n      activeTrackIndex: convertToNumberWithinIntervalBounds(\n        props.startingTrackIndex,\n        0\n      ),\n      // whether we're waiting on loading metadata for the active track\n      trackLoading: isPlaylistValid(props.playlist),\n      // the current timestamp on the active track in seconds\n      currentTime: convertToNumberWithinIntervalBounds(props.startingTime, 0),\n      // the latest volume of the media, between 0 and 1.\n      volume: convertToNumberWithinIntervalBounds(props.defaultVolume, 0, 1),\n      // true if the media has been muted\n      muted: props.defaultMuted,\n      // whether to loop the active track\n      loop: props.defaultRepeatStrategy === 'track',\n      // true if playlist should continue at start after completion\n      cycle: props.defaultRepeatStrategy === 'playlist',\n      // whether to randomly pick next track from playlist after one finishes\n      shuffle: props.defaultShuffle,\n      // Rate at which media should be played. 1.0 is normal speed.\n      playbackRate: props.defaultPlaybackRate,\n      // true if user is currently dragging mouse to change the volume\n      setVolumeInProgress: false,\n      // initialize shouldRequestPlayOnNextUpdate from autoplay prop\n      shouldRequestPlayOnNextUpdate:\n        props.autoplay && isPlaylistValid(props.playlist),\n      awaitingForceLoad: false,\n      // playlist prop copied to state (for getDerivedStateFromProps)\n      __playlist__: props.playlist,\n      // load overrides from previously-captured state snapshot\n      ...(props.initialStateSnapshot\n        ? restoreStateFromSnapshot(props.initialStateSnapshot, props)\n        : {})\n    };\n\n    // volume at last time we were unmuted and not actively setting volume\n    this.lastStableVolume = this.state.volume;\n\n    // used to keep track of play history when we are shuffling\n    this.shuffler = new ShuffleManager(getSourceList(props.playlist), {\n      allowBackShuffle: props.allowBackShuffle\n    });\n\n    // html media element used for playback\n    this.media = null;\n\n    this.videoHostElementList = [];\n    this.videoHostOccupiedCallbacks = new Map();\n    this.videoHostVacatedCallbacks = new Map();\n\n    // bind internal methods\n    this.onTrackPlaybackFailure = this.onTrackPlaybackFailure.bind(this);\n\n    // bind callback methods to pass to descendant elements\n    this.togglePause = this.togglePause.bind(this);\n    this.selectTrackIndex = this.selectTrackIndex.bind(this);\n    this.forwardSkip = this.forwardSkip.bind(this);\n    this.backSkip = this.backSkip.bind(this);\n    this.seekPreview = this.seekPreview.bind(this);\n    this.seekComplete = this.seekComplete.bind(this);\n    this.setVolume = this.setVolume.bind(this);\n    this.setVolumeComplete = this.setVolumeComplete.bind(this);\n    this.toggleMuted = this.toggleMuted.bind(this);\n    this.toggleShuffle = this.toggleShuffle.bind(this);\n    this.setRepeatStrategy = this.setRepeatStrategy.bind(this);\n    this.setPlaybackRate = this.setPlaybackRate.bind(this);\n    this.registerVideoHostElement = this.registerVideoHostElement.bind(this);\n    this.renderVideoIntoHostElement = this.renderVideoIntoHostElement.bind(\n      this\n    );\n    this.unregisterVideoHostElement = this.unregisterVideoHostElement.bind(\n      this\n    );\n    this.updateVideoHostElement = this.updateVideoHostElement.bind(this);\n\n    // bind media event handlers\n    this.handleMediaPlay = this.handleMediaPlay.bind(this);\n    this.handleMediaPause = this.handleMediaPause.bind(this);\n    this.handleMediaSrcrequest = this.handleMediaSrcrequest.bind(this);\n    this.handleMediaEnded = this.handleMediaEnded.bind(this);\n    this.handleMediaEmptied = this.handleMediaEmptied.bind(this);\n    this.handleMediaStalled = this.handleMediaStalled.bind(this);\n    this.handleMediaCanplaythrough = this.handleMediaCanplaythrough.bind(this);\n    this.handleMediaTimeupdate = this.handleMediaTimeupdate.bind(this);\n    this.handleMediaLoadedmetadata = this.handleMediaLoadedmetadata.bind(this);\n    this.handleMediaVolumechange = this.handleMediaVolumechange.bind(this);\n    this.handleMediaDurationchange = this.handleMediaDurationchange.bind(this);\n    this.handleMediaProgress = this.handleMediaProgress.bind(this);\n    this.handleMediaLoopchange = this.handleMediaLoopchange.bind(this);\n    this.handleMediaRatechange = this.handleMediaRatechange.bind(this);\n  }\n\n  componentDidMount() {\n    const media = (this.media = createCustomMediaElement(\n      this.props.createMediaElement()\n    ));\n\n    const {\n      defaultPlaybackRate,\n      crossOrigin,\n      playlist,\n      autoplayDelayInSeconds,\n      mediaElementRef,\n      getPosterImageForTrack,\n      getMediaTitleAttributeForTrack,\n      onActiveTrackUpdate\n    } = this.props;\n    const {\n      volume,\n      muted,\n      playbackRate,\n      loop,\n      activeTrackIndex,\n      shouldRequestPlayOnNextUpdate\n    } = this.state;\n\n    // initialize media properties\n    // We used to set currentTime here.. now waiting for loadedmetadata.\n    // This avoids an issue where some browsers ignore or delay currentTime\n    // updates when in the HAVE_NOTHING state.\n    media.defaultPlaybackRate = defaultPlaybackRate;\n    media.crossOrigin = crossOrigin;\n    media.volume = volume;\n    media.muted = muted;\n    media.playbackRate = playbackRate;\n    media.loop = loop;\n    media.setAttribute('playsinline', '');\n    media.setAttribute('webkit-playsinline', '');\n    media.setAttribute('preload', 'metadata');\n    media.setAttribute(\n      'poster',\n      getPosterImageForTrack(playlist[activeTrackIndex])\n    );\n    media.setAttribute(\n      'title',\n      getMediaTitleAttributeForTrack(playlist[activeTrackIndex])\n    );\n    // add listeners for media events\n    media.addEventListener('play', this.handleMediaPlay);\n    media.addEventListener('pause', this.handleMediaPause);\n    media.addEventListener('ended', this.handleMediaEnded);\n    media.addEventListener('stalled', this.handleMediaStalled);\n    media.addEventListener('emptied', this.handleMediaEmptied);\n    media.addEventListener('canplaythrough', this.handleMediaCanplaythrough);\n    media.addEventListener('timeupdate', this.handleMediaTimeupdate);\n    media.addEventListener('loadedmetadata', this.handleMediaLoadedmetadata);\n    media.addEventListener('volumechange', this.handleMediaVolumechange);\n    media.addEventListener('durationchange', this.handleMediaDurationchange);\n    media.addEventListener('progress', this.handleMediaProgress);\n    media.addEventListener('ratechange', this.handleMediaRatechange);\n    // add listeners for special events\n    media.addEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.addEventListener('loopchange', this.handleMediaLoopchange);\n\n    // set source elements for current track\n    this.setMediaElementSources();\n\n    // initially mount media element in the hidden container (this may change)\n    this.mediaContainer.appendChild(media);\n\n    if (shouldRequestPlayOnNextUpdate) {\n      this.setState({\n        shouldRequestPlayOnNextUpdate: false\n      });\n      this.delayTimeout = setTimeout(() => {\n        this.togglePause(false);\n      }, autoplayDelayInSeconds * 1000);\n    }\n\n    if (mediaElementRef) {\n      mediaElementRef(media);\n    }\n\n    if (onActiveTrackUpdate) {\n      onActiveTrackUpdate(playlist[activeTrackIndex], activeTrackIndex);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const newPlaylist = nextProps.playlist;\n\n    if (newPlaylist === prevState.__playlist__) {\n      // reference comparison is equal so we'll\n      // assume the playlist is unchanged.\n      return null;\n    }\n\n    const baseNewState = {\n      __playlist__: newPlaylist\n    };\n\n    // check if the new playlist is invalid\n    if (!isPlaylistValid(newPlaylist)) {\n      return {\n        ...defaultState,\n        ...baseNewState,\n        activeTrackIndex: 0,\n        trackLoading: false\n      };\n    }\n\n    // check if the activeTrackIndex doesn't need to be updated\n    const prevSources = getTrackSources(\n      prevState.__playlist__,\n      prevState.activeTrackIndex\n    );\n\n    if (newPlaylist[prevState.activeTrackIndex]) {\n      // the sources if we stay on the same track index\n      const currentSources = getTrackSources(\n        newPlaylist,\n        prevState.activeTrackIndex\n      );\n      // non-comprehensive but probably accurate check\n      if (prevSources[0].src === currentSources[0].src) {\n        // our active track index already matches\n        return baseNewState;\n      }\n    }\n\n    /* if the track we're already playing is in the new playlist, update the\n     * activeTrackIndex.\n     */\n    const newTrackIndex = findTrackIndexByUrl(newPlaylist, prevSources[0].src);\n    if (newTrackIndex !== -1) {\n      return {\n        ...baseNewState,\n        activeTrackIndex: newTrackIndex\n      };\n    }\n\n    // if not, then load the first track in the new playlist, and pause.\n    return {\n      ...baseNewState,\n      ...getGoToTrackState({ prevState, index: 0, shouldPlay: false }),\n      mediaCannotPlay: false,\n      awaitingPlayAfterTrackLoad: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.media.defaultPlaybackRate = this.props.defaultPlaybackRate;\n    this.media.crossOrigin = this.props.crossOrigin;\n\n    this.shuffler.setList(getSourceList(this.props.playlist));\n    this.shuffler.setOptions({\n      allowBackShuffle: this.props.allowBackShuffle\n    });\n\n    const prevSources = getTrackSources(\n      prevProps.playlist,\n      prevState.activeTrackIndex\n    );\n    const newSources = getTrackSources(\n      this.props.playlist,\n      this.state.activeTrackIndex\n    );\n    const prevTrack = prevProps.playlist[prevState.activeTrackIndex];\n    const newTrack = this.props.playlist[this.state.activeTrackIndex];\n    if (\n      this.state.awaitingForceLoad ||\n      prevSources[0].src !== newSources[0].src\n    ) {\n      this.setMediaElementSources();\n      this.media.setAttribute(\n        'poster',\n        this.props.getPosterImageForTrack(newTrack)\n      );\n      this.media.setAttribute(\n        'title',\n        this.props.getMediaTitleAttributeForTrack(newTrack)\n      );\n      this.setState({\n        awaitingForceLoad: false\n      });\n      if (!this.state.shuffle) {\n        // after toggling off shuffle, we defer clearing the shuffle\n        // history until we actually change tracks - if the user quickly\n        // toggles  shuffle off then back on again, we don't want to have\n        // lost our history.\n        this.shuffler.clear();\n      }\n    }\n\n    if (this.props.onActiveTrackUpdate && prevTrack !== newTrack) {\n      this.props.onActiveTrackUpdate(newTrack, this.state.activeTrackIndex);\n    }\n\n    if (prevProps !== this.props && !this.media.paused) {\n      // update running media session based on new props\n      this.stealMediaSession();\n    }\n\n    if (this.state.shouldRequestPlayOnNextUpdate) {\n      this.setState({\n        shouldRequestPlayOnNextUpdate: false\n      });\n      // media.currentSrc is updated asynchronously so we should\n      // play async to avoid weird intermediate state issues\n      setTimeout(() => {\n        this.togglePause(false);\n      });\n    }\n\n    clearTimeout(this.snapshotUpdateTimeout);\n    this.snapshotUpdateTimeout = setTimeout(() => {\n      if (this.props.onStateSnapshot) {\n        this.props.onStateSnapshot(getStateSnapshot(this.state));\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    const { media } = this;\n    // Media element creation will have failed if MutationObserver isn't\n    // supported by the browser. The parent might use an Error Boundary\n    // to display a fallback and so we try to avoid triggering *additional*\n    // errors while the component unmounts.\n    if (media) {\n      // remove listeners for media events\n      media.removeEventListener('play', this.handleMediaPlay);\n      media.removeEventListener('pause', this.handleMediaPause);\n      media.removeEventListener('ended', this.handleMediaEnded);\n      media.removeEventListener('stalled', this.handleMediaStalled);\n      media.removeEventListener('emptied', this.handleMediaEmptied);\n      media.removeEventListener(\n        'canplaythrough',\n        this.handleMediaCanplaythrough\n      );\n      media.removeEventListener('timeupdate', this.handleMediaTimeupdate);\n      media.removeEventListener(\n        'loadedmetadata',\n        this.handleMediaLoadedmetadata\n      );\n      media.removeEventListener('volumechange', this.handleMediaVolumechange);\n      media.removeEventListener(\n        'durationchange',\n        this.handleMediaDurationchange\n      );\n      media.removeEventListener('progress', this.handleMediaProgress);\n      media.removeEventListener('ratechange', this.handleMediaRatechange);\n      // remove special event listeners on the media element\n      media.removeEventListener('srcrequest', this.handleMediaSrcrequest);\n      media.removeEventListener('loopchange', this.handleMediaLoopchange);\n\n      const sourceElements = media.querySelectorAll('source');\n      for (const sourceElement of sourceElements) {\n        sourceElement.removeEventListener('error', this.onTrackPlaybackFailure);\n      }\n    }\n    clearTimeout(this.gapLengthTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  stealMediaSession() {\n    if (\n      // eslint-disable-next-line no-undef\n      !(window.MediaSession && navigator.mediaSession instanceof MediaSession)\n    ) {\n      return;\n    }\n    // eslint-disable-next-line no-undef\n    navigator.mediaSession.metadata = new MediaMetadata(\n      this.props.playlist[this.state.activeTrackIndex]\n    );\n    supportableMediaSessionActions\n      .map(action => {\n        if (this.props.supportedMediaSessionActions.indexOf(action) === -1) {\n          return null;\n        }\n        const seekLength = this.props.mediaSessionSeekLengthInSeconds;\n        switch (action) {\n          case 'play':\n            return this.togglePause.bind(this, false);\n          case 'pause':\n            return this.togglePause.bind(this, true);\n          case 'previoustrack':\n            return this.backSkip;\n          case 'nexttrack':\n            return this.forwardSkip;\n          case 'seekbackward':\n            return () => (this.media.currentTime -= seekLength);\n          case 'seekforward':\n            return () => (this.media.currentTime += seekLength);\n          default:\n            return undefined;\n        }\n      })\n      .forEach((handler, i) => {\n        navigator.mediaSession.setActionHandler(\n          supportableMediaSessionActions[i],\n          handler\n        );\n      });\n  }\n\n  setMediaElementSources() {\n    // remove current sources\n    const { playlist } = this.props;\n    let firstChild;\n    while ((firstChild = this.media.firstChild)) {\n      this.media.removeChild(firstChild);\n    }\n    if (isPlaylistValid(playlist)) {\n      const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n      // add new sources\n      for (const source of sources) {\n        const sourceElement = document.createElement('source');\n        sourceElement.src = source.src;\n        if (source.type) {\n          sourceElement.type = source.type;\n        }\n        sourceElement.addEventListener('error', this.onTrackPlaybackFailure);\n        this.media.appendChild(sourceElement);\n      }\n    }\n    // cancel playback and re-scan new sources\n    this.media.load();\n  }\n\n  onTrackPlaybackFailure(event) {\n    this.setState({\n      mediaCannotPlay: true\n    });\n    if (this.props.onTrackPlaybackFailure) {\n      this.props.onTrackPlaybackFailure(\n        this.props.playlist[this.state.activeTrackIndex],\n        this.state.activeTrackIndex,\n        event\n      );\n    }\n  }\n\n  registerVideoHostElement(hostElement, { onHostOccupied, onHostVacated }) {\n    this.videoHostElementList = this.videoHostElementList.concat(hostElement);\n    this.videoHostOccupiedCallbacks.set(hostElement, onHostOccupied);\n    this.videoHostVacatedCallbacks.set(hostElement, onHostVacated);\n  }\n\n  renderVideoIntoHostElement(hostElement) {\n    if (this.videoHostElementList.indexOf(hostElement) === -1) {\n      return;\n    }\n    cancelAnimationFrame(this.videoHostUpdateRaf);\n    this.videoHostUpdateRaf = requestAnimationFrame(() =>\n      this.updateVideoHostElement(hostElement)\n    );\n  }\n\n  unregisterVideoHostElement(hostElement) {\n    this.videoHostElementList = this.videoHostElementList.filter(\n      elem => elem !== hostElement\n    );\n    this.videoHostOccupiedCallbacks.delete(hostElement);\n    this.videoHostVacatedCallbacks.delete(hostElement);\n    if (this.media.parentNode === hostElement) {\n      this.updateVideoHostElement();\n    }\n  }\n\n  updateVideoHostElement(hostElement) {\n    if (!hostElement) {\n      hostElement = this.videoHostElementList[0] || this.mediaContainer;\n    } else {\n      // move hostElement to front of list\n      this.videoHostElementList = [hostElement].concat(\n        this.videoHostElementList.filter(elem => elem !== hostElement)\n      );\n    }\n    const playing = !this.media.paused;\n    const oldHostElement = this.media.parentNode;\n    if (hostElement === oldHostElement) {\n      return;\n    }\n    hostElement.appendChild(this.media);\n    // according to the HTML spec playback should continue, but\n    // some browsers pause the element whenever it is moved around, so\n    // let's make sure playback resumes if that's the case.\n    if (playing && this.media.paused) {\n      this.media.play();\n    }\n    const onVacated = this.videoHostVacatedCallbacks.get(oldHostElement);\n    if (onVacated) {\n      onVacated(this.media);\n    }\n    const onOccupied = this.videoHostOccupiedCallbacks.get(hostElement);\n    if (onOccupied) {\n      onOccupied(this.media);\n    }\n  }\n\n  handleMediaPlay() {\n    this.setState(\n      state =>\n        state.paused === false && state.awaitingPlayAfterTrackLoad === false\n          ? null\n          : { paused: false, awaitingPlayAfterTrackLoad: false }\n    );\n    this.stealMediaSession();\n  }\n\n  handleMediaPause() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaSrcrequest(e) {\n    const { playlist } = this.props;\n    const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n    if (arrayFindIndex(sources, s => s.src === e.srcRequested) !== -1) {\n      // we're good! nothing to update.\n      return;\n    }\n    // looks like 'src' was set from outside our component.\n    // let's see if we can use it.\n    const newTrackIndex = findTrackIndexByUrl(playlist, e.srcRequested);\n    if (newTrackIndex === -1) {\n      logError(\n        `Source '${e.srcRequested}' does not exist in the loaded playlist. ` +\n          `Make sure you've updated the 'playlist' prop to ` +\n          `PlayerContextProvider before you select this track!`\n      );\n      return;\n    }\n    this.selectTrackIndex(newTrackIndex);\n  }\n\n  handleMediaEnded() {\n    if (this.state.seekInProgress) {\n      // nothing to do if we're in the middle of a seek\n      // (this can happen if we're in seekMode: immediate)\n      return;\n    }\n    clearTimeout(this.gapLengthTimeout);\n    const { playlist, loadFirstTrackOnPlaylistComplete } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    const { cycle, activeTrackIndex } = this.state;\n    if (!cycle && activeTrackIndex + 1 >= playlist.length) {\n      if (loadFirstTrackOnPlaylistComplete) {\n        this.goToTrack({ index: 0, shouldPlay: false, shouldForceLoad: true });\n      }\n      return;\n    }\n    this.gapLengthTimeout = setTimeout(\n      this.forwardSkip,\n      this.props.gapLengthInSeconds * 1000\n    );\n  }\n\n  handleMediaStalled() {\n    this.setState(state => (state.stalled === true ? null : { stalled: true }));\n  }\n\n  handleMediaEmptied() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaCanplaythrough() {\n    this.setState(\n      state => (state.stalled === false ? null : { stalled: false })\n    );\n  }\n\n  handleMediaTimeupdate() {\n    const { currentTime, played } = this.media;\n    if (this.state.trackLoading) {\n      // correct currentTime to preset, if applicable, during load\n      this.media.currentTime = this.state.currentTime;\n      return;\n    }\n    this.setState({\n      currentTime,\n      playedRanges: getTimeRangesArray(played)\n    });\n  }\n\n  handleMediaLoadedmetadata() {\n    if (this.media.currentTime !== this.state.currentTime) {\n      this.media.currentTime = this.state.currentTime;\n    }\n    this.setState(\n      state => (state.trackLoading === false ? null : { trackLoading: false })\n    );\n  }\n\n  handleMediaVolumechange() {\n    const { volume, muted } = this.media;\n    this.setState({ volume, muted });\n  }\n\n  handleMediaDurationchange() {\n    const { duration } = this.media;\n    this.setState({ duration });\n  }\n\n  handleMediaProgress() {\n    this.setState({\n      bufferedRanges: getTimeRangesArray(this.media.buffered),\n      seekableRanges: getTimeRangesArray(this.media.seekable)\n    });\n  }\n\n  handleMediaLoopchange() {\n    const { loop } = this.media;\n    this.setState(state => (state.loop === loop ? null : { loop }));\n  }\n\n  handleMediaRatechange() {\n    const { playbackRate } = this.media;\n    this.setState(\n      state => (state.playbackRate === playbackRate ? null : { playbackRate })\n    );\n  }\n\n  togglePause(value) {\n    clearTimeout(this.delayTimeout);\n    const pause = typeof value === 'boolean' ? value : !this.state.paused;\n    if (pause) {\n      this.media.pause();\n      return;\n    }\n    if (!this.media.currentSrc) {\n      return;\n    }\n    try {\n      const playPromise = this.media.play();\n      if (playPromise && typeof playPromise.catch === 'function') {\n        playPromise\n          .catch(err => {\n            // AbortError is pretty much always called because we're skipping\n            // tracks quickly or hitting pause before a track has a chance to\n            // play. It's pretty safe to just ignore these error messages.\n            if (err.name !== 'AbortError') {\n              return Promise.reject(err);\n            }\n          })\n          .catch(playErrorHandler);\n      }\n    } catch (err) {\n      playErrorHandler(err);\n    }\n  }\n\n  // assumes playlist is valid - don't call without checking\n  goToTrack(args) {\n    clearTimeout(this.delayTimeout);\n    this.setState(prevState => getGoToTrackState({ prevState, ...args }));\n  }\n\n  selectTrackIndex(index) {\n    const { playlist } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    if (index < 0 || index > playlist.length) {\n      logWarning(`Playlist index ${index} is out of bounds!`);\n      return;\n    }\n    if (this.state.shuffle) {\n      this.shuffler.pickNextItem(index, this.state.activeTrackIndex);\n    }\n    this.goToTrack({ index });\n  }\n\n  backSkip() {\n    const { playlist, stayOnBackSkipThreshold } = this.props;\n    const { media } = this;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      media.currentTime >= stayOnBackSkipThreshold ||\n      (!cycle && activeTrackIndex < 1)\n    ) {\n      media.currentTime = 0;\n      return;\n    }\n    let index;\n    if (shuffle) {\n      const previousItem = this.shuffler.findPreviousItem(activeTrackIndex);\n      if (previousItem === undefined) {\n        // if we aren't allowing backShuffle then we'll hit a stopping point.\n        media.currentTime = 0;\n        return;\n      }\n      index = findTrackIndexByUrl(playlist, previousItem);\n    } else {\n      index = activeTrackIndex - 1;\n      if (index < 0) {\n        index = playlist.length - 1;\n      }\n    }\n    this.goToTrack({ index, shouldForceLoad: true });\n  }\n\n  forwardSkip() {\n    const { playlist } = this.props;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      (!cycle && activeTrackIndex + 1 >= playlist.length)\n    ) {\n      return;\n    }\n    let index;\n    if (shuffle) {\n      index = findTrackIndexByUrl(\n        playlist,\n        this.shuffler.findNextItem(activeTrackIndex)\n      );\n    } else {\n      index = activeTrackIndex + 1;\n      if (index >= playlist.length) {\n        index = 0;\n      }\n    }\n    this.goToTrack({ index, shouldForceLoad: true });\n  }\n\n  seekPreview(targetTime) {\n    if (!isPlaylistValid(this.props.playlist)) {\n      return;\n    }\n    const baseStateUpdate = {\n      seekPreviewTime: targetTime,\n      seekInProgress: true\n    };\n    switch (this.props.seekMode) {\n      case 'paused':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (!this.state.paused) {\n          this.togglePause(true);\n        }\n        break;\n      case 'immediate':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (this.state.awaitingResumeOnSeekComplete && !this.media.ended) {\n          // if we earlier encountered an 'ended' state,\n          // un-pausing becomes necessary to resume playback\n          this.togglePause(false);\n        }\n        break;\n      case 'onrelease':\n        this.setState(baseStateUpdate);\n        break;\n    }\n  }\n\n  seekComplete(targetTime) {\n    const { seekPreviewTime, awaitingResumeOnSeekComplete } = this.state;\n    const baseStateUpdate = {\n      seekInProgress: false,\n      awaitingResumeOnSeekComplete: false\n    };\n    const currentTime =\n      typeof targetTime === 'number' ? targetTime : seekPreviewTime;\n\n    if (isNaN(currentTime)) {\n      this.setState(baseStateUpdate);\n      return;\n    }\n    this.setState({\n      ...baseStateUpdate,\n      /* we'll update currentTime on the media listener hook anyway,\n       * but that might not happen for a bit... so the optimistic update\n       * helps us avoid the progress bar jumping around and confusing the user.\n       * https://github.com/benwiley4000/cassette/issues/209\n       */\n      currentTime\n    });\n    this.media.currentTime = currentTime;\n    if (awaitingResumeOnSeekComplete) {\n      if (this.media.ended) {\n        this.forwardSkip();\n      } else {\n        this.togglePause(false);\n      }\n    }\n  }\n\n  setVolume(volume, inProgress = true) {\n    if (inProgress && !this.state.setVolumeInProgress) {\n      this.setState({\n        setVolumeInProgress: true\n      });\n    }\n    const volumeInBounds = convertToNumberWithinIntervalBounds(volume, 0, 1);\n    this.media.muted = volumeInBounds === 0 ? true : false;\n    this.media.volume = volumeInBounds;\n  }\n\n  setVolumeComplete(volume) {\n    if (typeof volume === 'number') {\n      this.setVolume(volume, false);\n    }\n    this.setState({\n      setVolumeInProgress: false\n    });\n    if (!this.media.muted) {\n      this.lastStableVolume = this.media.volume;\n    }\n  }\n\n  toggleMuted(value) {\n    const muted = typeof value === 'boolean' ? value : !this.state.muted;\n    this.media.muted = muted;\n    if (!muted) {\n      this.media.volume = this.lastStableVolume;\n    }\n  }\n\n  toggleShuffle(value) {\n    const shuffle = typeof value === 'boolean' ? value : !this.state.shuffle;\n    this.setState({ shuffle });\n  }\n\n  setRepeatStrategy(repeatStrategy) {\n    if (repeatStrategyOptions.indexOf(repeatStrategy) === -1) {\n      logWarning(\n        'repeatStrategy \"' +\n          repeatStrategy +\n          '\" is not one of: ' +\n          repeatStrategyOptions.split(', ') +\n          '.'\n      );\n      return;\n    }\n    switch (repeatStrategy) {\n      case 'track':\n        // state update is automatic\n        this.media.loop = true;\n        break;\n      case 'playlist':\n        this.setState({\n          loop: false,\n          cycle: true\n        });\n        this.media.loop = false;\n        break;\n      case 'none':\n        this.setState({\n          loop: false,\n          cycle: false\n        });\n        this.media.loop = false;\n        break;\n    }\n  }\n\n  setPlaybackRate(rate) {\n    this.media.playbackRate = rate;\n  }\n\n  getControlProps() {\n    const { props, state } = this;\n    const playerContext = {\n      playlist: props.playlist,\n      activeTrackIndex: state.activeTrackIndex,\n      trackLoading: state.trackLoading,\n      paused: state.paused,\n      currentTime: state.currentTime,\n      seekPreviewTime: state.seekPreviewTime,\n      seekInProgress: state.seekInProgress,\n      awaitingPlayResume:\n        state.awaitingResumeOnSeekComplete || state.awaitingPlayAfterTrackLoad,\n      duration: state.duration,\n      bufferedRanges: state.bufferedRanges,\n      playedRanges: state.playedRanges,\n      seekableRanges: state.seekableRanges,\n      volume: state.volume,\n      muted: state.muted,\n      shuffle: state.shuffle,\n      stalled: state.stalled,\n      playbackRate: state.playbackRate,\n      mediaCannotPlay: state.mediaCannotPlay,\n      setVolumeInProgress: state.setVolumeInProgress,\n      repeatStrategy: getRepeatStrategy(state.loop, state.cycle),\n      registerVideoHostElement: this.registerVideoHostElement,\n      renderVideoIntoHostElement: this.renderVideoIntoHostElement,\n      unregisterVideoHostElement: this.unregisterVideoHostElement,\n      onTogglePause: this.togglePause,\n      onSelectTrackIndex: this.selectTrackIndex,\n      onBackSkip: this.backSkip,\n      onForwardSkip: this.forwardSkip,\n      onSeekPreview: this.seekPreview,\n      onSeekComplete: this.seekComplete,\n      onSetVolume: this.setVolume,\n      onSetVolumeComplete: this.setVolumeComplete,\n      onToggleMuted: this.toggleMuted,\n      onToggleShuffle: this.toggleShuffle,\n      onSetRepeatStrategy: this.setRepeatStrategy,\n      onSetPlaybackRate: this.setPlaybackRate\n    };\n    if (this.playerContext) {\n      // only update this.playerContext if something has changed\n      for (const key of Object.keys(this.playerContext)) {\n        if (playerContext[key] !== this.playerContext[key]) {\n          this.playerContext = playerContext;\n          break;\n        }\n      }\n    } else {\n      // first time - nothing to compare\n      this.playerContext = playerContext;\n    }\n    return this.playerContext;\n  }\n\n  render() {\n    const playerContext = this.getControlProps();\n    return (\n      <Fragment>\n        <div ref={elem => (this.mediaContainer = elem)} hidden />\n        <PlayerContext.Provider value={playerContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(playerContext)\n            : this.props.children}\n        </PlayerContext.Provider>\n      </Fragment>\n    );\n  }\n}\n\nPlayerContextProvider.propTypes = {\n  playlist: PropTypes.arrayOf(PlayerPropTypes.track.isRequired).isRequired,\n  autoplay: PropTypes.bool.isRequired,\n  createMediaElement: PropTypes.func.isRequired,\n  autoplayDelayInSeconds: PropTypes.number.isRequired,\n  gapLengthInSeconds: PropTypes.number.isRequired,\n  crossOrigin: PlayerPropTypes.crossOriginAttribute,\n  defaultVolume: PropTypes.number.isRequired,\n  defaultMuted: PropTypes.bool,\n  defaultRepeatStrategy: PlayerPropTypes.repeatStrategy.isRequired,\n  defaultShuffle: PropTypes.bool,\n  defaultPlaybackRate: PropTypes.number.isRequired,\n  startingTime: PropTypes.number.isRequired,\n  startingTrackIndex: PropTypes.number.isRequired,\n  loadFirstTrackOnPlaylistComplete: PropTypes.bool,\n  seekMode: PlayerPropTypes.seekMode.isRequired,\n  maintainPlaybackRate: PropTypes.bool.isRequired,\n  allowBackShuffle: PropTypes.bool,\n  stayOnBackSkipThreshold: PropTypes.number.isRequired,\n  supportedMediaSessionActions: PropTypes.arrayOf(\n    PlayerPropTypes.mediaSessionAction.isRequired\n  ).isRequired,\n  mediaSessionSeekLengthInSeconds: PropTypes.number.isRequired,\n  mediaElementRef: PropTypes.func,\n  initialStateSnapshot: PropTypes.shape({\n    __unstable__: PropTypes.object.isRequired\n  }),\n  onStateSnapshot: PropTypes.func,\n  onActiveTrackUpdate: PropTypes.func,\n  onTrackPlaybackFailure: PropTypes.func,\n  getPosterImageForTrack: PropTypes.func.isRequired,\n  getMediaTitleAttributeForTrack: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nPlayerContextProvider.defaultProps = {\n  autoplay: false,\n  autoplayDelayInSeconds: 0,\n  createMediaElement: () => document.createElement('video'),\n  gapLengthInSeconds: 0,\n  defaultVolume: 1,\n  defaultMuted: false,\n  defaultRepeatStrategy: 'playlist',\n  defaultShuffle: false,\n  defaultPlaybackRate: 1,\n  startingTime: 0,\n  startingTrackIndex: 0,\n  loadFirstTrackOnPlaylistComplete: true,\n  seekMode: 'immediate',\n  maintainPlaybackRate: false,\n  allowBackShuffle: false,\n  stayOnBackSkipThreshold: 5,\n  supportedMediaSessionActions: ['play', 'pause', 'previoustrack', 'nexttrack'],\n  mediaSessionSeekLengthInSeconds: 10,\n  getPosterImageForTrack(track) {\n    return track && track.artwork ? track.artwork[0].src : '';\n  },\n  getMediaTitleAttributeForTrack: getDisplayText\n};\n\nexport class PlayerContextGroupMember extends Component {\n  componentDidMount() {\n    this.props.groupContext.registerMediaElement(this.mediaElement);\n  }\n\n  componentWillUnmount() {\n    // Media element might not exist\n    // (see componentWillUnmount of PlayerContextProvider)\n    if (this.mediaElement) {\n      this.props.groupContext.unregisterMediaElement(this.mediaElement);\n    }\n  }\n\n  render() {\n    const { groupContext, props } = this.props;\n    const { mediaElementRef, ...rest } = props;\n    return (\n      <PlayerContextProvider\n        {...groupContext.groupProps}\n        {...rest}\n        mediaElementRef={ref => {\n          if (mediaElementRef) {\n            mediaElementRef(ref);\n          }\n          this.mediaElement = ref;\n        }}\n      />\n    );\n  }\n}\n\nPlayerContextGroupMember.propTypes = {\n  groupContext: PropTypes.shape({\n    groupProps: PropTypes.object.isRequired,\n    registerMediaElement: PropTypes.func.isRequired,\n    unregisterMediaElement: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction PlayerContextGroupConsumer(props) {\n  return (\n    <GroupContext.Consumer>\n      {groupContext => {\n        if (!groupContext) {\n          return createElement(PlayerContextProvider, props);\n        }\n        return createElement(PlayerContextGroupMember, {\n          groupContext,\n          props\n        });\n      }}\n    </GroupContext.Consumer>\n  );\n}\n\nexport default PlayerContextGroupConsumer;\n","import isPlaylistValid from './isPlaylistValid';\nimport getTrackSources from './getTrackSources';\nimport findTrackIndexByUrl from './findTrackIndexByUrl';\n\nexport function getStateSnapshot(state) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    __playlist__\n  } = state;\n  return {\n    __unstable__: {\n      paused,\n      currentTime,\n      activeTrackIndex,\n      volume,\n      muted,\n      loop,\n      cycle,\n      shuffle,\n      playbackRate,\n      activeTrackSrc: isPlaylistValid(__playlist__)\n        ? getTrackSources(__playlist__, activeTrackIndex)[0].src\n        : null\n    }\n  };\n}\n\nexport function restoreStateFromSnapshot(snapshot, props) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    activeTrackSrc\n  } = snapshot.__unstable__;\n  const restoredStateValues = {};\n  if (isPlaylistValid(props.playlist) && typeof paused === 'boolean') {\n    // using awaitingPlay instead of paused triggers an animation\n    restoredStateValues.awaitingPlay = !paused;\n  }\n  if (typeof volume === 'number' && volume >= 0 && volume <= 1) {\n    restoredStateValues.volume = volume;\n  }\n  if (typeof muted === 'boolean') {\n    restoredStateValues.muted = muted;\n  }\n  if (typeof loop === 'boolean') {\n    restoredStateValues.loop = loop;\n  }\n  if (typeof cycle === 'boolean') {\n    restoredStateValues.cycle = cycle;\n  }\n  if (typeof shuffle === 'boolean') {\n    restoredStateValues.shuffle = shuffle;\n  }\n  if (typeof playbackRate === 'number') {\n    restoredStateValues.playbackRate = playbackRate;\n  }\n  let useCurrentTime = false;\n  if (\n    typeof activeTrackSrc === 'string' &&\n    typeof activeTrackIndex === 'number' &&\n    activeTrackIndex >= 0\n  ) {\n    // let's try staying on the same track index\n    const currentSrc =\n      props.playlist[activeTrackIndex] &&\n      getTrackSources(props.playlist, activeTrackIndex)[0].src;\n    if (currentSrc && activeTrackSrc === currentSrc) {\n      restoredStateValues.activeTrackIndex = activeTrackIndex;\n      useCurrentTime = true;\n    } else {\n      /* if the track we were playing before is in the new playlist,\n       * update the activeTrackIndex.\n       */\n      const newTrackIndex = findTrackIndexByUrl(props.playlist, activeTrackSrc);\n      if (newTrackIndex !== -1) {\n        restoredStateValues.activeTrackIndex = newTrackIndex;\n        useCurrentTime = true;\n      }\n    }\n  }\n  if (useCurrentTime && typeof currentTime === 'number' && currentTime >= 0) {\n    restoredStateValues.currentTime = currentTime;\n  }\n  return restoredStateValues;\n}\n","// TODO: support Preact, Inferno, etc.\nfunction getReactParentNameStack(componentInstance) {\n  const fiber = componentInstance._reactInternalFiber;\n  const parentStack = [];\n  let owner = fiber;\n  while ((owner = owner._debugOwner)) {\n    if (owner.type.name) {\n      parentStack.push(owner.type.name);\n    }\n  }\n  return parentStack;\n}\n\nexport default getReactParentNameStack;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport PlayerContext from './PlayerContext';\n\nimport { logWarning } from './utils/console';\nimport getReactParentNameStack from './utils/getReactParentNameStack';\n\nclass PlayerContextConsumer extends PureComponent {\n  render() {\n    const { children, filterList } = this.props;\n    if (!filterList) {\n      if (!this.warnedAboutFilterList) {\n        let warning = `\n          Please pass the filterList prop to PlayerContextConsumer in order\n          to avoid unnecessarily frequent re-renders, e.g.\n\n          const filterList = ['paused', 'onTogglePause'];\n          // ...\n          <PlayerContextConsumer filterList={filterList}>\n            {({ paused, onTogglePause }) => {\n              return <div>{/* ... */}</div>;\n            }}\n          </PlayerContextConsumer>\n        `;\n        for (const parentName of getReactParentNameStack(this)) {\n          warning += `\n            Rendered by ${parentName}`;\n        }\n        logWarning(warning);\n        this.warnedAboutFilterList = true;\n      }\n      return <PlayerContext.Consumer>{children}</PlayerContext.Consumer>;\n    }\n\n    const flags = PlayerContext.__cassetteGetObservedBits(filterList);\n    return (\n      <PlayerContext.Consumer unstable_observedBits={flags}>\n        {playerContext => {\n          const usedContext = {};\n          for (const name of filterList) {\n            if (playerContext.hasOwnProperty(name)) {\n              usedContext[name] = playerContext[name];\n            }\n          }\n          return children(usedContext);\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nPlayerContextConsumer.propTypes = {\n  children: PropTypes.func.isRequired,\n  filterList: PropTypes.arrayOf(PropTypes.string.isRequired)\n};\n\nexport default PlayerContextConsumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GroupContext from './GroupContext';\n\n/**\n * A wrapper which can be used to share configuration among multiple descendant [`PlayerContextProvider`](#playercontextprovider) instances as well as prevent multiple media elements from playing audio simultaneously\n */\nexport class PlayerContextGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.registerMediaElement = this.registerMediaElement.bind(this);\n    this.unregisterMediaElement = this.unregisterMediaElement.bind(this);\n    this.enforceOneMediaSourceOnly = this.enforceOneMediaSourceOnly.bind(this);\n    this.mediaElements = [];\n  }\n\n  registerMediaElement(elem) {\n    this.mediaElements = this.mediaElements.concat(elem);\n    elem.addEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.addEventListener('volumechange', this.enforceOneMediaSourceOnly, true);\n  }\n\n  unregisterMediaElement(elem) {\n    this.mediaElements = this.mediaElements.filter(element => elem !== element);\n    elem.removeEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.removeEventListener(\n      'volumechange',\n      this.enforceOneMediaSourceOnly,\n      true\n    );\n  }\n\n  enforceOneMediaSourceOnly(e) {\n    const mediaElement = e.target;\n    const { paused, muted } = mediaElement;\n    if (paused || muted) {\n      return;\n    }\n    for (const element of this.mediaElements) {\n      if (element !== mediaElement && !element.muted) {\n        element.pause();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <GroupContext.Consumer>\n        {groupContext => {\n          const value = groupContext\n            ? {\n                ...groupContext,\n                groupProps: { ...groupContext.groupProps, ...this.props }\n              }\n            : {\n                groupProps: this.props,\n                registerMediaElement: this.registerMediaElement,\n                unregisterMediaElement: this.unregisterMediaElement\n              };\n          return (\n            <GroupContext.Provider value={value}>\n              {this.props.children}\n            </GroupContext.Provider>\n          );\n        }}\n      </GroupContext.Consumer>\n    );\n  }\n}\n\nPlayerContextGroup.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PlayerContextGroup;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\nimport { logWarning } from './utils/console';\n\nexport default createSingleGlobalContext({\n  displayName: 'FullscreenContext',\n  defaultValue: {\n    fullscreen: false,\n    requestFullscreen() {\n      logWarning(\n        'Fullscreen request ignored since there is no ' +\n          'FullscreenContextProvider ancestor.'\n      );\n    },\n    requestExitFullscreen() {\n      logWarning(\n        'Exit fullscreen request ignored since there is no ' +\n          'FullscreenContextProvider ancestor.'\n      );\n    }\n  },\n  keysWillUpdate: ['fullscreen']\n});\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FullscreenContext from './FullscreenContext';\n\nconst fullscreenStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n/**\n * Wraps an area which should be fullscreen-able\n */\nexport class FullscreenContextProvider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullscreen: false\n    };\n    this.requestFullscreen = this.requestFullscreen.bind(this);\n    this.requestExitFullscreen = this.requestExitFullscreen.bind(this);\n    this.handleFullscreenChange = this.handleFullscreenChange.bind(this);\n    this.fullscreenElement = null;\n  }\n\n  componentDidMount() {\n    document.addEventListener('fullscreenchange', this.handleFullscreenChange);\n    document.addEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'fullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  requestFullscreen() {\n    if (!this.props.fullscreenEnabled) {\n      return;\n    }\n    if (this.fullscreenElement.requestFullscreen) {\n      this.fullscreenElement.requestFullscreen();\n    } else if (this.fullscreenElement.webkitRequestFullscreen) {\n      this.fullscreenElement.webkitRequestFullscreen();\n    } else if (this.fullscreenElement.mozRequestFullscreen) {\n      this.fullscreenElement.mozRequestFullScreen();\n    } else if (this.fullscreenElement.msRequestFullscreen) {\n      this.fullscreenElement.msRequestFullscreen();\n    }\n  }\n\n  requestExitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.mozExitFullscreen();\n    }\n  }\n\n  handleFullscreenChange() {\n    const documentFullscreenElement =\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n    this.setState({\n      fullscreen: documentFullscreenElement === this.fullscreenElement\n    });\n  }\n\n  getFullscreenContext() {\n    const fullscreenContext = {\n      fullscreen: this.state.fullscreen,\n      requestFullscreen: this.requestFullscreen,\n      requestExitFullscreen: this.requestExitFullscreen\n    };\n    if (\n      this.fullscreenContext &&\n      fullscreenContext.fullscreen === this.fullscreenContext.fullscreen\n    ) {\n      // no change\n      return this.fullscreenContext;\n    }\n    return (this.fullscreenContext = fullscreenContext);\n  }\n\n  render() {\n    const fullscreenContext = this.getFullscreenContext();\n    return (\n      <div\n        ref={elem => (this.fullscreenElement = elem)}\n        style={this.state.fullscreen ? fullscreenStyle : undefined}\n      >\n        <FullscreenContext.Provider value={fullscreenContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(fullscreenContext)\n            : this.props.children}\n        </FullscreenContext.Provider>\n      </div>\n    );\n  }\n}\n\nFullscreenContextProvider.propTypes = {\n  fullscreenEnabled: PropTypes.bool.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nFullscreenContextProvider.defaultProps = {\n  fullscreenEnabled: true\n};\n\nexport default FullscreenContextProvider;\n","import React, { createElement } from 'react';\n\nimport PlayerContext from './PlayerContext';\nimport FullscreenContext from './FullscreenContext';\nimport { logWarning } from './utils/console';\n\nfunction playerContextFilter(component, contextPropNames) {\n  const warned = {};\n  const childName = component.displayName || component.name;\n  const flags = PlayerContext.__cassetteGetObservedBits(contextPropNames);\n  function PlayerContextFilter(props) {\n    return (\n      <FullscreenContext.Consumer>\n        {fullscreenContext => (\n          <PlayerContext.Consumer unstable_observedBits={flags}>\n            {playerContext => {\n              const childProps = { ...props };\n              for (const propName of contextPropNames) {\n                if (playerContext.hasOwnProperty(propName)) {\n                  childProps[propName] = playerContext[propName];\n                } else if (fullscreenContext.hasOwnProperty(propName)) {\n                  childProps[propName] = fullscreenContext[propName];\n                } else if (!warned[propName]) {\n                  logWarning(\n                    \"Prop '\" +\n                      propName +\n                      \"' for component \" +\n                      childName +\n                      ' not found in playerContext or fullscreenContext.'\n                  );\n                  warned[propName] = true;\n                }\n              }\n              return createElement(component, childProps);\n            }}\n          </PlayerContext.Consumer>\n        )}\n      </FullscreenContext.Consumer>\n    );\n  }\n  if (childName) {\n    PlayerContextFilter.displayName = `PlayerContextFilter(${childName})`;\n  }\n  return PlayerContextFilter;\n}\n\nexport default playerContextFilter;\n","import PlayerContextProvider from './PlayerContextProvider';\nimport PlayerContext from './PlayerContext';\nimport PlayerContextConsumer from './PlayerContextConsumer';\nimport PlayerContextGroup from './PlayerContextGroup';\nimport FullscreenContextProvider from './FullscreenContextProvider';\nimport FullscreenContext from './FullscreenContext';\nimport playerContextFilter from './playerContextFilter';\nimport * as PlayerPropTypes from './PlayerPropTypes';\n\nexport { PlayerContextProvider };\nexport { PlayerContextConsumer };\nexport { PlayerContextGroup };\nexport { FullscreenContextProvider };\nexport const FullscreenContextConsumer = FullscreenContext.Consumer;\nexport { playerContextFilter };\nexport { PlayerPropTypes };\n\n// undocumented exports\nexport * from './utils/console';\nexport {\n  default as convertToNumberWithinIntervalBounds\n} from './utils/convertToNumberWithinIntervalBounds';\nexport { default as isPlaylistValid } from './utils/isPlaylistValid';\nexport { default as getDisplayText } from './utils/getDisplayText';\nexport { repeatStrategyOptions } from './constants';\nexport const donotuse_PlayerContext = PlayerContext;\nexport const donotuse_FullscreenContext = FullscreenContext;\n"],"sourceRoot":""}