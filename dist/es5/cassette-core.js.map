{"version":3,"sources":["webpack://cassetteCore/webpack/universalModuleDefinition","webpack://cassetteCore/webpack/bootstrap","webpack://cassetteCore/external {\"root\":\"PropTypes\",\"commonjs\":\"prop-types\",\"commonjs2\":\"prop-types\",\"amd\":\"prop-types\"}","webpack://cassetteCore/external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://cassetteCore/./packages/core/src/utils/console.js","webpack://cassetteCore/./packages/core/src/utils/createSingleGlobalContext.js","webpack://cassetteCore/./packages/core/node_modules/array-find-index/index.js","webpack://cassetteCore/(webpack)/buildin/global.js","webpack://cassetteCore/./packages/core/src/PlayerContext.js","webpack://cassetteCore/./packages/core/src/GroupContext.js","webpack://cassetteCore/./packages/core/src/constants.js","webpack://cassetteCore/./packages/core/src/PlayerPropTypes.js","webpack://cassetteCore/./packages/core/src/factories/createCustomMediaElement.js","webpack://cassetteCore/./packages/core/src/utils/ShuffleManager.js","webpack://cassetteCore/./packages/core/src/utils/isPlaylistValid.js","webpack://cassetteCore/./packages/core/src/utils/getTrackSources.js","webpack://cassetteCore/./packages/core/src/utils/findTrackIndexByUrl.js","webpack://cassetteCore/./packages/core/src/utils/snapshot.js","webpack://cassetteCore/./packages/core/src/utils/getSourceList.js","webpack://cassetteCore/./packages/core/src/utils/getTimeRangesArray.js","webpack://cassetteCore/./packages/core/src/utils/getRepeatStrategy.js","webpack://cassetteCore/./packages/core/src/utils/convertToNumberWithinIntervalBounds.js","webpack://cassetteCore/./packages/core/src/utils/getDisplayText.js","webpack://cassetteCore/./packages/core/src/PlayerContextProvider.js","webpack://cassetteCore/./packages/core/src/utils/getReactParentNameStack.js","webpack://cassetteCore/./packages/core/src/PlayerContextConsumer.js","webpack://cassetteCore/./packages/core/src/PlayerContextGroup.js","webpack://cassetteCore/./packages/core/src/FullscreenContext.js","webpack://cassetteCore/./packages/core/src/FullscreenContextProvider.js","webpack://cassetteCore/./packages/core/src/playerContextFilter.js","webpack://cassetteCore/./packages/core/src/index.js"],"names":["log","console","bind","logError","error","logWarning","warn","packageVersion","version","_global","window","global","__cassette_contexts__","createSingleGlobalContext","displayName","defaultValue","keysWillUpdate","ExistingContext","flags","i","key","Context","getChangedBits","prev","next","mask","__cassetteGetObservedBits","keys","observedBits","repeatStrategyOptions","requiredOnlyUnlessHasProp","propType","altPropName","warnedAboutDefiningBoth","validate","props","propName","componentName","rest","isRequired","Error","controlKeyword","oneOf","control","oneOfType","func","crossOriginAttribute","mediaSource","shape","src","string","type","mediaSessionAction","mediaSessionArtwork","sizes","url","sources","arrayOf","title","artist","album","artwork","meta","object","progressDirection","seekMode","aspectRatio","prop","undefined","split","length","some","isNaN","loopchange","srcrequest","createCustomMediaElement","media","MutationObserver","dispatchEvent","Event","observe","attributes","attributeFilter","Object","defineProperty","get","currentSrc","set","e","srcRequested","ShuffleManager","list","options","_list","_forwardStack","_backStack","_currentItem","_allowBackShuffle","Boolean","allowBackShuffle","findNextItem","currentIndex","setCurrentIndex","_findNextItem","findPreviousItem","pickNextItem","index","push","setList","setOptions","o","item","clear","_goForward","n","forwardStack","backStack","currentItem","pop","_allItemsMatch","allowMore","indexOf","nextItem","Math","floor","random","isPlaylistValid","playlist","blankSources","getTrackSources","findTrackIndexByUrl","track","source","getStateSnapshot","state","paused","currentTime","activeTrackIndex","volume","muted","loop","cycle","shuffle","playbackRate","__playlist__","__unstable__","activeTrackSrc","restoreStateFromSnapshot","snapshot","restoredStateValues","awaitingPlay","useCurrentTime","newTrackIndex","getSourceList","map","_","getTimeRangesArray","timeRangesObj","timeRangesArray","Array","start","end","getRepeatStrategy","convertToNumberWithinIntervalBounds","number","min","max","Infinity","getDisplayText","displayText","playErrorHandler","err","name","warningMessage","Date","toLocaleTimeString","supportableMediaSessionActions","defaultState","seekPreviewTime","seekInProgress","awaitingResumeOnSeekComplete","awaitingPlayAfterTrackLoad","duration","bufferedRanges","playedRanges","seekableRanges","stalled","shouldRequestPlayOnNextUpdate","mediaCannotPlay","getGoToTrackState","prevState","shouldPlay","shouldForceLoad","isNewTrack","trackLoading","awaitingForceLoad","startingTrackIndex","startingTime","defaultVolume","defaultMuted","defaultRepeatStrategy","defaultShuffle","defaultPlaybackRate","setVolumeInProgress","autoplay","initialStateSnapshot","lastStableVolume","shuffler","videoHostElementList","videoHostOccupiedCallbacks","Map","videoHostVacatedCallbacks","onTrackPlaybackFailure","togglePause","selectTrackIndex","forwardSkip","backSkip","seekPreview","seekComplete","setVolume","setVolumeComplete","toggleMuted","toggleShuffle","setRepeatStrategy","setPlaybackRate","registerVideoHostElement","renderVideoIntoHostElement","unregisterVideoHostElement","updateVideoHostElement","handleMediaPlay","handleMediaPause","handleMediaSrcrequest","handleMediaEnded","handleMediaEmptied","handleMediaStalled","handleMediaCanplaythrough","handleMediaTimeupdate","handleMediaLoadedmetadata","handleMediaVolumechange","handleMediaDurationchange","handleMediaProgress","handleMediaLoopchange","handleMediaRatechange","componentDidMount","createMediaElement","crossOrigin","autoplayDelayInSeconds","mediaElementRef","getPosterImageForTrack","getMediaTitleAttributeForTrack","onActiveTrackUpdate","setAttribute","addEventListener","setMediaElementSources","mediaContainer","appendChild","setState","delayTimeout","setTimeout","getDerivedStateFromProps","nextProps","newPlaylist","baseNewState","prevSources","currentSources","componentDidUpdate","prevProps","newSources","prevTrack","newTrack","stealMediaSession","clearTimeout","snapshotUpdateTimeout","onStateSnapshot","componentWillUnmount","removeEventListener","sourceElements","querySelectorAll","sourceElement","gapLengthTimeout","MediaSession","navigator","mediaSession","metadata","MediaMetadata","action","supportedMediaSessionActions","seekLength","mediaSessionSeekLengthInSeconds","forEach","handler","setActionHandler","firstChild","removeChild","document","createElement","load","event","hostElement","onHostOccupied","onHostVacated","concat","cancelAnimationFrame","videoHostUpdateRaf","requestAnimationFrame","filter","elem","delete","parentNode","playing","oldHostElement","play","onVacated","onOccupied","s","loadFirstTrackOnPlaylistComplete","goToTrack","gapLengthInSeconds","played","buffered","seekable","value","pause","playPromise","catch","Promise","reject","args","stayOnBackSkipThreshold","previousItem","targetTime","baseStateUpdate","ended","inProgress","volumeInBounds","repeatStrategy","rate","getControlProps","playerContext","awaitingPlayResume","onTogglePause","onSelectTrackIndex","onBackSkip","onForwardSkip","onSeekPreview","onSeekComplete","onSetVolume","onSetVolumeComplete","onToggleMuted","onToggleShuffle","onSetRepeatStrategy","onSetPlaybackRate","render","children","propTypes","bool","maintainPlaybackRate","node","defaultProps","groupContext","registerMediaElement","mediaElement","unregisterMediaElement","groupProps","ref","PlayerContextGroupConsumer","getReactParentNameStack","componentInstance","fiber","_reactInternalFiber","parentStack","owner","_debugOwner","filterList","warnedAboutFilterList","warning","parentName","usedContext","hasOwnProperty","enforceOneMediaSourceOnly","mediaElements","element","target","fullscreen","requestFullscreen","requestExitFullscreen","fullscreenStyle","width","height","handleFullscreenChange","fullscreenElement","fullscreenEnabled","webkitRequestFullscreen","mozRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","mozExitFullscreen","documentFullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","getFullscreenContext","fullscreenContext","playerContextFilter","component","contextPropNames","warned","childName","PlayerContextFilter","childProps","FullscreenContextConsumer","Consumer","donotuse_PlayerContext","donotuse_FullscreenContext"],"mappings":"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","file":"es5/cassette-core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"prop-types\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"prop-types\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cassetteCore\"] = factory(require(\"prop-types\"), require(\"react\"));\n\telse\n\t\troot[\"cassetteCore\"] = factory(root[\"PropTypes\"], root[\"React\"]);\n})((typeof self !== \"undefined\" ? self : this), function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/* eslint-disable no-console */\n\nconst log = console.log.bind(console);\n\nexport const logError = console.error ? console.error.bind(console) : log;\nexport const logWarning = console.warn ? console.warn.bind(console) : log;\n","import { createContext } from 'react';\n\nimport { logWarning } from './console';\n\nconst packageVersion = require('../../package.json').version;\n\nconst _global = typeof window === 'undefined' ? global : window;\n_global.__cassette_contexts__ = _global.__cassette_contexts__ || {};\n\nfunction createSingleGlobalContext({\n  displayName,\n  defaultValue = null,\n  keysWillUpdate\n}) {\n  const ExistingContext = _global.__cassette_contexts__[displayName];\n  if (ExistingContext) {\n    if (ExistingContext.packageVersion !== packageVersion) {\n      logWarning(\n        `Warning: multiple versions of ${displayName} from the @cassette/core` +\n          ` package have been loaded. v${packageVersion} will be ignored and` +\n          ` v${ExistingContext.packageVersion} will be used instead.`\n      );\n    }\n    return ExistingContext;\n  }\n  // inspired by:\n  // https://github.com/philosaf/observed-bits/blob/master/src/index.js\n  const flags = {};\n  let i = 0;\n  for (const key of keysWillUpdate) {\n    flags[key] = 1 << i++;\n  }\n  const Context = createContext(defaultValue, function getChangedBits(\n    prev,\n    next\n  ) {\n    let mask = 0;\n    for (const key of keysWillUpdate) {\n      if (prev[key] !== next[key]) {\n        mask |= flags[key];\n      }\n    }\n    return mask;\n  });\n  Context.__cassetteGetObservedBits = keys => {\n    let observedBits = 0;\n    for (const key of keys) {\n      observedBits |= flags[key];\n    }\n    return observedBits;\n  };\n  Context.displayName = displayName;\n  Context.packageVersion = packageVersion;\n  _global.__cassette_contexts__[displayName] = Context;\n  return Context;\n}\n\nexport default createSingleGlobalContext;\n","'use strict';\nmodule.exports = function (arr, predicate, ctx) {\n\tif (typeof Array.prototype.findIndex === 'function') {\n\t\treturn arr.findIndex(predicate, ctx);\n\t}\n\n\tif (typeof predicate !== 'function') {\n\t\tthrow new TypeError('predicate must be a function');\n\t}\n\n\tvar list = Object(arr);\n\tvar len = list.length;\n\n\tif (len === 0) {\n\t\treturn -1;\n\t}\n\n\tfor (var i = 0; i < len; i++) {\n\t\tif (predicate.call(ctx, list[i], i, list)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\n// TODO: test to make sure context contents stay in sync with\n// enumerated list here\n\nexport default createSingleGlobalContext({\n  displayName: 'PlayerContext',\n  keysWillUpdate: [\n    'playlist',\n    'activeTrackIndex',\n    'trackLoading',\n    'paused',\n    'currentTime',\n    'seekPreviewTime',\n    'seekInProgress',\n    'awaitingPlayResume',\n    'duration',\n    'bufferedRanges',\n    'playedRanges',\n    'seekableRanges',\n    'volume',\n    'muted',\n    'shuffle',\n    'stalled',\n    'playbackRate',\n    'setVolumeInProgress',\n    'repeatStrategy',\n    'mediaCannotPlay'\n  ]\n});\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\nexport default createSingleGlobalContext({\n  displayName: 'GroupContext',\n  keysWillUpdate: ['groupProps']\n});\n","export const repeatStrategyOptions = ['none', 'playlist', 'track'];\n","import PropTypes from 'prop-types';\n\nimport { repeatStrategyOptions } from './constants';\nimport { logWarning } from './utils/console';\n\nfunction requiredOnlyUnlessHasProp(propType, altPropName) {\n  let warnedAboutDefiningBoth = false;\n  function validate(props, propName, componentName, ...rest) {\n    if (propName in props) {\n      if (!warnedAboutDefiningBoth && altPropName in props) {\n        logWarning(\n          `Do not define both the '${propName}' and '${altPropName}' props.`\n        );\n        warnedAboutDefiningBoth = true;\n      }\n      return propType.isRequired(props, propName, componentName, ...rest);\n    }\n    if (!(altPropName in props)) {\n      return new Error(\n        `If the '${altPropName}' prop is not defined, '${propName}' must be.`\n      );\n    }\n  }\n  return validate;\n}\n\nexport const controlKeyword = PropTypes.oneOf([\n  'playpause',\n  'backskip',\n  'forwardskip',\n  'volume',\n  'mute',\n  'repeat',\n  'shuffle',\n  'progress',\n  'progressdisplay',\n  'fullscreen',\n  'spacer'\n]);\n\nexport const control = PropTypes.oneOfType([PropTypes.func, controlKeyword]);\n\nexport const crossOriginAttribute = PropTypes.oneOf([\n  'anonymous',\n  'use-credentials'\n]);\n\nexport const repeatStrategy = PropTypes.oneOf(repeatStrategyOptions);\n\nexport const mediaSource = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n\nexport const mediaSessionAction = PropTypes.oneOf([\n  'play',\n  'pause',\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n]);\n\nexport const mediaSessionArtwork = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  type: PropTypes.string\n});\n\nexport const track = PropTypes.shape({\n  url: requiredOnlyUnlessHasProp(PropTypes.string, 'sources'),\n  sources: requiredOnlyUnlessHasProp(\n    PropTypes.arrayOf(mediaSource.isRequired),\n    'url'\n  ),\n  title: PropTypes.string.isRequired,\n  artist: PropTypes.string,\n  album: PropTypes.string,\n  artwork: PropTypes.arrayOf(mediaSessionArtwork.isRequired),\n  meta: PropTypes.object\n});\n\nexport const progressDirection = PropTypes.oneOf([\n  'left',\n  'right',\n  'up',\n  'down'\n]);\n\nexport const seekMode = PropTypes.oneOf(['paused', 'immediate', 'onrelease']);\n\nexport function aspectRatio(props, propName) {\n  const prop = props[propName];\n  if (prop === undefined) {\n    return;\n  }\n  if (\n    typeof prop !== 'string' ||\n    prop.split(':').length !== 2 ||\n    prop.split(':').some(isNaN)\n  ) {\n    return new Error(\n      `The ${propName} prop should be a string of the form 'x:y'. Example: 16:9`\n    );\n  }\n}\n","const loopchange = 'loopchange';\nconst srcrequest = 'srcrequest';\n\nfunction createCustomMediaElement(media) {\n  new MutationObserver(() => {\n    media.dispatchEvent(new Event(loopchange));\n  }).observe(media, {\n    attributes: true,\n    attributeFilter: ['loop']\n  });\n  // Don't let the media src property get modified directly.\n  // Instead, when it does get set, dispatch an event to be\n  // handled in a way that doesn't conflict with the loaded\n  // playlist.\n  Object.defineProperty(media, 'src', {\n    get: () => media.currentSrc,\n    set: src => {\n      const e = new Event(srcrequest);\n      e.srcRequested = src;\n      media.dispatchEvent(e);\n    }\n  });\n  return media;\n}\n\nexport default createCustomMediaElement;\n","/* ShuffleManager\n *\n * Manages navigation throughout a list which is:\n * - Sourced from another provided list\n * - In random order (except to avoid consecutive duplicates)\n * - Extended endlessly on-the-fly, as needed\n * - Able to have future history overwritten by non-random choices\n * - Able to swap source lists and maintain shuffle order for common members\n */\n\nexport class ShuffleManager {\n  constructor(list, options = {}) {\n    this._list = list;\n    this._forwardStack = [];\n    this._backStack = [];\n    this._currentItem = undefined;\n\n    this._allowBackShuffle = Boolean(options.allowBackShuffle);\n  }\n\n  findNextItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._forwardStack,\n      this._backStack,\n      this._currentItem,\n      true\n    );\n    return this._currentItem;\n  }\n\n  findPreviousItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._backStack,\n      this._forwardStack,\n      this._currentItem,\n      this._allowBackShuffle\n    );\n    return this._currentItem;\n  }\n\n  pickNextItem(index, currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    if (this._list[index] === undefined) {\n      return undefined;\n    }\n    if (this._currentItem !== undefined) {\n      this._backStack.push(this._currentItem);\n    }\n    this._forwardStack.length = 0;\n    this._currentItem = this._list[index];\n    return this._currentItem;\n  }\n\n  setList(list) {\n    this._list = list;\n  }\n\n  setOptions(options) {\n    for (const o of Object.keys(options)) {\n      switch (o) {\n        case 'allowBackShuffle':\n          this[`_${o}`] = Boolean(options[o]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  setCurrentIndex(currentIndex) {\n    const item = this._list[currentIndex];\n    if (this._currentItem !== item) {\n      this.clear();\n      this._currentItem = item;\n    }\n  }\n\n  clear() {\n    this._forwardStack.length = 0;\n    this._backStack.length = 0;\n    this._currentItem = undefined;\n  }\n}\n\nfunction _goForward(n, forwardStack, backStack, currentItem) {\n  let item = currentItem;\n  for (let i = 0; i < n; i++) {\n    if (!forwardStack.length) {\n      // rollback before erroring (note stack reversal)\n      _goForward(i, backStack, forwardStack, item);\n      throw `Moving ${n} places was not possible!`;\n    }\n    backStack.push(item);\n    item = forwardStack.pop();\n  }\n  return item;\n}\n\nfunction _allItemsMatch(list, item) {\n  if (!list.length) {\n    return false;\n  }\n  for (let i = 0; i < list.length; i++) {\n    if (item !== list[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction _findNextItem(list, forwardStack, backStack, currentItem, allowMore) {\n  let item = currentItem;\n  if (!list.length) {\n    return undefined;\n  }\n  for (let i = 1; i <= forwardStack.length; i++) {\n    if (list.indexOf(forwardStack[forwardStack.length - i]) !== -1) {\n      return _goForward(i, forwardStack, backStack, item);\n    }\n  }\n  if (!allowMore) {\n    return undefined;\n  }\n  if (_allItemsMatch(list, item)) {\n    // we can serve this as our \"next\" item but we\n    // won't modify our history since it's the same.\n    return item;\n  }\n  let nextItem;\n  do {\n    nextItem = list[Math.floor(Math.random() * list.length)];\n  } while (item === nextItem || nextItem === undefined);\n  // if we're skipping items that aren't in our current list we may\n  // have some items in our forwardStack - make sure we move to the front.\n  item = _goForward(forwardStack.length, forwardStack, backStack, item);\n  if (item !== undefined) {\n    backStack.push(item);\n  }\n  return nextItem;\n}\n\nexport default ShuffleManager;\n","function isPlaylistValid(playlist) {\n  return Boolean(playlist && playlist.length);\n}\n\nexport default isPlaylistValid;\n","import isPlaylistValid from './isPlaylistValid';\n\nconst blankSources = [{ src: '' }];\n\nfunction getTrackSources(playlist, index) {\n  if (!isPlaylistValid(playlist)) {\n    return blankSources;\n  }\n  const { sources, url } = playlist[index];\n  if (sources) {\n    return sources.length ? sources : blankSources;\n  }\n  return [{ src: url }];\n}\n\nexport default getTrackSources;\n","import arrayFindIndex from 'array-find-index';\n\nfunction findTrackIndexByUrl(playlist, url) {\n  return arrayFindIndex(playlist, track => {\n    if (track.sources) {\n      return arrayFindIndex(track.sources, source => source.src === url) !== -1;\n    }\n    return track.url && url === track.url;\n  });\n}\n\nexport default findTrackIndexByUrl;\n","import isPlaylistValid from './isPlaylistValid';\nimport getTrackSources from './getTrackSources';\nimport findTrackIndexByUrl from './findTrackIndexByUrl';\n\nexport function getStateSnapshot(state) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    __playlist__\n  } = state;\n  return {\n    __unstable__: {\n      paused,\n      currentTime,\n      activeTrackIndex,\n      volume,\n      muted,\n      loop,\n      cycle,\n      shuffle,\n      playbackRate,\n      activeTrackSrc: isPlaylistValid(__playlist__)\n        ? getTrackSources(__playlist__, activeTrackIndex)[0].src\n        : null\n    }\n  };\n}\n\nexport function restoreStateFromSnapshot(snapshot, props) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    activeTrackSrc\n  } = snapshot.__unstable__;\n  const restoredStateValues = {};\n  if (isPlaylistValid(props.playlist) && typeof paused === 'boolean') {\n    // using awaitingPlay instead of paused triggers an animation\n    restoredStateValues.awaitingPlay = !paused;\n  }\n  if (typeof volume === 'number' && volume >= 0 && volume <= 1) {\n    restoredStateValues.volume = volume;\n  }\n  if (typeof muted === 'boolean') {\n    restoredStateValues.muted = muted;\n  }\n  if (typeof loop === 'boolean') {\n    restoredStateValues.loop = loop;\n  }\n  if (typeof cycle === 'boolean') {\n    restoredStateValues.cycle = cycle;\n  }\n  if (typeof shuffle === 'boolean') {\n    restoredStateValues.shuffle = shuffle;\n  }\n  if (typeof playbackRate === 'number') {\n    restoredStateValues.playbackRate = playbackRate;\n  }\n  let useCurrentTime = false;\n  if (\n    typeof activeTrackSrc === 'string' &&\n    typeof activeTrackIndex === 'number' &&\n    activeTrackIndex >= 0\n  ) {\n    // let's try staying on the same track index\n    const currentSrc =\n      props.playlist[activeTrackIndex] &&\n      getTrackSources(props.playlist, activeTrackIndex)[0].src;\n    if (currentSrc && activeTrackSrc === currentSrc) {\n      restoredStateValues.activeTrackIndex = activeTrackIndex;\n      useCurrentTime = true;\n    } else {\n      /* if the track we were playing before is in the new playlist,\n       * update the activeTrackIndex.\n       */\n      const newTrackIndex = findTrackIndexByUrl(props.playlist, activeTrackSrc);\n      if (newTrackIndex !== -1) {\n        restoredStateValues.activeTrackIndex = newTrackIndex;\n        useCurrentTime = true;\n      }\n    }\n  }\n  if (useCurrentTime && typeof currentTime === 'number' && currentTime >= 0) {\n    restoredStateValues.currentTime = currentTime;\n  }\n  return restoredStateValues;\n}\n","import getTrackSources from './getTrackSources';\n\n// collapses playlist into flat list containing\n// the first source url for each track\nfunction getSourceList(playlist) {\n  return (playlist || []).map((_, i) => getTrackSources(playlist, i)[0].src);\n}\n\nexport default getSourceList;\n","function getTimeRangesArray(timeRangesObj) {\n  const timeRangesArray = Array(timeRangesObj.length);\n  for (let i = 0; i < timeRangesObj.length; i++) {\n    timeRangesArray[i] = {\n      start: timeRangesObj.start(i),\n      end: timeRangesObj.end(i)\n    };\n  }\n  return timeRangesArray;\n}\n\nexport default getTimeRangesArray;\n","function getRepeatStrategy(loop, cycle) {\n  if (loop) {\n    return 'track';\n  }\n  if (cycle) {\n    return 'playlist';\n  }\n  return 'none';\n}\n\nexport default getRepeatStrategy;\n","function convertToNumberWithinIntervalBounds(number, min, max) {\n  min = typeof min === 'number' ? min : -Infinity;\n  max = typeof max === 'number' ? max : Infinity;\n  return Math.max(min, Math.min(number, max));\n}\n\nexport default convertToNumberWithinIntervalBounds;\n","function getDisplayText(track) {\n  if (!track) {\n    return '';\n  }\n  if (track.displayText) {\n    // TODO: Remove this check when support for the displayText prop is gone.\n    return track.displayText;\n  }\n  if (track.title && track.artist) {\n    return `${track.artist} - ${track.title}`;\n  }\n  return track.title || track.artist || track.album || '';\n}\n\nexport default getDisplayText;\n","import React, { Component, Fragment, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayFindIndex from 'array-find-index';\n\nimport PlayerContext from './PlayerContext';\nimport GroupContext from './GroupContext';\nimport * as PlayerPropTypes from './PlayerPropTypes';\nimport createCustomMediaElement from './factories/createCustomMediaElement';\nimport ShuffleManager from './utils/ShuffleManager';\nimport { getStateSnapshot, restoreStateFromSnapshot } from './utils/snapshot';\nimport getSourceList from './utils/getSourceList';\nimport getTrackSources from './utils/getTrackSources';\nimport getTimeRangesArray from './utils/getTimeRangesArray';\nimport findTrackIndexByUrl from './utils/findTrackIndexByUrl';\nimport isPlaylistValid from './utils/isPlaylistValid';\nimport getRepeatStrategy from './utils/getRepeatStrategy';\nimport convertToNumberWithinIntervalBounds from './utils/convertToNumberWithinIntervalBounds';\nimport { logError, logWarning } from './utils/console';\nimport getDisplayText from './utils/getDisplayText';\nimport { repeatStrategyOptions } from './constants';\n\nfunction playErrorHandler(err) {\n  logError(err);\n  if (err.name === 'NotAllowedError') {\n    const warningMessage =\n      'Media playback failed at ' +\n      new Date().toLocaleTimeString() +\n      '! (Perhaps autoplay is disabled in this browser.)';\n    logWarning(warningMessage);\n  }\n}\n\n// Existing Media Session API implementations have default handlers\n// for play/pause, and may yield unexpected behavior if custom\n// play/pause handlers are defined - so let's leave them be.\nconst supportableMediaSessionActions = [\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n];\n\nconst defaultState = {\n  // indicates whether media player should be paused\n  paused: true,\n  // elapsed time for active track, in seconds\n  currentTime: 0,\n  // The most recent targeted time, in seconds, for seek preview\n  seekPreviewTime: 0,\n  /* true if the user is currently dragging the mouse\n   * to seek a new track position\n   */\n  seekInProgress: false,\n  /* true if media was playing when seek previewing began,\n   * it was paused, and it should be resumed on seek\n   * complete\n   */\n  awaitingResumeOnSeekComplete: false,\n  // true if media will play once new track has loaded\n  awaitingPlayAfterTrackLoad: false,\n  // the duration in seconds of the loaded track\n  duration: 0,\n  // array describing the buffered ranges in the loaded track\n  bufferedRanges: [],\n  // array describing the already-played ranges in the loaded track\n  playedRanges: [],\n  // array describing the seekable ranges in the loaded track\n  seekableRanges: [],\n  // true if the media is currently stalled pending data buffering\n  stalled: false,\n  // true if the active track should play on the next componentDidUpdate\n  shouldRequestPlayOnNextUpdate: false,\n  /* true if an error occurs while fetching the active track media data\n   * or if its type is not a supported media format\n   */\n  mediaCannotPlay: false\n};\n\n// assumes playlist is valid\nfunction getGoToTrackState({\n  prevState,\n  index,\n  shouldPlay = true,\n  shouldForceLoad = false\n}) {\n  const isNewTrack = prevState.activeTrackIndex !== index;\n  return {\n    activeTrackIndex: index,\n    trackLoading: isNewTrack,\n    mediaCannotPlay:\n      prevState.mediaCannotPlay && !shouldForceLoad && !isNewTrack,\n    currentTime: 0,\n    loop: isNewTrack || shouldForceLoad ? false : prevState.loop,\n    shouldRequestPlayOnNextUpdate: Boolean(shouldPlay),\n    awaitingPlayAfterTrackLoad: Boolean(shouldPlay),\n    awaitingForceLoad: Boolean(shouldForceLoad)\n  };\n}\n\n/**\n * Wraps an area which shares a common [`playerContext`](#playercontext)\n */\nexport class PlayerContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...defaultState,\n      // index matching requested track (whether track has loaded or not)\n      activeTrackIndex: convertToNumberWithinIntervalBounds(\n        props.startingTrackIndex,\n        0\n      ),\n      // whether we're waiting on loading metadata for the active track\n      trackLoading: isPlaylistValid(props.playlist),\n      // the current timestamp on the active track in seconds\n      currentTime: convertToNumberWithinIntervalBounds(props.startingTime, 0),\n      // the latest volume of the media, between 0 and 1.\n      volume: convertToNumberWithinIntervalBounds(props.defaultVolume, 0, 1),\n      // true if the media has been muted\n      muted: props.defaultMuted,\n      // whether to loop the active track\n      loop: props.defaultRepeatStrategy === 'track',\n      // true if playlist should continue at start after completion\n      cycle: props.defaultRepeatStrategy === 'playlist',\n      // whether to randomly pick next track from playlist after one finishes\n      shuffle: props.defaultShuffle,\n      // Rate at which media should be played. 1.0 is normal speed.\n      playbackRate: props.defaultPlaybackRate,\n      // true if user is currently dragging mouse to change the volume\n      setVolumeInProgress: false,\n      // initialize shouldRequestPlayOnNextUpdate from autoplay prop\n      shouldRequestPlayOnNextUpdate:\n        props.autoplay && isPlaylistValid(props.playlist),\n      awaitingForceLoad: false,\n      // playlist prop copied to state (for getDerivedStateFromProps)\n      __playlist__: props.playlist,\n      // load overrides from previously-captured state snapshot\n      ...(props.initialStateSnapshot\n        ? restoreStateFromSnapshot(props.initialStateSnapshot, props)\n        : {})\n    };\n\n    // volume at last time we were unmuted and not actively setting volume\n    this.lastStableVolume = this.state.volume;\n\n    // used to keep track of play history when we are shuffling\n    this.shuffler = new ShuffleManager(getSourceList(props.playlist), {\n      allowBackShuffle: props.allowBackShuffle\n    });\n\n    // html media element used for playback\n    this.media = null;\n\n    this.videoHostElementList = [];\n    this.videoHostOccupiedCallbacks = new Map();\n    this.videoHostVacatedCallbacks = new Map();\n\n    // bind internal methods\n    this.onTrackPlaybackFailure = this.onTrackPlaybackFailure.bind(this);\n\n    // bind callback methods to pass to descendant elements\n    this.togglePause = this.togglePause.bind(this);\n    this.selectTrackIndex = this.selectTrackIndex.bind(this);\n    this.forwardSkip = this.forwardSkip.bind(this);\n    this.backSkip = this.backSkip.bind(this);\n    this.seekPreview = this.seekPreview.bind(this);\n    this.seekComplete = this.seekComplete.bind(this);\n    this.setVolume = this.setVolume.bind(this);\n    this.setVolumeComplete = this.setVolumeComplete.bind(this);\n    this.toggleMuted = this.toggleMuted.bind(this);\n    this.toggleShuffle = this.toggleShuffle.bind(this);\n    this.setRepeatStrategy = this.setRepeatStrategy.bind(this);\n    this.setPlaybackRate = this.setPlaybackRate.bind(this);\n    this.registerVideoHostElement = this.registerVideoHostElement.bind(this);\n    this.renderVideoIntoHostElement = this.renderVideoIntoHostElement.bind(\n      this\n    );\n    this.unregisterVideoHostElement = this.unregisterVideoHostElement.bind(\n      this\n    );\n    this.updateVideoHostElement = this.updateVideoHostElement.bind(this);\n\n    // bind media event handlers\n    this.handleMediaPlay = this.handleMediaPlay.bind(this);\n    this.handleMediaPause = this.handleMediaPause.bind(this);\n    this.handleMediaSrcrequest = this.handleMediaSrcrequest.bind(this);\n    this.handleMediaEnded = this.handleMediaEnded.bind(this);\n    this.handleMediaEmptied = this.handleMediaEmptied.bind(this);\n    this.handleMediaStalled = this.handleMediaStalled.bind(this);\n    this.handleMediaCanplaythrough = this.handleMediaCanplaythrough.bind(this);\n    this.handleMediaTimeupdate = this.handleMediaTimeupdate.bind(this);\n    this.handleMediaLoadedmetadata = this.handleMediaLoadedmetadata.bind(this);\n    this.handleMediaVolumechange = this.handleMediaVolumechange.bind(this);\n    this.handleMediaDurationchange = this.handleMediaDurationchange.bind(this);\n    this.handleMediaProgress = this.handleMediaProgress.bind(this);\n    this.handleMediaLoopchange = this.handleMediaLoopchange.bind(this);\n    this.handleMediaRatechange = this.handleMediaRatechange.bind(this);\n  }\n\n  componentDidMount() {\n    const media = (this.media = createCustomMediaElement(\n      this.props.createMediaElement()\n    ));\n\n    const {\n      defaultPlaybackRate,\n      crossOrigin,\n      playlist,\n      autoplayDelayInSeconds,\n      mediaElementRef,\n      getPosterImageForTrack,\n      getMediaTitleAttributeForTrack,\n      onActiveTrackUpdate\n    } = this.props;\n    const {\n      volume,\n      muted,\n      playbackRate,\n      loop,\n      activeTrackIndex,\n      shouldRequestPlayOnNextUpdate\n    } = this.state;\n\n    // initialize media properties\n    // We used to set currentTime here.. now waiting for loadedmetadata.\n    // This avoids an issue where some browsers ignore or delay currentTime\n    // updates when in the HAVE_NOTHING state.\n    media.defaultPlaybackRate = defaultPlaybackRate;\n    media.crossOrigin = crossOrigin;\n    media.volume = volume;\n    media.muted = muted;\n    media.playbackRate = playbackRate;\n    media.loop = loop;\n    media.setAttribute('playsinline', '');\n    media.setAttribute('webkit-playsinline', '');\n    media.setAttribute('preload', 'metadata');\n    media.setAttribute(\n      'poster',\n      getPosterImageForTrack(playlist[activeTrackIndex])\n    );\n    media.setAttribute(\n      'title',\n      getMediaTitleAttributeForTrack(playlist[activeTrackIndex])\n    );\n    // add listeners for media events\n    media.addEventListener('play', this.handleMediaPlay);\n    media.addEventListener('pause', this.handleMediaPause);\n    media.addEventListener('ended', this.handleMediaEnded);\n    media.addEventListener('stalled', this.handleMediaStalled);\n    media.addEventListener('emptied', this.handleMediaEmptied);\n    media.addEventListener('canplaythrough', this.handleMediaCanplaythrough);\n    media.addEventListener('timeupdate', this.handleMediaTimeupdate);\n    media.addEventListener('loadedmetadata', this.handleMediaLoadedmetadata);\n    media.addEventListener('volumechange', this.handleMediaVolumechange);\n    media.addEventListener('durationchange', this.handleMediaDurationchange);\n    media.addEventListener('progress', this.handleMediaProgress);\n    media.addEventListener('ratechange', this.handleMediaRatechange);\n    // add listeners for special events\n    media.addEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.addEventListener('loopchange', this.handleMediaLoopchange);\n\n    // set source elements for current track\n    this.setMediaElementSources();\n\n    // initially mount media element in the hidden container (this may change)\n    this.mediaContainer.appendChild(media);\n\n    if (shouldRequestPlayOnNextUpdate) {\n      this.setState({\n        shouldRequestPlayOnNextUpdate: false\n      });\n      this.delayTimeout = setTimeout(() => {\n        this.togglePause(false);\n      }, autoplayDelayInSeconds * 1000);\n    }\n\n    if (mediaElementRef) {\n      mediaElementRef(media);\n    }\n\n    if (onActiveTrackUpdate) {\n      onActiveTrackUpdate(playlist[activeTrackIndex], activeTrackIndex);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const newPlaylist = nextProps.playlist;\n\n    if (newPlaylist === prevState.__playlist__) {\n      // reference comparison is equal so we'll\n      // assume the playlist is unchanged.\n      return null;\n    }\n\n    const baseNewState = {\n      __playlist__: newPlaylist\n    };\n\n    // check if the new playlist is invalid\n    if (!isPlaylistValid(newPlaylist)) {\n      return {\n        ...defaultState,\n        ...baseNewState,\n        activeTrackIndex: 0,\n        trackLoading: false\n      };\n    }\n\n    // check if the activeTrackIndex doesn't need to be updated\n    const prevSources = getTrackSources(\n      prevState.__playlist__,\n      prevState.activeTrackIndex\n    );\n\n    if (newPlaylist[prevState.activeTrackIndex]) {\n      // the sources if we stay on the same track index\n      const currentSources = getTrackSources(\n        newPlaylist,\n        prevState.activeTrackIndex\n      );\n      // non-comprehensive but probably accurate check\n      if (prevSources[0].src === currentSources[0].src) {\n        // our active track index already matches\n        return baseNewState;\n      }\n    }\n\n    /* if the track we're already playing is in the new playlist, update the\n     * activeTrackIndex.\n     */\n    const newTrackIndex = findTrackIndexByUrl(newPlaylist, prevSources[0].src);\n    if (newTrackIndex !== -1) {\n      return {\n        ...baseNewState,\n        activeTrackIndex: newTrackIndex\n      };\n    }\n\n    // if not, then load the first track in the new playlist, and pause.\n    return {\n      ...baseNewState,\n      ...getGoToTrackState({ prevState, index: 0, shouldPlay: false }),\n      mediaCannotPlay: false,\n      awaitingPlayAfterTrackLoad: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.media.defaultPlaybackRate = this.props.defaultPlaybackRate;\n    this.media.crossOrigin = this.props.crossOrigin;\n\n    this.shuffler.setList(getSourceList(this.props.playlist));\n    this.shuffler.setOptions({\n      allowBackShuffle: this.props.allowBackShuffle\n    });\n\n    const prevSources = getTrackSources(\n      prevProps.playlist,\n      prevState.activeTrackIndex\n    );\n    const newSources = getTrackSources(\n      this.props.playlist,\n      this.state.activeTrackIndex\n    );\n    const prevTrack = prevProps.playlist[prevState.activeTrackIndex];\n    const newTrack = this.props.playlist[this.state.activeTrackIndex];\n    if (\n      this.state.awaitingForceLoad ||\n      prevSources[0].src !== newSources[0].src\n    ) {\n      this.setMediaElementSources();\n      this.media.setAttribute(\n        'poster',\n        this.props.getPosterImageForTrack(newTrack)\n      );\n      this.media.setAttribute(\n        'title',\n        this.props.getMediaTitleAttributeForTrack(newTrack)\n      );\n      this.setState({\n        awaitingForceLoad: false\n      });\n      if (!this.state.shuffle) {\n        // after toggling off shuffle, we defer clearing the shuffle\n        // history until we actually change tracks - if the user quickly\n        // toggles  shuffle off then back on again, we don't want to have\n        // lost our history.\n        this.shuffler.clear();\n      }\n    }\n\n    if (this.props.onActiveTrackUpdate && prevTrack !== newTrack) {\n      this.props.onActiveTrackUpdate(newTrack, this.state.activeTrackIndex);\n    }\n\n    if (prevProps !== this.props && !this.media.paused) {\n      // update running media session based on new props\n      this.stealMediaSession();\n    }\n\n    if (this.state.shouldRequestPlayOnNextUpdate) {\n      this.setState({\n        shouldRequestPlayOnNextUpdate: false\n      });\n      // media.currentSrc is updated asynchronously so we should\n      // play async to avoid weird intermediate state issues\n      setTimeout(() => {\n        this.togglePause(false);\n      });\n    }\n\n    clearTimeout(this.snapshotUpdateTimeout);\n    this.snapshotUpdateTimeout = setTimeout(() => {\n      if (this.props.onStateSnapshot) {\n        this.props.onStateSnapshot(getStateSnapshot(this.state));\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    const { media } = this;\n    // Media element creation will have failed if MutationObserver isn't\n    // supported by the browser. The parent might use an Error Boundary\n    // to display a fallback and so we try to avoid triggering *additional*\n    // errors while the component unmounts.\n    if (media) {\n      // remove listeners for media events\n      media.removeEventListener('play', this.handleMediaPlay);\n      media.removeEventListener('pause', this.handleMediaPause);\n      media.removeEventListener('ended', this.handleMediaEnded);\n      media.removeEventListener('stalled', this.handleMediaStalled);\n      media.removeEventListener('emptied', this.handleMediaEmptied);\n      media.removeEventListener(\n        'canplaythrough',\n        this.handleMediaCanplaythrough\n      );\n      media.removeEventListener('timeupdate', this.handleMediaTimeupdate);\n      media.removeEventListener(\n        'loadedmetadata',\n        this.handleMediaLoadedmetadata\n      );\n      media.removeEventListener('volumechange', this.handleMediaVolumechange);\n      media.removeEventListener(\n        'durationchange',\n        this.handleMediaDurationchange\n      );\n      media.removeEventListener('progress', this.handleMediaProgress);\n      media.removeEventListener('ratechange', this.handleMediaRatechange);\n      // remove special event listeners on the media element\n      media.removeEventListener('srcrequest', this.handleMediaSrcrequest);\n      media.removeEventListener('loopchange', this.handleMediaLoopchange);\n\n      const sourceElements = media.querySelectorAll('source');\n      for (const sourceElement of sourceElements) {\n        sourceElement.removeEventListener('error', this.onTrackPlaybackFailure);\n      }\n    }\n    clearTimeout(this.gapLengthTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  stealMediaSession() {\n    if (\n      // eslint-disable-next-line no-undef\n      !(window.MediaSession && navigator.mediaSession instanceof MediaSession)\n    ) {\n      return;\n    }\n    // eslint-disable-next-line no-undef\n    navigator.mediaSession.metadata = new MediaMetadata(\n      this.props.playlist[this.state.activeTrackIndex]\n    );\n    supportableMediaSessionActions\n      .map(action => {\n        if (this.props.supportedMediaSessionActions.indexOf(action) === -1) {\n          return null;\n        }\n        const seekLength = this.props.mediaSessionSeekLengthInSeconds;\n        switch (action) {\n          case 'play':\n            return this.togglePause.bind(this, false);\n          case 'pause':\n            return this.togglePause.bind(this, true);\n          case 'previoustrack':\n            return this.backSkip;\n          case 'nexttrack':\n            return this.forwardSkip;\n          case 'seekbackward':\n            return () => (this.media.currentTime -= seekLength);\n          case 'seekforward':\n            return () => (this.media.currentTime += seekLength);\n          default:\n            return undefined;\n        }\n      })\n      .forEach((handler, i) => {\n        navigator.mediaSession.setActionHandler(\n          supportableMediaSessionActions[i],\n          handler\n        );\n      });\n  }\n\n  setMediaElementSources() {\n    // remove current sources\n    const { playlist } = this.props;\n    let firstChild;\n    while ((firstChild = this.media.firstChild)) {\n      this.media.removeChild(firstChild);\n    }\n    if (isPlaylistValid(playlist)) {\n      const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n      // add new sources\n      for (const source of sources) {\n        const sourceElement = document.createElement('source');\n        sourceElement.src = source.src;\n        if (source.type) {\n          sourceElement.type = source.type;\n        }\n        sourceElement.addEventListener('error', this.onTrackPlaybackFailure);\n        this.media.appendChild(sourceElement);\n      }\n    }\n    // cancel playback and re-scan new sources\n    this.media.load();\n  }\n\n  onTrackPlaybackFailure(event) {\n    this.setState({\n      mediaCannotPlay: true\n    });\n    if (this.props.onTrackPlaybackFailure) {\n      this.props.onTrackPlaybackFailure(\n        this.props.playlist[this.state.activeTrackIndex],\n        this.state.activeTrackIndex,\n        event\n      );\n    }\n  }\n\n  registerVideoHostElement(hostElement, { onHostOccupied, onHostVacated }) {\n    this.videoHostElementList = this.videoHostElementList.concat(hostElement);\n    this.videoHostOccupiedCallbacks.set(hostElement, onHostOccupied);\n    this.videoHostVacatedCallbacks.set(hostElement, onHostVacated);\n  }\n\n  renderVideoIntoHostElement(hostElement) {\n    if (this.videoHostElementList.indexOf(hostElement) === -1) {\n      return;\n    }\n    cancelAnimationFrame(this.videoHostUpdateRaf);\n    this.videoHostUpdateRaf = requestAnimationFrame(() =>\n      this.updateVideoHostElement(hostElement)\n    );\n  }\n\n  unregisterVideoHostElement(hostElement) {\n    this.videoHostElementList = this.videoHostElementList.filter(\n      elem => elem !== hostElement\n    );\n    this.videoHostOccupiedCallbacks.delete(hostElement);\n    this.videoHostVacatedCallbacks.delete(hostElement);\n    if (this.media.parentNode === hostElement) {\n      this.updateVideoHostElement();\n    }\n  }\n\n  updateVideoHostElement(hostElement) {\n    if (!hostElement) {\n      hostElement = this.videoHostElementList[0] || this.mediaContainer;\n    } else {\n      // move hostElement to front of list\n      this.videoHostElementList = [hostElement].concat(\n        this.videoHostElementList.filter(elem => elem !== hostElement)\n      );\n    }\n    const playing = !this.media.paused;\n    const oldHostElement = this.media.parentNode;\n    if (hostElement === oldHostElement) {\n      return;\n    }\n    hostElement.appendChild(this.media);\n    // according to the HTML spec playback should continue, but\n    // some browsers pause the element whenever it is moved around, so\n    // let's make sure playback resumes if that's the case.\n    if (playing && this.media.paused) {\n      this.media.play();\n    }\n    const onVacated = this.videoHostVacatedCallbacks.get(oldHostElement);\n    if (onVacated) {\n      onVacated(this.media);\n    }\n    const onOccupied = this.videoHostOccupiedCallbacks.get(hostElement);\n    if (onOccupied) {\n      onOccupied(this.media);\n    }\n  }\n\n  handleMediaPlay() {\n    this.setState(\n      state =>\n        state.paused === false && state.awaitingPlayAfterTrackLoad === false\n          ? null\n          : { paused: false, awaitingPlayAfterTrackLoad: false }\n    );\n    this.stealMediaSession();\n  }\n\n  handleMediaPause() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaSrcrequest(e) {\n    const { playlist } = this.props;\n    const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n    if (arrayFindIndex(sources, s => s.src === e.srcRequested) !== -1) {\n      // we're good! nothing to update.\n      return;\n    }\n    // looks like 'src' was set from outside our component.\n    // let's see if we can use it.\n    const newTrackIndex = findTrackIndexByUrl(playlist, e.srcRequested);\n    if (newTrackIndex === -1) {\n      logError(\n        `Source '${e.srcRequested}' does not exist in the loaded playlist. ` +\n          `Make sure you've updated the 'playlist' prop to ` +\n          `PlayerContextProvider before you select this track!`\n      );\n      return;\n    }\n    this.selectTrackIndex(newTrackIndex);\n  }\n\n  handleMediaEnded() {\n    if (this.state.seekInProgress) {\n      // nothing to do if we're in the middle of a seek\n      // (this can happen if we're in seekMode: immediate)\n      return;\n    }\n    clearTimeout(this.gapLengthTimeout);\n    const { playlist, loadFirstTrackOnPlaylistComplete } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    const { cycle, activeTrackIndex } = this.state;\n    if (!cycle && activeTrackIndex + 1 >= playlist.length) {\n      if (loadFirstTrackOnPlaylistComplete) {\n        this.goToTrack({ index: 0, shouldPlay: false, shouldForceLoad: true });\n      }\n      return;\n    }\n    this.gapLengthTimeout = setTimeout(\n      this.forwardSkip,\n      this.props.gapLengthInSeconds * 1000\n    );\n  }\n\n  handleMediaStalled() {\n    this.setState(state => (state.stalled === true ? null : { stalled: true }));\n  }\n\n  handleMediaEmptied() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaCanplaythrough() {\n    this.setState(\n      state => (state.stalled === false ? null : { stalled: false })\n    );\n  }\n\n  handleMediaTimeupdate() {\n    const { currentTime, played } = this.media;\n    if (this.state.trackLoading) {\n      // correct currentTime to preset, if applicable, during load\n      this.media.currentTime = this.state.currentTime;\n      return;\n    }\n    this.setState({\n      currentTime,\n      playedRanges: getTimeRangesArray(played)\n    });\n  }\n\n  handleMediaLoadedmetadata() {\n    if (this.media.currentTime !== this.state.currentTime) {\n      this.media.currentTime = this.state.currentTime;\n    }\n    this.setState(\n      state => (state.trackLoading === false ? null : { trackLoading: false })\n    );\n  }\n\n  handleMediaVolumechange() {\n    const { volume, muted } = this.media;\n    this.setState({ volume, muted });\n  }\n\n  handleMediaDurationchange() {\n    const { duration } = this.media;\n    this.setState({ duration });\n  }\n\n  handleMediaProgress() {\n    this.setState({\n      bufferedRanges: getTimeRangesArray(this.media.buffered),\n      seekableRanges: getTimeRangesArray(this.media.seekable)\n    });\n  }\n\n  handleMediaLoopchange() {\n    const { loop } = this.media;\n    this.setState(state => (state.loop === loop ? null : { loop }));\n  }\n\n  handleMediaRatechange() {\n    const { playbackRate } = this.media;\n    this.setState(\n      state => (state.playbackRate === playbackRate ? null : { playbackRate })\n    );\n  }\n\n  togglePause(value) {\n    clearTimeout(this.delayTimeout);\n    const pause = typeof value === 'boolean' ? value : !this.state.paused;\n    if (pause) {\n      this.media.pause();\n      return;\n    }\n    if (!this.media.currentSrc) {\n      return;\n    }\n    try {\n      const playPromise = this.media.play();\n      if (playPromise && typeof playPromise.catch === 'function') {\n        playPromise\n          .catch(err => {\n            // AbortError is pretty much always called because we're skipping\n            // tracks quickly or hitting pause before a track has a chance to\n            // play. It's pretty safe to just ignore these error messages.\n            if (err.name !== 'AbortError') {\n              return Promise.reject(err);\n            }\n          })\n          .catch(playErrorHandler);\n      }\n    } catch (err) {\n      playErrorHandler(err);\n    }\n  }\n\n  // assumes playlist is valid - don't call without checking\n  goToTrack(args) {\n    clearTimeout(this.delayTimeout);\n    this.setState(prevState => getGoToTrackState({ prevState, ...args }));\n  }\n\n  selectTrackIndex(index) {\n    const { playlist } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    if (index < 0 || index > playlist.length) {\n      logWarning(`Playlist index ${index} is out of bounds!`);\n      return;\n    }\n    if (this.state.shuffle) {\n      this.shuffler.pickNextItem(index, this.state.activeTrackIndex);\n    }\n    this.goToTrack({ index });\n  }\n\n  backSkip() {\n    const { playlist, stayOnBackSkipThreshold } = this.props;\n    const { media } = this;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      media.currentTime >= stayOnBackSkipThreshold ||\n      (!cycle && activeTrackIndex < 1)\n    ) {\n      media.currentTime = 0;\n      return;\n    }\n    let index;\n    if (shuffle) {\n      const previousItem = this.shuffler.findPreviousItem(activeTrackIndex);\n      if (previousItem === undefined) {\n        // if we aren't allowing backShuffle then we'll hit a stopping point.\n        media.currentTime = 0;\n        return;\n      }\n      index = findTrackIndexByUrl(playlist, previousItem);\n    } else {\n      index = activeTrackIndex - 1;\n      if (index < 0) {\n        index = playlist.length - 1;\n      }\n    }\n    this.goToTrack({ index, shouldForceLoad: true });\n  }\n\n  forwardSkip() {\n    const { playlist } = this.props;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      (!cycle && activeTrackIndex + 1 >= playlist.length)\n    ) {\n      return;\n    }\n    let index;\n    if (shuffle) {\n      index = findTrackIndexByUrl(\n        playlist,\n        this.shuffler.findNextItem(activeTrackIndex)\n      );\n    } else {\n      index = activeTrackIndex + 1;\n      if (index >= playlist.length) {\n        index = 0;\n      }\n    }\n    this.goToTrack({ index, shouldForceLoad: true });\n  }\n\n  seekPreview(targetTime) {\n    if (!isPlaylistValid(this.props.playlist)) {\n      return;\n    }\n    const baseStateUpdate = {\n      seekPreviewTime: targetTime,\n      seekInProgress: true\n    };\n    switch (this.props.seekMode) {\n      case 'paused':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (!this.state.paused) {\n          this.togglePause(true);\n        }\n        break;\n      case 'immediate':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true\n        }));\n        this.media.currentTime = targetTime;\n        if (this.state.awaitingResumeOnSeekComplete && !this.media.ended) {\n          // if we earlier encountered an 'ended' state,\n          // un-pausing becomes necessary to resume playback\n          this.togglePause(false);\n        }\n        break;\n      case 'onrelease':\n        this.setState(baseStateUpdate);\n        break;\n    }\n  }\n\n  seekComplete(targetTime) {\n    const { seekPreviewTime, awaitingResumeOnSeekComplete } = this.state;\n    const baseStateUpdate = {\n      seekInProgress: false,\n      awaitingResumeOnSeekComplete: false\n    };\n    const currentTime =\n      typeof targetTime === 'number' ? targetTime : seekPreviewTime;\n\n    if (isNaN(currentTime)) {\n      this.setState(baseStateUpdate);\n      return;\n    }\n    this.setState({\n      ...baseStateUpdate,\n      /* we'll update currentTime on the media listener hook anyway,\n       * but that might not happen for a bit... so the optimistic update\n       * helps us avoid the progress bar jumping around and confusing the user.\n       * https://github.com/benwiley4000/cassette/issues/209\n       */\n      currentTime\n    });\n    this.media.currentTime = currentTime;\n    if (awaitingResumeOnSeekComplete) {\n      if (this.media.ended) {\n        this.forwardSkip();\n      } else {\n        this.togglePause(false);\n      }\n    }\n  }\n\n  setVolume(volume, inProgress = true) {\n    if (inProgress && !this.state.setVolumeInProgress) {\n      this.setState({\n        setVolumeInProgress: true\n      });\n    }\n    const volumeInBounds = convertToNumberWithinIntervalBounds(volume, 0, 1);\n    this.media.muted = volumeInBounds === 0 ? true : false;\n    this.media.volume = volumeInBounds;\n  }\n\n  setVolumeComplete(volume) {\n    if (typeof volume === 'number') {\n      this.setVolume(volume, false);\n    }\n    this.setState({\n      setVolumeInProgress: false\n    });\n    if (!this.media.muted) {\n      this.lastStableVolume = this.media.volume;\n    }\n  }\n\n  toggleMuted(value) {\n    const muted = typeof value === 'boolean' ? value : !this.state.muted;\n    this.media.muted = muted;\n    if (!muted) {\n      this.media.volume = this.lastStableVolume;\n    }\n  }\n\n  toggleShuffle(value) {\n    const shuffle = typeof value === 'boolean' ? value : !this.state.shuffle;\n    this.setState({ shuffle });\n  }\n\n  setRepeatStrategy(repeatStrategy) {\n    if (repeatStrategyOptions.indexOf(repeatStrategy) === -1) {\n      logWarning(\n        'repeatStrategy \"' +\n          repeatStrategy +\n          '\" is not one of: ' +\n          repeatStrategyOptions.split(', ') +\n          '.'\n      );\n      return;\n    }\n    switch (repeatStrategy) {\n      case 'track':\n        // state update is automatic\n        this.media.loop = true;\n        break;\n      case 'playlist':\n        this.setState({\n          loop: false,\n          cycle: true\n        });\n        this.media.loop = false;\n        break;\n      case 'none':\n        this.setState({\n          loop: false,\n          cycle: false\n        });\n        this.media.loop = false;\n        break;\n    }\n  }\n\n  setPlaybackRate(rate) {\n    this.media.playbackRate = rate;\n  }\n\n  getControlProps() {\n    const { props, state } = this;\n    const playerContext = {\n      playlist: props.playlist,\n      activeTrackIndex: state.activeTrackIndex,\n      trackLoading: state.trackLoading,\n      paused: state.paused,\n      currentTime: state.currentTime,\n      seekPreviewTime: state.seekPreviewTime,\n      seekInProgress: state.seekInProgress,\n      awaitingPlayResume:\n        state.awaitingResumeOnSeekComplete || state.awaitingPlayAfterTrackLoad,\n      duration: state.duration,\n      bufferedRanges: state.bufferedRanges,\n      playedRanges: state.playedRanges,\n      seekableRanges: state.seekableRanges,\n      volume: state.volume,\n      muted: state.muted,\n      shuffle: state.shuffle,\n      stalled: state.stalled,\n      playbackRate: state.playbackRate,\n      mediaCannotPlay: state.mediaCannotPlay,\n      setVolumeInProgress: state.setVolumeInProgress,\n      repeatStrategy: getRepeatStrategy(state.loop, state.cycle),\n      registerVideoHostElement: this.registerVideoHostElement,\n      renderVideoIntoHostElement: this.renderVideoIntoHostElement,\n      unregisterVideoHostElement: this.unregisterVideoHostElement,\n      onTogglePause: this.togglePause,\n      onSelectTrackIndex: this.selectTrackIndex,\n      onBackSkip: this.backSkip,\n      onForwardSkip: this.forwardSkip,\n      onSeekPreview: this.seekPreview,\n      onSeekComplete: this.seekComplete,\n      onSetVolume: this.setVolume,\n      onSetVolumeComplete: this.setVolumeComplete,\n      onToggleMuted: this.toggleMuted,\n      onToggleShuffle: this.toggleShuffle,\n      onSetRepeatStrategy: this.setRepeatStrategy,\n      onSetPlaybackRate: this.setPlaybackRate\n    };\n    if (this.playerContext) {\n      // only update this.playerContext if something has changed\n      for (const key of Object.keys(this.playerContext)) {\n        if (playerContext[key] !== this.playerContext[key]) {\n          this.playerContext = playerContext;\n          break;\n        }\n      }\n    } else {\n      // first time - nothing to compare\n      this.playerContext = playerContext;\n    }\n    return this.playerContext;\n  }\n\n  render() {\n    const playerContext = this.getControlProps();\n    return (\n      <Fragment>\n        <div ref={elem => (this.mediaContainer = elem)} hidden />\n        <PlayerContext.Provider value={playerContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(playerContext)\n            : this.props.children}\n        </PlayerContext.Provider>\n      </Fragment>\n    );\n  }\n}\n\nPlayerContextProvider.propTypes = {\n  playlist: PropTypes.arrayOf(PlayerPropTypes.track.isRequired).isRequired,\n  autoplay: PropTypes.bool.isRequired,\n  createMediaElement: PropTypes.func.isRequired,\n  autoplayDelayInSeconds: PropTypes.number.isRequired,\n  gapLengthInSeconds: PropTypes.number.isRequired,\n  crossOrigin: PlayerPropTypes.crossOriginAttribute,\n  defaultVolume: PropTypes.number.isRequired,\n  defaultMuted: PropTypes.bool,\n  defaultRepeatStrategy: PlayerPropTypes.repeatStrategy.isRequired,\n  defaultShuffle: PropTypes.bool,\n  defaultPlaybackRate: PropTypes.number.isRequired,\n  startingTime: PropTypes.number.isRequired,\n  startingTrackIndex: PropTypes.number.isRequired,\n  loadFirstTrackOnPlaylistComplete: PropTypes.bool,\n  seekMode: PlayerPropTypes.seekMode.isRequired,\n  maintainPlaybackRate: PropTypes.bool.isRequired,\n  allowBackShuffle: PropTypes.bool,\n  stayOnBackSkipThreshold: PropTypes.number.isRequired,\n  supportedMediaSessionActions: PropTypes.arrayOf(\n    PlayerPropTypes.mediaSessionAction.isRequired\n  ).isRequired,\n  mediaSessionSeekLengthInSeconds: PropTypes.number.isRequired,\n  mediaElementRef: PropTypes.func,\n  initialStateSnapshot: PropTypes.shape({\n    __unstable__: PropTypes.object.isRequired\n  }),\n  onStateSnapshot: PropTypes.func,\n  onActiveTrackUpdate: PropTypes.func,\n  onTrackPlaybackFailure: PropTypes.func,\n  getPosterImageForTrack: PropTypes.func.isRequired,\n  getMediaTitleAttributeForTrack: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nPlayerContextProvider.defaultProps = {\n  autoplay: false,\n  autoplayDelayInSeconds: 0,\n  createMediaElement: () => document.createElement('video'),\n  gapLengthInSeconds: 0,\n  defaultVolume: 1,\n  defaultMuted: false,\n  defaultRepeatStrategy: 'playlist',\n  defaultShuffle: false,\n  defaultPlaybackRate: 1,\n  startingTime: 0,\n  startingTrackIndex: 0,\n  loadFirstTrackOnPlaylistComplete: true,\n  seekMode: 'immediate',\n  maintainPlaybackRate: false,\n  allowBackShuffle: false,\n  stayOnBackSkipThreshold: 5,\n  supportedMediaSessionActions: ['play', 'pause', 'previoustrack', 'nexttrack'],\n  mediaSessionSeekLengthInSeconds: 10,\n  getPosterImageForTrack(track) {\n    return track && track.artwork ? track.artwork[0].src : '';\n  },\n  getMediaTitleAttributeForTrack: getDisplayText\n};\n\nexport class PlayerContextGroupMember extends Component {\n  componentDidMount() {\n    this.props.groupContext.registerMediaElement(this.mediaElement);\n  }\n\n  componentWillUnmount() {\n    // Media element might not exist\n    // (see componentWillUnmount of PlayerContextProvider)\n    if (this.mediaElement) {\n      this.props.groupContext.unregisterMediaElement(this.mediaElement);\n    }\n  }\n\n  render() {\n    const { groupContext, props } = this.props;\n    const { mediaElementRef, ...rest } = props;\n    return (\n      <PlayerContextProvider\n        {...groupContext.groupProps}\n        {...rest}\n        mediaElementRef={ref => {\n          if (mediaElementRef) {\n            mediaElementRef(ref);\n          }\n          this.mediaElement = ref;\n        }}\n      />\n    );\n  }\n}\n\nPlayerContextGroupMember.propTypes = {\n  groupContext: PropTypes.shape({\n    groupProps: PropTypes.object.isRequired,\n    registerMediaElement: PropTypes.func.isRequired,\n    unregisterMediaElement: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction PlayerContextGroupConsumer(props) {\n  return (\n    <GroupContext.Consumer>\n      {groupContext => {\n        if (!groupContext) {\n          return createElement(PlayerContextProvider, props);\n        }\n        return createElement(PlayerContextGroupMember, {\n          groupContext,\n          props\n        });\n      }}\n    </GroupContext.Consumer>\n  );\n}\n\nexport default PlayerContextGroupConsumer;\n","// TODO: support Preact, Inferno, etc.\nfunction getReactParentNameStack(componentInstance) {\n  const fiber = componentInstance._reactInternalFiber;\n  const parentStack = [];\n  let owner = fiber;\n  while ((owner = owner._debugOwner)) {\n    if (owner.type.name) {\n      parentStack.push(owner.type.name);\n    }\n  }\n  return parentStack;\n}\n\nexport default getReactParentNameStack;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport PlayerContext from './PlayerContext';\n\nimport { logWarning } from './utils/console';\nimport getReactParentNameStack from './utils/getReactParentNameStack';\n\nclass PlayerContextConsumer extends PureComponent {\n  render() {\n    const { children, filterList } = this.props;\n    if (!filterList) {\n      if (!this.warnedAboutFilterList) {\n        let warning = `\n          Please pass the filterList prop to PlayerContextConsumer in order\n          to avoid unnecessarily frequent re-renders, e.g.\n\n          const filterList = ['paused', 'onTogglePause'];\n          // ...\n          <PlayerContextConsumer filterList={filterList}>\n            {({ paused, onTogglePause }) => {\n              return <div>{/* ... */}</div>;\n            }}\n          </PlayerContextConsumer>\n        `;\n        for (const parentName of getReactParentNameStack(this)) {\n          warning += `\n            Rendered by ${parentName}`;\n        }\n        logWarning(warning);\n        this.warnedAboutFilterList = true;\n      }\n      return <PlayerContext.Consumer>{children}</PlayerContext.Consumer>;\n    }\n\n    const flags = PlayerContext.__cassetteGetObservedBits(filterList);\n    return (\n      <PlayerContext.Consumer unstable_observedBits={flags}>\n        {playerContext => {\n          const usedContext = {};\n          for (const name of filterList) {\n            if (playerContext.hasOwnProperty(name)) {\n              usedContext[name] = playerContext[name];\n            }\n          }\n          return children(usedContext);\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nPlayerContextConsumer.propTypes = {\n  children: PropTypes.func.isRequired,\n  filterList: PropTypes.arrayOf(PropTypes.string.isRequired)\n};\n\nexport default PlayerContextConsumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GroupContext from './GroupContext';\n\n/**\n * A wrapper which can be used to share configuration among multiple descendant [`PlayerContextProvider`](#playercontextprovider) instances as well as prevent multiple media elements from playing audio simultaneously\n */\nexport class PlayerContextGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.registerMediaElement = this.registerMediaElement.bind(this);\n    this.unregisterMediaElement = this.unregisterMediaElement.bind(this);\n    this.enforceOneMediaSourceOnly = this.enforceOneMediaSourceOnly.bind(this);\n    this.mediaElements = [];\n  }\n\n  registerMediaElement(elem) {\n    this.mediaElements = this.mediaElements.concat(elem);\n    elem.addEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.addEventListener('volumechange', this.enforceOneMediaSourceOnly, true);\n  }\n\n  unregisterMediaElement(elem) {\n    this.mediaElements = this.mediaElements.filter(element => elem !== element);\n    elem.removeEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.removeEventListener(\n      'volumechange',\n      this.enforceOneMediaSourceOnly,\n      true\n    );\n  }\n\n  enforceOneMediaSourceOnly(e) {\n    const mediaElement = e.target;\n    const { paused, muted } = mediaElement;\n    if (paused || muted) {\n      return;\n    }\n    for (const element of this.mediaElements) {\n      if (element !== mediaElement && !element.muted) {\n        element.pause();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <GroupContext.Consumer>\n        {groupContext => {\n          const value = groupContext\n            ? {\n                ...groupContext,\n                groupProps: { ...groupContext.groupProps, ...this.props }\n              }\n            : {\n                groupProps: this.props,\n                registerMediaElement: this.registerMediaElement,\n                unregisterMediaElement: this.unregisterMediaElement\n              };\n          return (\n            <GroupContext.Provider value={value}>\n              {this.props.children}\n            </GroupContext.Provider>\n          );\n        }}\n      </GroupContext.Consumer>\n    );\n  }\n}\n\nPlayerContextGroup.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PlayerContextGroup;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\nimport { logWarning } from './utils/console';\n\nexport default createSingleGlobalContext({\n  displayName: 'FullscreenContext',\n  defaultValue: {\n    fullscreen: false,\n    requestFullscreen() {\n      logWarning(\n        'Fullscreen request ignored since there is no ' +\n          'FullscreenContextProvider ancestor.'\n      );\n    },\n    requestExitFullscreen() {\n      logWarning(\n        'Exit fullscreen request ignored since there is no ' +\n          'FullscreenContextProvider ancestor.'\n      );\n    }\n  },\n  keysWillUpdate: ['fullscreen']\n});\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FullscreenContext from './FullscreenContext';\n\nconst fullscreenStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n/**\n * Wraps an area which should be fullscreen-able\n */\nexport class FullscreenContextProvider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullscreen: false\n    };\n    this.requestFullscreen = this.requestFullscreen.bind(this);\n    this.requestExitFullscreen = this.requestExitFullscreen.bind(this);\n    this.handleFullscreenChange = this.handleFullscreenChange.bind(this);\n    this.fullscreenElement = null;\n  }\n\n  componentDidMount() {\n    document.addEventListener('fullscreenchange', this.handleFullscreenChange);\n    document.addEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'fullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  requestFullscreen() {\n    if (!this.props.fullscreenEnabled) {\n      return;\n    }\n    if (this.fullscreenElement.requestFullscreen) {\n      this.fullscreenElement.requestFullscreen();\n    } else if (this.fullscreenElement.webkitRequestFullscreen) {\n      this.fullscreenElement.webkitRequestFullscreen();\n    } else if (this.fullscreenElement.mozRequestFullscreen) {\n      this.fullscreenElement.mozRequestFullScreen();\n    } else if (this.fullscreenElement.msRequestFullscreen) {\n      this.fullscreenElement.msRequestFullscreen();\n    }\n  }\n\n  requestExitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.mozExitFullscreen();\n    }\n  }\n\n  handleFullscreenChange() {\n    const documentFullscreenElement =\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n    this.setState({\n      fullscreen: documentFullscreenElement === this.fullscreenElement\n    });\n  }\n\n  getFullscreenContext() {\n    const fullscreenContext = {\n      fullscreen: this.state.fullscreen,\n      requestFullscreen: this.requestFullscreen,\n      requestExitFullscreen: this.requestExitFullscreen\n    };\n    if (\n      this.fullscreenContext &&\n      fullscreenContext.fullscreen === this.fullscreenContext.fullscreen\n    ) {\n      // no change\n      return this.fullscreenContext;\n    }\n    return (this.fullscreenContext = fullscreenContext);\n  }\n\n  render() {\n    const fullscreenContext = this.getFullscreenContext();\n    return (\n      <div\n        ref={elem => (this.fullscreenElement = elem)}\n        style={this.state.fullscreen ? fullscreenStyle : undefined}\n      >\n        <FullscreenContext.Provider value={fullscreenContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(fullscreenContext)\n            : this.props.children}\n        </FullscreenContext.Provider>\n      </div>\n    );\n  }\n}\n\nFullscreenContextProvider.propTypes = {\n  fullscreenEnabled: PropTypes.bool.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nFullscreenContextProvider.defaultProps = {\n  fullscreenEnabled: true\n};\n\nexport default FullscreenContextProvider;\n","import React, { createElement } from 'react';\n\nimport PlayerContext from './PlayerContext';\nimport FullscreenContext from './FullscreenContext';\nimport { logWarning } from './utils/console';\n\nfunction playerContextFilter(component, contextPropNames) {\n  const warned = {};\n  const childName = component.displayName || component.name;\n  const flags = PlayerContext.__cassetteGetObservedBits(contextPropNames);\n  function PlayerContextFilter(props) {\n    return (\n      <FullscreenContext.Consumer>\n        {fullscreenContext => (\n          <PlayerContext.Consumer unstable_observedBits={flags}>\n            {playerContext => {\n              const childProps = { ...props };\n              for (const propName of contextPropNames) {\n                if (playerContext.hasOwnProperty(propName)) {\n                  childProps[propName] = playerContext[propName];\n                } else if (fullscreenContext.hasOwnProperty(propName)) {\n                  childProps[propName] = fullscreenContext[propName];\n                } else if (!warned[propName]) {\n                  logWarning(\n                    \"Prop '\" +\n                      propName +\n                      \"' for component \" +\n                      childName +\n                      ' not found in playerContext or fullscreenContext.'\n                  );\n                  warned[propName] = true;\n                }\n              }\n              return createElement(component, childProps);\n            }}\n          </PlayerContext.Consumer>\n        )}\n      </FullscreenContext.Consumer>\n    );\n  }\n  if (childName) {\n    PlayerContextFilter.displayName = `PlayerContextFilter(${childName})`;\n  }\n  return PlayerContextFilter;\n}\n\nexport default playerContextFilter;\n","import PlayerContextProvider from './PlayerContextProvider';\nimport PlayerContext from './PlayerContext';\nimport PlayerContextConsumer from './PlayerContextConsumer';\nimport PlayerContextGroup from './PlayerContextGroup';\nimport FullscreenContextProvider from './FullscreenContextProvider';\nimport FullscreenContext from './FullscreenContext';\nimport playerContextFilter from './playerContextFilter';\nimport * as PlayerPropTypes from './PlayerPropTypes';\n\nexport { PlayerContextProvider };\nexport { PlayerContextConsumer };\nexport { PlayerContextGroup };\nexport { FullscreenContextProvider };\nexport const FullscreenContextConsumer = FullscreenContext.Consumer;\nexport { playerContextFilter };\nexport { PlayerPropTypes };\n\n// undocumented exports\nexport * from './utils/console';\nexport {\n  default as convertToNumberWithinIntervalBounds\n} from './utils/convertToNumberWithinIntervalBounds';\nexport { default as isPlaylistValid } from './utils/isPlaylistValid';\nexport { default as getDisplayText } from './utils/getDisplayText';\nexport { repeatStrategyOptions } from './constants';\nexport const donotuse_PlayerContext = PlayerContext;\nexport const donotuse_FullscreenContext = FullscreenContext;\n"],"sourceRoot":""}