{"version":3,"sources":["webpack://cassetteCore/webpack/universalModuleDefinition","webpack://cassetteCore/webpack/bootstrap","webpack://cassetteCore/external {\"root\":\"PropTypes\",\"commonjs\":\"prop-types\",\"commonjs2\":\"prop-types\",\"amd\":\"prop-types\"}","webpack://cassetteCore/external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://cassetteCore/./packages/core/src/utils/console.js","webpack://cassetteCore/./packages/core/src/utils/createSingleGlobalContext.js","webpack://cassetteCore/./packages/core/node_modules/array-find-index/index.js","webpack://cassetteCore/(webpack)/buildin/global.js","webpack://cassetteCore/./packages/core/src/PlayerContext.js","webpack://cassetteCore/./packages/core/src/GroupContext.js","webpack://cassetteCore/./packages/core/src/constants.js","webpack://cassetteCore/./packages/core/src/PlayerPropTypes.js","webpack://cassetteCore/./packages/core/src/factories/createCustomMediaElement.js","webpack://cassetteCore/./packages/core/src/utils/ShuffleManager.js","webpack://cassetteCore/./packages/core/src/utils/isPlaylistValid.js","webpack://cassetteCore/./packages/core/src/utils/getTrackSources.js","webpack://cassetteCore/./packages/core/src/utils/findTrackIndexByUrl.js","webpack://cassetteCore/./packages/core/src/utils/snapshot.js","webpack://cassetteCore/./packages/core/src/utils/getSourceList.js","webpack://cassetteCore/./packages/core/src/utils/getTimeRangesArray.js","webpack://cassetteCore/./packages/core/src/utils/getRepeatStrategy.js","webpack://cassetteCore/./packages/core/src/utils/convertToNumberWithinIntervalBounds.js","webpack://cassetteCore/./packages/core/src/utils/getDisplayText.js","webpack://cassetteCore/./packages/core/src/utils/parseTimeString.js","webpack://cassetteCore/./packages/core/src/utils/getInitialDuration.js","webpack://cassetteCore/./packages/core/src/PlayerContextProvider.js","webpack://cassetteCore/./packages/core/src/utils/getReactParentNameStack.js","webpack://cassetteCore/./packages/core/src/PlayerContextConsumer.js","webpack://cassetteCore/./packages/core/src/PlayerContextGroup.js","webpack://cassetteCore/./packages/core/src/FullscreenContext.js","webpack://cassetteCore/./packages/core/src/FullscreenContextProvider.js","webpack://cassetteCore/./packages/core/src/playerContextFilter.js","webpack://cassetteCore/./packages/core/src/index.js"],"names":["log","console","bind","logError","error","logWarning","warn","packageVersion","version","_global","window","global","__cassette_contexts__","createSingleGlobalContext","displayName","defaultValue","keysWillUpdate","ExistingContext","flags","i","key","Context","getChangedBits","prev","next","mask","__cassetteGetObservedBits","keys","observedBits","repeatStrategyOptions","requiredOnlyUnlessHasProp","propType","altPropName","warnedAboutDefiningBoth","validate","props","propName","componentName","rest","isRequired","Error","controlKeyword","oneOf","control","oneOfType","func","crossOriginAttribute","mediaSource","shape","src","string","type","mediaSessionAction","mediaSessionArtwork","sizes","url","sources","arrayOf","title","artist","album","artwork","duration","number","startingTime","isUnboundedStream","bool","meta","object","seekMode","loopchange","srcrequest","createCustomMediaElement","media","MutationObserver","dispatchEvent","Event","observe","attributes","attributeFilter","Object","defineProperty","get","currentSrc","set","e","srcRequested","ShuffleManager","list","options","_list","_forwardStack","_backStack","_currentItem","undefined","_allowBackShuffle","Boolean","allowBackShuffle","findNextItem","currentIndex","setCurrentIndex","_findNextItem","findPreviousItem","pickNextItem","index","push","length","setList","setOptions","o","item","clear","_goForward","n","forwardStack","backStack","currentItem","pop","_allItemsMatch","allowMore","indexOf","nextItem","Math","floor","random","isPlaylistValid","playlist","blankSources","getTrackSources","findTrackIndexByUrl","track","source","veryLongKey","versionKey","migrations","oldSnapshot","__unstable__","getStateSnapshot","state","paused","currentTime","activeTrackIndex","volume","muted","loop","cycle","shuffle","playbackRate","__playlist__","Infinity","activeTrackSrc","restoreStateFromSnapshot","snapshot","migratedSnapshot","slice","reduce","migration","restoredStateValues","awaitingPlay","useCurrentTime","newTrackIndex","getSourceList","map","_","getTimeRangesArray","timeRangesObj","timeRangesArray","Array","start","end","getRepeatStrategy","convertToNumberWithinIntervalBounds","min","max","getDisplayText","parseTimeString","str","seconds","factor","times","split","parseInt","getInitialDuration","playErrorHandler","err","name","warningMessage","Date","toLocaleTimeString","supportableMediaSessionActions","defaultState","seekPreviewTime","seekInProgress","awaitingResumeOnSeekComplete","awaitingPlayAfterTrackLoad","bufferedRanges","playedRanges","seekableRanges","stalled","shouldRequestPlayOnNextUpdate","mediaCannotPlay","maxKnownTime","getGoToTrackState","prevState","shouldPlay","shouldForceLoad","isNewTrack","shouldLoadAsNew","trackLoading","awaitingForceLoad","startingTrackIndex","playlistIsValid","initialStateSnapshot","restoredStateFromSnapshot","a","c","JSON","stringify","defaultVolume","defaultMuted","defaultRepeatStrategy","defaultShuffle","defaultPlaybackRate","setVolumeInProgress","autoplay","lastStableVolume","shuffler","videoHostElementList","videoHostOccupiedCallbacks","Map","videoHostVacatedCallbacks","handleTrackPlaybackFailure","togglePause","selectTrackIndex","forwardSkip","backSkip","seekPreview","seekComplete","setVolume","setVolumeComplete","toggleMuted","toggleShuffle","setRepeatStrategy","setPlaybackRate","registerVideoHostElement","renderVideoIntoHostElement","unregisterVideoHostElement","updateVideoHostElement","handleMediaPlay","handleMediaPause","handleMediaSrcrequest","handleMediaEnded","handleMediaEmptied","handleMediaStalled","handleMediaCanplaythrough","handleMediaCanplay","handleMediaTimeupdate","handleMediaLoadeddata","handleMediaVolumechange","handleMediaDurationchange","handleMediaProgress","handleMediaLoopchange","handleMediaRatechange","componentDidMount","createMediaElement","crossOrigin","autoplayDelayInSeconds","mediaElementRef","getPosterImageForTrack","getMediaTitleAttributeForTrack","onActiveTrackUpdate","setAttribute","addEventListener","setMediaElementSources","mediaContainer","appendChild","setState","delayTimeout","setTimeout","trackIndex","previousTrack","previousTrackIndex","getDerivedStateFromProps","nextProps","newPlaylist","baseNewState","prevSources","currentSources","componentDidUpdate","prevProps","newSources","prevTrack","newTrack","stealMediaSession","clearTimeout","snapshotUpdateTimeout","onStateSnapshot","componentWillUnmount","removeEventListener","sourceElements","querySelectorAll","sourceElement","gapLengthTimeout","MediaSession","navigator","mediaSession","metadata","MediaMetadata","action","supportedMediaSessionActions","seekLength","mediaSessionSeekLengthInSeconds","forEach","handler","setActionHandler","firstChild","removeChild","document","createElement","load","event","onTrackPlaybackFailure","hostElement","onHostOccupied","onHostVacated","concat","cancelAnimationFrame","videoHostUpdateRaf","requestAnimationFrame","filter","elem","delete","parentNode","playing","oldHostElement","play","onVacated","onOccupied","s","loadFirstTrackOnPlaylistComplete","goToTrack","gapLengthInSeconds","played","onTimeUpdate","activeTrack","activeTrackAtLastDurationChange","buffered","seekable","value","pause","playPromise","catch","Promise","reject","args","stayOnBackSkipThreshold","previousItem","targetTime","baseStateUpdate","ended","isNaN","inProgress","volumeInBounds","repeatStrategy","rate","getControlProps","playerContext","awaitingPlayResume","onTogglePause","onSelectTrackIndex","onBackSkip","onForwardSkip","onSeekPreview","onSeekComplete","onSetVolume","onSetVolumeComplete","onToggleMuted","onToggleShuffle","onSetRepeatStrategy","onSetPlaybackRate","render","children","propTypes","maintainPlaybackRate","node","defaultProps","groupContext","registerMediaElement","mediaElement","unregisterMediaElement","groupProps","ref","PlayerContextGroupConsumer","getReactParentNameStack","componentInstance","fiber","_reactInternalFiber","parentStack","owner","_debugOwner","filterList","warnedAboutFilterList","warning","parentName","usedContext","hasOwnProperty","enforceOneMediaSourceOnly","mediaElements","element","target","fullscreen","requestFullscreen","requestExitFullscreen","fullscreenStyle","width","height","handleFullscreenChange","fullscreenElement","fullscreenEnabled","webkitRequestFullscreen","mozRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","mozExitFullscreen","documentFullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","getFullscreenContext","fullscreenContext","playerContextFilter","component","contextPropNames","warned","childName","PlayerContextFilter","childProps","FullscreenContextConsumer","Consumer","donotuse_PlayerContext","donotuse_FullscreenContext"],"mappings":"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","file":"es5/cassette-core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"prop-types\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"prop-types\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cassetteCore\"] = factory(require(\"prop-types\"), require(\"react\"));\n\telse\n\t\troot[\"cassetteCore\"] = factory(root[\"PropTypes\"], root[\"React\"]);\n})((typeof self !== \"undefined\" ? self : this), function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/* eslint-disable no-console */\n\nconst log = console.log.bind(console);\n\nexport const logError = console.error ? console.error.bind(console) : log;\nexport const logWarning = console.warn ? console.warn.bind(console) : log;\n","import { createContext } from 'react';\n\nimport { logWarning } from './console';\n\nconst packageVersion = require('../../package.json').version;\n\nconst _global = typeof window === 'undefined' ? global : window;\n_global.__cassette_contexts__ = _global.__cassette_contexts__ || {};\n\nfunction createSingleGlobalContext({\n  displayName,\n  defaultValue = null,\n  keysWillUpdate\n}) {\n  const ExistingContext = _global.__cassette_contexts__[displayName];\n  if (ExistingContext) {\n    if (ExistingContext.packageVersion !== packageVersion) {\n      logWarning(\n        `Warning: multiple versions of ${displayName} from the @cassette/core` +\n          ` package have been loaded. v${packageVersion} will be ignored and` +\n          ` v${ExistingContext.packageVersion} will be used instead.`\n      );\n    }\n    return ExistingContext;\n  }\n  // inspired by:\n  // https://github.com/philosaf/observed-bits/blob/master/src/index.js\n  const flags = {};\n  let i = 0;\n  for (const key of keysWillUpdate) {\n    flags[key] = 1 << i++;\n  }\n  const Context = createContext(defaultValue, function getChangedBits(\n    prev,\n    next\n  ) {\n    let mask = 0;\n    for (const key of keysWillUpdate) {\n      if (prev[key] !== next[key]) {\n        mask |= flags[key];\n      }\n    }\n    return mask;\n  });\n  Context.__cassetteGetObservedBits = keys => {\n    let observedBits = 0;\n    for (const key of keys) {\n      observedBits |= flags[key];\n    }\n    return observedBits;\n  };\n  Context.displayName = displayName;\n  Context.packageVersion = packageVersion;\n  _global.__cassette_contexts__[displayName] = Context;\n  return Context;\n}\n\nexport default createSingleGlobalContext;\n","'use strict';\nmodule.exports = function (arr, predicate, ctx) {\n\tif (typeof Array.prototype.findIndex === 'function') {\n\t\treturn arr.findIndex(predicate, ctx);\n\t}\n\n\tif (typeof predicate !== 'function') {\n\t\tthrow new TypeError('predicate must be a function');\n\t}\n\n\tvar list = Object(arr);\n\tvar len = list.length;\n\n\tif (len === 0) {\n\t\treturn -1;\n\t}\n\n\tfor (var i = 0; i < len; i++) {\n\t\tif (predicate.call(ctx, list[i], i, list)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\n// TODO: test to make sure context contents stay in sync with\n// enumerated list here\n\nexport default createSingleGlobalContext({\n  displayName: 'PlayerContext',\n  keysWillUpdate: [\n    'playlist',\n    'activeTrackIndex',\n    'trackLoading',\n    'paused',\n    'currentTime',\n    'seekPreviewTime',\n    'seekInProgress',\n    'awaitingPlayResume',\n    'duration',\n    'bufferedRanges',\n    'playedRanges',\n    'seekableRanges',\n    'volume',\n    'muted',\n    'shuffle',\n    'stalled',\n    'playbackRate',\n    'setVolumeInProgress',\n    'repeatStrategy',\n    'mediaCannotPlay'\n  ]\n});\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\nexport default createSingleGlobalContext({\n  displayName: 'GroupContext',\n  keysWillUpdate: ['groupProps']\n});\n","export const repeatStrategyOptions = ['none', 'playlist', 'track'];\n","import PropTypes from 'prop-types';\n\nimport { repeatStrategyOptions } from './constants';\nimport { logWarning } from './utils/console';\n\nfunction requiredOnlyUnlessHasProp(propType, altPropName) {\n  let warnedAboutDefiningBoth = false;\n  function validate(props, propName, componentName, ...rest) {\n    if (propName in props) {\n      if (!warnedAboutDefiningBoth && altPropName in props) {\n        logWarning(\n          `Do not define both the '${propName}' and '${altPropName}' props.`\n        );\n        warnedAboutDefiningBoth = true;\n      }\n      return propType.isRequired(props, propName, componentName, ...rest);\n    }\n    if (!(altPropName in props)) {\n      return new Error(\n        `If the '${altPropName}' prop is not defined, '${propName}' must be.`\n      );\n    }\n  }\n  return validate;\n}\n\nexport const controlKeyword = PropTypes.oneOf([\n  'playpause',\n  'backskip',\n  'forwardskip',\n  'volume',\n  'mute',\n  'repeat',\n  'shuffle',\n  'progress',\n  'progressdisplay',\n  'fullscreen',\n  'spacer'\n]);\n\nexport const control = PropTypes.oneOfType([PropTypes.func, controlKeyword]);\n\nexport const crossOriginAttribute = PropTypes.oneOf([\n  'anonymous',\n  'use-credentials'\n]);\n\nexport const repeatStrategy = PropTypes.oneOf(repeatStrategyOptions);\n\nexport const mediaSource = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n\nexport const mediaSessionAction = PropTypes.oneOf([\n  'play',\n  'pause',\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n]);\n\nexport const mediaSessionArtwork = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  type: PropTypes.string\n});\n\nexport const track = PropTypes.shape({\n  url: requiredOnlyUnlessHasProp(PropTypes.string, 'sources'),\n  sources: requiredOnlyUnlessHasProp(\n    PropTypes.arrayOf(mediaSource.isRequired),\n    'url'\n  ),\n  title: PropTypes.string.isRequired,\n  artist: PropTypes.string,\n  album: PropTypes.string,\n  artwork: PropTypes.arrayOf(mediaSessionArtwork.isRequired),\n  duration: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  startingTime: PropTypes.number,\n  isUnboundedStream: PropTypes.bool,\n  meta: PropTypes.object\n});\n\nexport const seekMode = PropTypes.oneOf(['paused', 'immediate', 'onrelease']);\n","const loopchange = 'loopchange';\nconst srcrequest = 'srcrequest';\n\nfunction createCustomMediaElement(media) {\n  new MutationObserver(() => {\n    media.dispatchEvent(new Event(loopchange));\n  }).observe(media, {\n    attributes: true,\n    attributeFilter: ['loop']\n  });\n  // Don't let the media src property get modified directly.\n  // Instead, when it does get set, dispatch an event to be\n  // handled in a way that doesn't conflict with the loaded\n  // playlist.\n  Object.defineProperty(media, 'src', {\n    get: () => media.currentSrc,\n    set: src => {\n      const e = new Event(srcrequest);\n      e.srcRequested = src;\n      media.dispatchEvent(e);\n    }\n  });\n  return media;\n}\n\nexport default createCustomMediaElement;\n","/* ShuffleManager\n *\n * Manages navigation throughout a list which is:\n * - Sourced from another provided list\n * - In random order (except to avoid consecutive duplicates)\n * - Extended endlessly on-the-fly, as needed\n * - Able to have future history overwritten by non-random choices\n * - Able to swap source lists and maintain shuffle order for common members\n */\n\nexport class ShuffleManager {\n  constructor(list, options = {}) {\n    this._list = list;\n    this._forwardStack = [];\n    this._backStack = [];\n    this._currentItem = undefined;\n\n    this._allowBackShuffle = Boolean(options.allowBackShuffle);\n  }\n\n  findNextItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._forwardStack,\n      this._backStack,\n      this._currentItem,\n      true\n    );\n    return this._currentItem;\n  }\n\n  findPreviousItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._backStack,\n      this._forwardStack,\n      this._currentItem,\n      this._allowBackShuffle\n    );\n    return this._currentItem;\n  }\n\n  pickNextItem(index, currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    if (this._list[index] === undefined) {\n      return undefined;\n    }\n    if (this._currentItem !== undefined) {\n      this._backStack.push(this._currentItem);\n    }\n    this._forwardStack.length = 0;\n    this._currentItem = this._list[index];\n    return this._currentItem;\n  }\n\n  setList(list) {\n    this._list = list;\n  }\n\n  setOptions(options) {\n    for (const o of Object.keys(options)) {\n      switch (o) {\n        case 'allowBackShuffle':\n          this[`_${o}`] = Boolean(options[o]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  setCurrentIndex(currentIndex) {\n    const item = this._list[currentIndex];\n    if (this._currentItem !== item) {\n      this.clear();\n      this._currentItem = item;\n    }\n  }\n\n  clear() {\n    this._forwardStack.length = 0;\n    this._backStack.length = 0;\n    this._currentItem = undefined;\n  }\n}\n\nfunction _goForward(n, forwardStack, backStack, currentItem) {\n  let item = currentItem;\n  for (let i = 0; i < n; i++) {\n    if (!forwardStack.length) {\n      // rollback before erroring (note stack reversal)\n      _goForward(i, backStack, forwardStack, item);\n      throw `Moving ${n} places was not possible!`;\n    }\n    backStack.push(item);\n    item = forwardStack.pop();\n  }\n  return item;\n}\n\nfunction _allItemsMatch(list, item) {\n  if (!list.length) {\n    return false;\n  }\n  for (let i = 0; i < list.length; i++) {\n    if (item !== list[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction _findNextItem(list, forwardStack, backStack, currentItem, allowMore) {\n  let item = currentItem;\n  if (!list.length) {\n    return undefined;\n  }\n  for (let i = 1; i <= forwardStack.length; i++) {\n    if (list.indexOf(forwardStack[forwardStack.length - i]) !== -1) {\n      return _goForward(i, forwardStack, backStack, item);\n    }\n  }\n  if (!allowMore) {\n    return undefined;\n  }\n  if (_allItemsMatch(list, item)) {\n    // we can serve this as our \"next\" item but we\n    // won't modify our history since it's the same.\n    return item;\n  }\n  let nextItem;\n  do {\n    nextItem = list[Math.floor(Math.random() * list.length)];\n  } while (item === nextItem || nextItem === undefined);\n  // if we're skipping items that aren't in our current list we may\n  // have some items in our forwardStack - make sure we move to the front.\n  item = _goForward(forwardStack.length, forwardStack, backStack, item);\n  if (item !== undefined) {\n    backStack.push(item);\n  }\n  return nextItem;\n}\n\nexport default ShuffleManager;\n","function isPlaylistValid(playlist) {\n  return Boolean(playlist && playlist.length);\n}\n\nexport default isPlaylistValid;\n","import isPlaylistValid from './isPlaylistValid';\n\nconst blankSources = [{ src: '' }];\n\nfunction getTrackSources(playlist, index) {\n  if (!isPlaylistValid(playlist)) {\n    return blankSources;\n  }\n  const { sources, url } = playlist[index];\n  if (sources) {\n    return sources.length ? sources : blankSources;\n  }\n  return [{ src: url }];\n}\n\nexport default getTrackSources;\n","import arrayFindIndex from 'array-find-index';\n\nfunction findTrackIndexByUrl(playlist, url) {\n  return arrayFindIndex(playlist, track => {\n    if (track.sources) {\n      return arrayFindIndex(track.sources, source => source.src === url) !== -1;\n    }\n    return track.url && url === track.url;\n  });\n}\n\nexport default findTrackIndexByUrl;\n","import isPlaylistValid from './isPlaylistValid';\nimport getTrackSources from './getTrackSources';\nimport findTrackIndexByUrl from './findTrackIndexByUrl';\n\nconst veryLongKey =\n  '__highly_unstable_snapshot_internals_which_will_break_your_app_if_you_use_them_directly__';\nconst versionKey = '__cassette_snapshot_version__';\n\n// IMPORTANT: new migrations *must* always be added to the end since\n// the tracked snapshot version is based on the migration index.\n// If there is a crash-inducing bug in an existing migration, it can be patched\n// in-place, but it should never be removed from the migrations array.\nconst migrations = [\n  oldSnapshot => {\n    const { __unstable__, ...rest } = oldSnapshot;\n    return {\n      ...rest,\n      [veryLongKey]: __unstable__\n    };\n  }\n];\n\nexport function getStateSnapshot(state) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    duration,\n    __playlist__\n  } = state;\n  return {\n    [versionKey]: migrations.length,\n    [veryLongKey]: {\n      paused,\n      // currentTime can't be restored for unbounded live streams\n      currentTime: duration === Infinity ? 0 : currentTime,\n      activeTrackIndex,\n      volume,\n      muted,\n      loop,\n      cycle,\n      shuffle,\n      playbackRate,\n      activeTrackSrc: isPlaylistValid(__playlist__)\n        ? getTrackSources(__playlist__, activeTrackIndex)[0].src\n        : null\n    }\n  };\n}\n\nexport function restoreStateFromSnapshot(snapshot, props) {\n  const migratedSnapshot = migrations\n    .slice(snapshot[versionKey] || 0)\n    .reduce((oldSnapshot, migration) => migration(oldSnapshot), snapshot);\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    activeTrackSrc\n  } = migratedSnapshot[veryLongKey];\n  const restoredStateValues = {};\n  if (isPlaylistValid(props.playlist) && typeof paused === 'boolean') {\n    // using awaitingPlay instead of paused triggers an animation\n    restoredStateValues.awaitingPlay = !paused;\n  }\n  if (typeof volume === 'number' && volume >= 0 && volume <= 1) {\n    restoredStateValues.volume = volume;\n  }\n  if (typeof muted === 'boolean') {\n    restoredStateValues.muted = muted;\n  }\n  if (typeof loop === 'boolean') {\n    restoredStateValues.loop = loop;\n  }\n  if (typeof cycle === 'boolean') {\n    restoredStateValues.cycle = cycle;\n  }\n  if (typeof shuffle === 'boolean') {\n    restoredStateValues.shuffle = shuffle;\n  }\n  if (typeof playbackRate === 'number') {\n    restoredStateValues.playbackRate = playbackRate;\n  }\n  let useCurrentTime = false;\n  if (\n    typeof activeTrackSrc === 'string' &&\n    typeof activeTrackIndex === 'number' &&\n    activeTrackIndex >= 0\n  ) {\n    // let's try staying on the same track index\n    const currentSrc =\n      props.playlist[activeTrackIndex] &&\n      getTrackSources(props.playlist, activeTrackIndex)[0].src;\n    if (currentSrc && activeTrackSrc === currentSrc) {\n      restoredStateValues.activeTrackIndex = activeTrackIndex;\n      useCurrentTime = true;\n    } else {\n      /* if the track we were playing before is in the new playlist,\n       * update the activeTrackIndex.\n       */\n      const newTrackIndex = findTrackIndexByUrl(props.playlist, activeTrackSrc);\n      if (newTrackIndex !== -1) {\n        restoredStateValues.activeTrackIndex = newTrackIndex;\n        useCurrentTime = true;\n      }\n    }\n  }\n  if (useCurrentTime && typeof currentTime === 'number' && currentTime >= 0) {\n    restoredStateValues.currentTime = currentTime;\n  }\n  return restoredStateValues;\n}\n","import getTrackSources from './getTrackSources';\n\n// collapses playlist into flat list containing\n// the first source url for each track\nfunction getSourceList(playlist) {\n  return (playlist || []).map((_, i) => getTrackSources(playlist, i)[0].src);\n}\n\nexport default getSourceList;\n","function getTimeRangesArray(timeRangesObj) {\n  const timeRangesArray = Array(timeRangesObj.length);\n  for (let i = 0; i < timeRangesObj.length; i++) {\n    timeRangesArray[i] = {\n      start: timeRangesObj.start(i),\n      end: timeRangesObj.end(i)\n    };\n  }\n  return timeRangesArray;\n}\n\nexport default getTimeRangesArray;\n","function getRepeatStrategy(loop, cycle) {\n  if (loop) {\n    return 'track';\n  }\n  if (cycle) {\n    return 'playlist';\n  }\n  return 'none';\n}\n\nexport default getRepeatStrategy;\n","function convertToNumberWithinIntervalBounds(number, min, max) {\n  min = typeof min === 'number' ? min : -Infinity;\n  max = typeof max === 'number' ? max : Infinity;\n  return Math.max(min, Math.min(number, max));\n}\n\nexport default convertToNumberWithinIntervalBounds;\n","function getDisplayText(track) {\n  if (!track) {\n    return '';\n  }\n  if (track.title && track.artist) {\n    return `${track.artist} - ${track.title}`;\n  }\n  return track.title || track.artist || track.album || '';\n}\n\nexport default getDisplayText;\n","function parseTimeString(str) {\n  let seconds = 0;\n  let factor = 1;\n  const times = str.split(':').slice(-3);\n  while (times.length > 0) {\n    seconds += factor * parseInt(times.pop(), 10);\n    factor *= 60;\n  }\n  return seconds;\n}\n\nexport default parseTimeString;\n","import parseTimeString from './parseTimeString';\n\nfunction getInitialDuration(track) {\n  let duration = 0;\n  if (track.duration) {\n    if (typeof track.duration === 'string') {\n      duration = parseTimeString(track.duration);\n    } else {\n      duration = track.duration;\n    }\n  }\n  return duration;\n}\n\nexport default getInitialDuration;\n","import React, { Component, Fragment, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayFindIndex from 'array-find-index';\n\nimport PlayerContext from './PlayerContext';\nimport GroupContext from './GroupContext';\nimport * as PlayerPropTypes from './PlayerPropTypes';\nimport createCustomMediaElement from './factories/createCustomMediaElement';\nimport ShuffleManager from './utils/ShuffleManager';\nimport { getStateSnapshot, restoreStateFromSnapshot } from './utils/snapshot';\nimport getSourceList from './utils/getSourceList';\nimport getTrackSources from './utils/getTrackSources';\nimport getTimeRangesArray from './utils/getTimeRangesArray';\nimport findTrackIndexByUrl from './utils/findTrackIndexByUrl';\nimport isPlaylistValid from './utils/isPlaylistValid';\nimport getRepeatStrategy from './utils/getRepeatStrategy';\nimport convertToNumberWithinIntervalBounds from './utils/convertToNumberWithinIntervalBounds';\nimport { logError, logWarning } from './utils/console';\nimport getDisplayText from './utils/getDisplayText';\nimport getInitialDuration from './utils/getInitialDuration';\nimport { repeatStrategyOptions } from './constants';\n\nfunction playErrorHandler(err) {\n  logError(err);\n  if (err.name === 'NotAllowedError') {\n    const warningMessage =\n      'Media playback failed at ' +\n      new Date().toLocaleTimeString() +\n      '! (Perhaps autoplay is disabled in this browser.)';\n    logWarning(warningMessage);\n  }\n}\n\n// Existing Media Session API implementations have default handlers\n// for play/pause, and may yield unexpected behavior if custom\n// play/pause handlers are defined - so let's leave them be.\nconst supportableMediaSessionActions = [\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n];\n\nconst defaultState = {\n  // indicates whether media player should be paused\n  paused: true,\n  // elapsed time for active track, in seconds\n  currentTime: 0,\n  // The most recent targeted time, in seconds, for seek preview\n  seekPreviewTime: 0,\n  /* true if the user is currently dragging the mouse\n   * to seek a new track position\n   */\n  seekInProgress: false,\n  /* true if media was playing when seek previewing began,\n   * it was paused, and it should be resumed on seek\n   * complete\n   */\n  awaitingResumeOnSeekComplete: false,\n  // true if media will play once new track has loaded\n  awaitingPlayAfterTrackLoad: false,\n  // the duration in seconds of the loaded track\n  duration: 0,\n  // array describing the buffered ranges in the loaded track\n  bufferedRanges: [],\n  // array describing the already-played ranges in the loaded track\n  playedRanges: [],\n  // array describing the seekable ranges in the loaded track\n  seekableRanges: [],\n  // true if the media is currently stalled pending data buffering\n  stalled: false,\n  // true if the active track should play on the next componentDidUpdate\n  shouldRequestPlayOnNextUpdate: false,\n  /* true if an error occurs while fetching the active track media data\n   * or if its type is not a supported media format\n   */\n  mediaCannotPlay: false,\n  // maximum currentTime since the current track has been playing\n  maxKnownTime: 0\n};\n\n// assumes playlist is valid\nfunction getGoToTrackState({\n  prevState,\n  index,\n  track,\n  shouldPlay = true,\n  shouldForceLoad = false\n}) {\n  const isNewTrack = prevState.activeTrackIndex !== index;\n  const shouldLoadAsNew = Boolean(isNewTrack || shouldForceLoad);\n  const currentTime = track.startingTime || 0;\n  return {\n    duration: getInitialDuration(track),\n    activeTrackIndex: index,\n    trackLoading: shouldLoadAsNew,\n    mediaCannotPlay: prevState.mediaCannotPlay && !shouldLoadAsNew,\n    currentTime: convertToNumberWithinIntervalBounds(currentTime, 0),\n    loop: shouldLoadAsNew ? false : prevState.loop,\n    shouldRequestPlayOnNextUpdate: Boolean(shouldPlay),\n    awaitingPlayAfterTrackLoad: Boolean(shouldPlay),\n    awaitingForceLoad: Boolean(shouldForceLoad),\n    maxKnownTime: shouldLoadAsNew ? 0 : prevState.maxKnownTime\n  };\n}\n\n/**\n * Wraps an area which shares a common [`playerContext`](#playercontext)\n */\nexport class PlayerContextProvider extends Component {\n  constructor(props) {\n    super(props);\n    let currentTime = 0;\n    let activeTrackIndex = convertToNumberWithinIntervalBounds(\n      props.startingTrackIndex,\n      0\n    );\n    const playlistIsValid = isPlaylistValid(props.playlist);\n    if (playlistIsValid && props.playlist[activeTrackIndex]) {\n      currentTime = props.playlist[activeTrackIndex].startingTime || 0;\n    }\n    const { initialStateSnapshot } = props;\n    let restoredStateFromSnapshot = {};\n    if (initialStateSnapshot) {\n      try {\n        restoredStateFromSnapshot = restoreStateFromSnapshot(\n          initialStateSnapshot,\n          props\n        );\n        const {\n          activeTrackIndex: a,\n          currentTime: c\n        } = restoredStateFromSnapshot;\n        if (typeof a === 'number') {\n          activeTrackIndex = a;\n        }\n        if (typeof c === 'number') {\n          currentTime = c;\n        }\n      } catch (err) {\n        logWarning(err);\n        logWarning('Loading Cassette state from snapshot failed.');\n        logWarning(\n          `Failed snapshot:\\n${JSON.stringify(initialStateSnapshot, null, 2)}`\n        );\n      }\n    }\n    this.state = {\n      ...defaultState,\n      // index matching requested track (whether track has loaded or not)\n      activeTrackIndex,\n      // whether we're waiting on loading metadata for the active track\n      trackLoading: isPlaylistValid(props.playlist),\n      // the current timestamp on the active track in seconds\n      currentTime: convertToNumberWithinIntervalBounds(currentTime, 0),\n      // the latest volume of the media, between 0 and 1.\n      volume: convertToNumberWithinIntervalBounds(props.defaultVolume, 0, 1),\n      // true if the media has been muted\n      muted: props.defaultMuted,\n      // whether to loop the active track\n      loop: props.defaultRepeatStrategy === 'track',\n      // true if playlist should continue at start after completion\n      cycle: props.defaultRepeatStrategy === 'playlist',\n      // whether to randomly pick next track from playlist after one finishes\n      shuffle: props.defaultShuffle,\n      // Rate at which media should be played. 1.0 is normal speed.\n      playbackRate: props.defaultPlaybackRate,\n      // true if user is currently dragging mouse to change the volume\n      setVolumeInProgress: false,\n      // initialize shouldRequestPlayOnNextUpdate from autoplay prop\n      shouldRequestPlayOnNextUpdate: props.autoplay && playlistIsValid,\n      awaitingForceLoad: false,\n      // duration might be set on track object\n      duration: getInitialDuration(\n        playlistIsValid && props.playlist[activeTrackIndex]\n      ),\n      // playlist prop copied to state (for getDerivedStateFromProps)\n      __playlist__: props.playlist,\n      // load overrides from previously-captured state snapshot\n      ...restoredStateFromSnapshot\n    };\n\n    // volume at last time we were unmuted and not actively setting volume\n    this.lastStableVolume = this.state.volume;\n\n    // used to keep track of play history when we are shuffling\n    this.shuffler = new ShuffleManager(getSourceList(props.playlist), {\n      allowBackShuffle: props.allowBackShuffle\n    });\n\n    // html media element used for playback\n    this.media = null;\n\n    this.videoHostElementList = [];\n    this.videoHostOccupiedCallbacks = new Map();\n    this.videoHostVacatedCallbacks = new Map();\n\n    // bind internal methods\n    this.handleTrackPlaybackFailure = this.handleTrackPlaybackFailure.bind(\n      this\n    );\n\n    // bind callback methods to pass to descendant elements\n    this.togglePause = this.togglePause.bind(this);\n    this.selectTrackIndex = this.selectTrackIndex.bind(this);\n    this.forwardSkip = this.forwardSkip.bind(this);\n    this.backSkip = this.backSkip.bind(this);\n    this.seekPreview = this.seekPreview.bind(this);\n    this.seekComplete = this.seekComplete.bind(this);\n    this.setVolume = this.setVolume.bind(this);\n    this.setVolumeComplete = this.setVolumeComplete.bind(this);\n    this.toggleMuted = this.toggleMuted.bind(this);\n    this.toggleShuffle = this.toggleShuffle.bind(this);\n    this.setRepeatStrategy = this.setRepeatStrategy.bind(this);\n    this.setPlaybackRate = this.setPlaybackRate.bind(this);\n    this.registerVideoHostElement = this.registerVideoHostElement.bind(this);\n    this.renderVideoIntoHostElement = this.renderVideoIntoHostElement.bind(\n      this\n    );\n    this.unregisterVideoHostElement = this.unregisterVideoHostElement.bind(\n      this\n    );\n    this.updateVideoHostElement = this.updateVideoHostElement.bind(this);\n\n    // bind media event handlers\n    this.handleMediaPlay = this.handleMediaPlay.bind(this);\n    this.handleMediaPause = this.handleMediaPause.bind(this);\n    this.handleMediaSrcrequest = this.handleMediaSrcrequest.bind(this);\n    this.handleMediaEnded = this.handleMediaEnded.bind(this);\n    this.handleMediaEmptied = this.handleMediaEmptied.bind(this);\n    this.handleMediaStalled = this.handleMediaStalled.bind(this);\n    this.handleMediaCanplaythrough = this.handleMediaCanplaythrough.bind(this);\n    this.handleMediaCanplay = this.handleMediaCanplay.bind(this);\n    this.handleMediaTimeupdate = this.handleMediaTimeupdate.bind(this);\n    this.handleMediaLoadeddata = this.handleMediaLoadeddata.bind(this);\n    this.handleMediaVolumechange = this.handleMediaVolumechange.bind(this);\n    this.handleMediaDurationchange = this.handleMediaDurationchange.bind(this);\n    this.handleMediaProgress = this.handleMediaProgress.bind(this);\n    this.handleMediaLoopchange = this.handleMediaLoopchange.bind(this);\n    this.handleMediaRatechange = this.handleMediaRatechange.bind(this);\n  }\n\n  componentDidMount() {\n    const media = (this.media = createCustomMediaElement(\n      this.props.createMediaElement()\n    ));\n\n    const {\n      defaultPlaybackRate,\n      crossOrigin,\n      playlist,\n      autoplayDelayInSeconds,\n      mediaElementRef,\n      getPosterImageForTrack,\n      getMediaTitleAttributeForTrack,\n      onActiveTrackUpdate\n    } = this.props;\n    const {\n      volume,\n      muted,\n      playbackRate,\n      loop,\n      activeTrackIndex,\n      shouldRequestPlayOnNextUpdate\n    } = this.state;\n\n    // initialize media properties\n    // We used to set currentTime here.. now waiting for loadeddata.\n    // This avoids an issue where some browsers ignore or delay currentTime\n    // updates when in the HAVE_NOTHING state.\n    media.defaultPlaybackRate = defaultPlaybackRate;\n    if (crossOrigin) {\n      media.crossOrigin = crossOrigin;\n    }\n    media.volume = volume;\n    media.muted = muted;\n    media.playbackRate = playbackRate;\n    media.loop = loop;\n    media.setAttribute('playsinline', '');\n    media.setAttribute('webkit-playsinline', '');\n    media.setAttribute('preload', 'metadata');\n    media.setAttribute(\n      'poster',\n      getPosterImageForTrack(playlist[activeTrackIndex])\n    );\n    media.setAttribute(\n      'title',\n      getMediaTitleAttributeForTrack(playlist[activeTrackIndex])\n    );\n    // add listeners for media events\n    media.addEventListener('play', this.handleMediaPlay);\n    media.addEventListener('pause', this.handleMediaPause);\n    media.addEventListener('ended', this.handleMediaEnded);\n    media.addEventListener('stalled', this.handleMediaStalled);\n    media.addEventListener('emptied', this.handleMediaEmptied);\n    media.addEventListener('canplay', this.handleMediaCanplay);\n    media.addEventListener('canplaythrough', this.handleMediaCanplaythrough);\n    media.addEventListener('timeupdate', this.handleMediaTimeupdate);\n    media.addEventListener('loadeddata', this.handleMediaLoadeddata);\n    media.addEventListener('volumechange', this.handleMediaVolumechange);\n    media.addEventListener('durationchange', this.handleMediaDurationchange);\n    media.addEventListener('progress', this.handleMediaProgress);\n    media.addEventListener('ratechange', this.handleMediaRatechange);\n    // add listeners for special events\n    media.addEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.addEventListener('loopchange', this.handleMediaLoopchange);\n\n    // set source elements for current track\n    this.setMediaElementSources();\n\n    // initially mount media element in the hidden container (this may change)\n    this.mediaContainer.appendChild(media);\n\n    if (shouldRequestPlayOnNextUpdate) {\n      this.setState({\n        shouldRequestPlayOnNextUpdate: false\n      });\n      this.delayTimeout = setTimeout(() => {\n        this.togglePause(false);\n      }, autoplayDelayInSeconds * 1000);\n    }\n\n    if (mediaElementRef) {\n      mediaElementRef(media);\n    }\n\n    if (onActiveTrackUpdate) {\n      onActiveTrackUpdate({\n        track: playlist[activeTrackIndex],\n        trackIndex: activeTrackIndex,\n        previousTrack: null,\n        previousTrackIndex: null\n      });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const newPlaylist = nextProps.playlist;\n\n    if (newPlaylist === prevState.__playlist__) {\n      // reference comparison is equal so we'll\n      // assume the playlist is unchanged.\n      return null;\n    }\n\n    const baseNewState = {\n      __playlist__: newPlaylist\n    };\n\n    // check if the new playlist is invalid\n    if (!isPlaylistValid(newPlaylist)) {\n      return {\n        ...defaultState,\n        ...baseNewState,\n        activeTrackIndex: 0,\n        trackLoading: false\n      };\n    }\n\n    // check if the activeTrackIndex doesn't need to be updated\n    const prevSources = getTrackSources(\n      prevState.__playlist__,\n      prevState.activeTrackIndex\n    );\n\n    if (newPlaylist[prevState.activeTrackIndex]) {\n      // the sources if we stay on the same track index\n      const currentSources = getTrackSources(\n        newPlaylist,\n        prevState.activeTrackIndex\n      );\n      // non-comprehensive but probably accurate check\n      if (prevSources[0].src === currentSources[0].src) {\n        // our active track index already matches\n        return baseNewState;\n      }\n    }\n\n    /* if the track we're already playing is in the new playlist, update the\n     * activeTrackIndex.\n     */\n    const newTrackIndex = findTrackIndexByUrl(newPlaylist, prevSources[0].src);\n    if (newTrackIndex !== -1) {\n      return {\n        ...baseNewState,\n        activeTrackIndex: newTrackIndex\n      };\n    }\n\n    // if not, then load the first track in the new playlist, and pause.\n    return {\n      ...baseNewState,\n      ...getGoToTrackState({\n        prevState,\n        track: newPlaylist[0],\n        index: 0,\n        shouldPlay: false,\n        shouldForceLoad: true\n      }),\n      mediaCannotPlay: false,\n      awaitingPlayAfterTrackLoad: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.media.defaultPlaybackRate = this.props.defaultPlaybackRate;\n    this.media.crossOrigin = this.props.crossOrigin;\n\n    this.shuffler.setList(getSourceList(this.props.playlist));\n    this.shuffler.setOptions({\n      allowBackShuffle: this.props.allowBackShuffle\n    });\n\n    const prevSources = getTrackSources(\n      prevProps.playlist,\n      prevState.activeTrackIndex\n    );\n    const newSources = getTrackSources(\n      this.props.playlist,\n      this.state.activeTrackIndex\n    );\n    const prevTrack = prevProps.playlist[prevState.activeTrackIndex];\n    const newTrack = this.props.playlist[this.state.activeTrackIndex];\n    if (\n      this.state.awaitingForceLoad ||\n      prevSources[0].src !== newSources[0].src\n    ) {\n      this.setMediaElementSources();\n      this.media.setAttribute(\n        'poster',\n        this.props.getPosterImageForTrack(newTrack)\n      );\n      this.media.setAttribute(\n        'title',\n        this.props.getMediaTitleAttributeForTrack(newTrack)\n      );\n      this.setState({\n        awaitingForceLoad: false\n      });\n      if (!this.state.shuffle) {\n        // after toggling off shuffle, we defer clearing the shuffle\n        // history until we actually change tracks - if the user quickly\n        // toggles  shuffle off then back on again, we don't want to have\n        // lost our history.\n        this.shuffler.clear();\n      }\n    }\n\n    if (this.props.onActiveTrackUpdate && prevTrack !== newTrack) {\n      this.props.onActiveTrackUpdate({\n        track: newTrack,\n        trackIndex: this.state.activeTrackIndex,\n        previousTrack: prevTrack,\n        previousTrackIndex: prevState.activeTrackIndex\n      });\n    }\n\n    if (prevProps !== this.props && !this.media.paused) {\n      // update running media session based on new props\n      this.stealMediaSession();\n    }\n\n    if (this.state.shouldRequestPlayOnNextUpdate) {\n      this.setState({\n        shouldRequestPlayOnNextUpdate: false\n      });\n      // media.currentSrc is updated asynchronously so we should\n      // play async to avoid weird intermediate state issues\n      setTimeout(() => {\n        this.togglePause(false);\n      });\n    }\n\n    clearTimeout(this.snapshotUpdateTimeout);\n    this.snapshotUpdateTimeout = setTimeout(() => {\n      if (this.props.onStateSnapshot) {\n        this.props.onStateSnapshot(getStateSnapshot(this.state));\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    const { media } = this;\n    // Media element creation will have failed if MutationObserver isn't\n    // supported by the browser. The parent might use an Error Boundary\n    // to display a fallback and so we try to avoid triggering *additional*\n    // errors while the component unmounts.\n    if (media) {\n      // remove listeners for media events\n      media.removeEventListener('play', this.handleMediaPlay);\n      media.removeEventListener('pause', this.handleMediaPause);\n      media.removeEventListener('ended', this.handleMediaEnded);\n      media.removeEventListener('stalled', this.handleMediaStalled);\n      media.removeEventListener('emptied', this.handleMediaEmptied);\n      media.removeEventListener(\n        'canplaythrough',\n        this.handleMediaCanplaythrough\n      );\n      media.removeEventListener('canplay', this.handleMediaCanplay);\n      media.removeEventListener('timeupdate', this.handleMediaTimeupdate);\n      media.removeEventListener('loadeddata', this.handleMediaLoadeddata);\n      media.removeEventListener('volumechange', this.handleMediaVolumechange);\n      media.removeEventListener(\n        'durationchange',\n        this.handleMediaDurationchange\n      );\n      media.removeEventListener('progress', this.handleMediaProgress);\n      media.removeEventListener('ratechange', this.handleMediaRatechange);\n      // remove special event listeners on the media element\n      media.removeEventListener('srcrequest', this.handleMediaSrcrequest);\n      media.removeEventListener('loopchange', this.handleMediaLoopchange);\n\n      const sourceElements = media.querySelectorAll('source');\n      for (const sourceElement of sourceElements) {\n        sourceElement.removeEventListener(\n          'error',\n          this.handleTrackPlaybackFailure\n        );\n      }\n    }\n    clearTimeout(this.gapLengthTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  stealMediaSession() {\n    if (\n      // eslint-disable-next-line no-undef\n      !(window.MediaSession && navigator.mediaSession instanceof MediaSession)\n    ) {\n      return;\n    }\n    // eslint-disable-next-line no-undef\n    navigator.mediaSession.metadata = new MediaMetadata(\n      this.props.playlist[this.state.activeTrackIndex]\n    );\n    supportableMediaSessionActions\n      .map(action => {\n        if (this.props.supportedMediaSessionActions.indexOf(action) === -1) {\n          return null;\n        }\n        const seekLength = this.props.mediaSessionSeekLengthInSeconds;\n        switch (action) {\n          case 'play':\n            return this.togglePause.bind(this, false);\n          case 'pause':\n            return this.togglePause.bind(this, true);\n          case 'previoustrack':\n            return this.backSkip;\n          case 'nexttrack':\n            return this.forwardSkip;\n          case 'seekbackward':\n            return () => (this.media.currentTime -= seekLength);\n          case 'seekforward':\n            return () => (this.media.currentTime += seekLength);\n          default:\n            return undefined;\n        }\n      })\n      .forEach((handler, i) => {\n        navigator.mediaSession.setActionHandler(\n          supportableMediaSessionActions[i],\n          handler\n        );\n      });\n  }\n\n  setMediaElementSources() {\n    // remove current sources\n    const { playlist } = this.props;\n    let firstChild;\n    while ((firstChild = this.media.firstChild)) {\n      this.media.removeChild(firstChild);\n    }\n    if (isPlaylistValid(playlist)) {\n      const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n      // add new sources\n      for (const source of sources) {\n        const sourceElement = document.createElement('source');\n        sourceElement.src = source.src;\n        if (source.type) {\n          sourceElement.type = source.type;\n        }\n        sourceElement.addEventListener(\n          'error',\n          this.handleTrackPlaybackFailure\n        );\n        this.media.appendChild(sourceElement);\n      }\n    }\n    // cancel playback and re-scan new sources\n    this.media.load();\n  }\n\n  handleTrackPlaybackFailure(event) {\n    this.setState({\n      mediaCannotPlay: true\n    });\n    if (this.props.onTrackPlaybackFailure) {\n      this.props.onTrackPlaybackFailure({\n        track: this.props.playlist[this.state.activeTrackIndex],\n        trackIndex: this.state.activeTrackIndex,\n        event\n      });\n    }\n  }\n\n  registerVideoHostElement(hostElement, { onHostOccupied, onHostVacated }) {\n    this.videoHostElementList = this.videoHostElementList.concat(hostElement);\n    this.videoHostOccupiedCallbacks.set(hostElement, onHostOccupied);\n    this.videoHostVacatedCallbacks.set(hostElement, onHostVacated);\n  }\n\n  renderVideoIntoHostElement(hostElement) {\n    if (this.videoHostElementList.indexOf(hostElement) === -1) {\n      return;\n    }\n    cancelAnimationFrame(this.videoHostUpdateRaf);\n    this.videoHostUpdateRaf = requestAnimationFrame(() =>\n      this.updateVideoHostElement(hostElement)\n    );\n  }\n\n  unregisterVideoHostElement(hostElement) {\n    this.videoHostElementList = this.videoHostElementList.filter(\n      elem => elem !== hostElement\n    );\n    this.videoHostOccupiedCallbacks.delete(hostElement);\n    this.videoHostVacatedCallbacks.delete(hostElement);\n    if (this.media.parentNode === hostElement) {\n      this.updateVideoHostElement();\n    }\n  }\n\n  updateVideoHostElement(hostElement) {\n    if (!hostElement) {\n      hostElement = this.videoHostElementList[0] || this.mediaContainer;\n    } else {\n      // move hostElement to front of list\n      this.videoHostElementList = [hostElement].concat(\n        this.videoHostElementList.filter(elem => elem !== hostElement)\n      );\n    }\n    const playing = !this.media.paused;\n    const oldHostElement = this.media.parentNode;\n    if (hostElement === oldHostElement) {\n      return;\n    }\n    hostElement.appendChild(this.media);\n    // according to the HTML spec playback should continue, but\n    // some browsers pause the element whenever it is moved around, so\n    // let's make sure playback resumes if that's the case.\n    if (playing && this.media.paused) {\n      this.media.play();\n    }\n    const onVacated = this.videoHostVacatedCallbacks.get(oldHostElement);\n    if (onVacated) {\n      onVacated(this.media);\n    }\n    const onOccupied = this.videoHostOccupiedCallbacks.get(hostElement);\n    if (onOccupied) {\n      onOccupied(this.media);\n    }\n  }\n\n  handleMediaPlay() {\n    this.setState(\n      state =>\n        state.paused === false && state.awaitingPlayAfterTrackLoad === false\n          ? null\n          : { paused: false, awaitingPlayAfterTrackLoad: false }\n    );\n    this.stealMediaSession();\n  }\n\n  handleMediaPause() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaSrcrequest(e) {\n    const { playlist } = this.props;\n    const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n    if (arrayFindIndex(sources, s => s.src === e.srcRequested) !== -1) {\n      // we're good! nothing to update.\n      return;\n    }\n    // looks like 'src' was set from outside our component.\n    // let's see if we can use it.\n    const newTrackIndex = findTrackIndexByUrl(playlist, e.srcRequested);\n    if (newTrackIndex === -1) {\n      logError(\n        `Source '${e.srcRequested}' does not exist in the loaded playlist. ` +\n          `Make sure you've updated the 'playlist' prop to ` +\n          `PlayerContextProvider before you select this track!`\n      );\n      return;\n    }\n    this.selectTrackIndex(newTrackIndex);\n  }\n\n  handleMediaEnded() {\n    if (this.state.seekInProgress) {\n      // nothing to do if we're in the middle of a seek\n      // (this can happen if we're in seekMode: immediate)\n      return;\n    }\n    clearTimeout(this.gapLengthTimeout);\n    const { playlist, loadFirstTrackOnPlaylistComplete } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    const { cycle, activeTrackIndex } = this.state;\n    if (!cycle && activeTrackIndex + 1 >= playlist.length) {\n      if (loadFirstTrackOnPlaylistComplete) {\n        this.goToTrack({\n          index: 0,\n          track: playlist[0],\n          shouldPlay: false,\n          shouldForceLoad: true\n        });\n      }\n      return;\n    }\n    this.gapLengthTimeout = setTimeout(\n      this.forwardSkip,\n      this.props.gapLengthInSeconds * 1000\n    );\n  }\n\n  handleMediaStalled() {\n    this.setState(state => (state.stalled === true ? null : { stalled: true }));\n  }\n\n  handleMediaEmptied() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaCanplay() {\n    this.setState(\n      state => (state.trackLoading === false ? null : { trackLoading: false })\n    );\n  }\n\n  handleMediaCanplaythrough() {\n    this.setState(\n      state => (state.stalled === false ? null : { stalled: false })\n    );\n  }\n\n  handleMediaTimeupdate() {\n    const { currentTime, played } = this.media;\n    const { onTimeUpdate, playlist } = this.props;\n    const { activeTrackIndex, trackLoading } = this.state;\n    if (trackLoading) {\n      // we'll get another time update when the track loads\n      // but for now this helps us avoid unnecessarily\n      // jumping back to currentTime: 0 in the UI while\n      // the track is loading.\n      return;\n    }\n    this.setState(state => ({\n      currentTime,\n      playedRanges: getTimeRangesArray(played),\n      maxKnownTime: Math.max(state.maxKnownTime, currentTime)\n    }));\n    if (onTimeUpdate) {\n      onTimeUpdate({\n        currentTime,\n        track: playlist[activeTrackIndex],\n        trackIndex: activeTrackIndex\n      });\n    }\n  }\n\n  handleMediaLoadeddata() {\n    if (this.media.currentTime !== this.state.currentTime) {\n      this.media.currentTime = this.state.currentTime;\n    }\n  }\n\n  handleMediaVolumechange() {\n    const { volume, muted } = this.media;\n    this.setState({ volume, muted });\n  }\n\n  handleMediaDurationchange() {\n    const { duration } = this.media;\n    const activeTrack = this.props.playlist[this.state.activeTrackIndex];\n    if (duration === Infinity) {\n      // This *could* be because we're consuming an unbounded stream.\n      // It could also be because of a weird iOS bug that we want to\n      // try to prevent. See https://github.com/benwiley4000/cassette/issues/355\n\n      // If we still end up with Infinity duration multiple times for\n      // the same track, we'll assume it's correct.\n      if (\n        activeTrack.isUnboundedStream ||\n        activeTrack === this.activeTrackAtLastDurationChange\n      ) {\n        this.setState({\n          duration,\n          currentTime: 0\n        });\n        this.media.currentTime = 0;\n      } else {\n        const { paused } = this.state;\n        this.media.load();\n        if (!paused) {\n          // media.currentSrc is updated asynchronously so we should\n          // play async to avoid weird intermediate state issues\n          setTimeout(() => {\n            this.togglePause(false);\n          });\n        }\n      }\n    } else {\n      this.setState({ duration });\n    }\n    this.activeTrackAtLastDurationChange = activeTrack;\n  }\n\n  handleMediaProgress() {\n    this.setState({\n      bufferedRanges: getTimeRangesArray(this.media.buffered),\n      seekableRanges: getTimeRangesArray(this.media.seekable)\n    });\n  }\n\n  handleMediaLoopchange() {\n    const { loop } = this.media;\n    this.setState(state => (state.loop === loop ? null : { loop }));\n  }\n\n  handleMediaRatechange() {\n    const { playbackRate } = this.media;\n    this.setState(\n      state => (state.playbackRate === playbackRate ? null : { playbackRate })\n    );\n  }\n\n  togglePause(value) {\n    clearTimeout(this.delayTimeout);\n    const pause = typeof value === 'boolean' ? value : !this.state.paused;\n    if (pause) {\n      this.media.pause();\n      return;\n    }\n    if (!this.media.currentSrc) {\n      return;\n    }\n    try {\n      const playPromise = this.media.play();\n      if (playPromise && typeof playPromise.catch === 'function') {\n        playPromise\n          .catch(err => {\n            // AbortError is pretty much always called because we're skipping\n            // tracks quickly or hitting pause before a track has a chance to\n            // play. It's pretty safe to just ignore these error messages.\n            if (err.name !== 'AbortError') {\n              return Promise.reject(err);\n            }\n          })\n          .catch(playErrorHandler);\n      }\n    } catch (err) {\n      playErrorHandler(err);\n    }\n  }\n\n  // assumes playlist is valid - don't call without checking\n  goToTrack(args) {\n    clearTimeout(this.delayTimeout);\n    this.setState(prevState => getGoToTrackState({ prevState, ...args }));\n  }\n\n  selectTrackIndex(index) {\n    const { playlist } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    if (index < 0 || index > playlist.length) {\n      logWarning(`Playlist index ${index} is out of bounds!`);\n      return;\n    }\n    if (this.state.shuffle) {\n      this.shuffler.pickNextItem(index, this.state.activeTrackIndex);\n    }\n    this.goToTrack({ index, track: playlist[index] });\n  }\n\n  backSkip() {\n    const { playlist, stayOnBackSkipThreshold } = this.props;\n    const { media } = this;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      media.currentTime >= stayOnBackSkipThreshold ||\n      (!cycle && activeTrackIndex < 1)\n    ) {\n      media.currentTime = 0;\n      return;\n    }\n    let index;\n    if (shuffle) {\n      const previousItem = this.shuffler.findPreviousItem(activeTrackIndex);\n      if (previousItem === undefined) {\n        // if we aren't allowing backShuffle then we'll hit a stopping point.\n        media.currentTime = 0;\n        return;\n      }\n      index = findTrackIndexByUrl(playlist, previousItem);\n    } else {\n      index = activeTrackIndex - 1;\n      if (index < 0) {\n        index = playlist.length - 1;\n      }\n    }\n    this.goToTrack({ index, track: playlist[index], shouldForceLoad: true });\n  }\n\n  forwardSkip() {\n    const { playlist } = this.props;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      (!cycle && activeTrackIndex + 1 >= playlist.length)\n    ) {\n      return;\n    }\n    let index;\n    if (shuffle) {\n      index = findTrackIndexByUrl(\n        playlist,\n        this.shuffler.findNextItem(activeTrackIndex)\n      );\n    } else {\n      index = activeTrackIndex + 1;\n      if (index >= playlist.length) {\n        index = 0;\n      }\n    }\n    this.goToTrack({ index, track: playlist[index], shouldForceLoad: true });\n  }\n\n  seekPreview(targetTime) {\n    if (!isPlaylistValid(this.props.playlist)) {\n      return;\n    }\n    const baseStateUpdate = {\n      seekPreviewTime: targetTime,\n      seekInProgress: true\n    };\n    switch (this.props.seekMode) {\n      case 'paused':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true,\n          currentTime: targetTime\n        }));\n        if (!this.state.trackLoading) {\n          this.media.currentTime = targetTime;\n        }\n        if (!this.state.paused) {\n          this.togglePause(true);\n        }\n        break;\n      case 'immediate':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true,\n          currentTime: targetTime\n        }));\n        if (!this.state.trackLoading) {\n          this.media.currentTime = targetTime;\n        }\n        if (this.state.awaitingResumeOnSeekComplete && !this.media.ended) {\n          // if we earlier encountered an 'ended' state,\n          // un-pausing becomes necessary to resume playback\n          this.togglePause(false);\n        }\n        break;\n      case 'onrelease':\n        this.setState(baseStateUpdate);\n        break;\n    }\n  }\n\n  seekComplete(targetTime) {\n    const {\n      seekPreviewTime,\n      awaitingResumeOnSeekComplete,\n      trackLoading\n    } = this.state;\n    const baseStateUpdate = {\n      seekInProgress: false,\n      awaitingResumeOnSeekComplete: false\n    };\n    const currentTime =\n      typeof targetTime === 'number' ? targetTime : seekPreviewTime;\n\n    if (isNaN(currentTime)) {\n      this.setState(baseStateUpdate);\n      return;\n    }\n    this.setState({\n      ...baseStateUpdate,\n      /* we'll update currentTime on the media listener hook anyway,\n       * but that might not happen for a bit... so the optimistic update\n       * helps us avoid the progress bar jumping around and confusing the user.\n       * https://github.com/benwiley4000/cassette/issues/209\n       */\n      currentTime\n    });\n    if (!trackLoading) {\n      this.media.currentTime = currentTime;\n    }\n    if (awaitingResumeOnSeekComplete) {\n      if (this.media.ended) {\n        this.forwardSkip();\n      } else {\n        this.togglePause(false);\n      }\n    }\n  }\n\n  setVolume(volume, inProgress = true) {\n    if (inProgress && !this.state.setVolumeInProgress) {\n      this.setState({\n        setVolumeInProgress: true\n      });\n    }\n    const volumeInBounds = convertToNumberWithinIntervalBounds(volume, 0, 1);\n    this.media.muted = volumeInBounds === 0 ? true : false;\n    this.media.volume = volumeInBounds;\n  }\n\n  setVolumeComplete(volume) {\n    if (typeof volume === 'number') {\n      this.setVolume(volume, false);\n    }\n    this.setState({\n      setVolumeInProgress: false\n    });\n    if (!this.media.muted) {\n      this.lastStableVolume = this.media.volume;\n    }\n  }\n\n  toggleMuted(value) {\n    const muted = typeof value === 'boolean' ? value : !this.state.muted;\n    this.media.muted = muted;\n    if (!muted) {\n      this.media.volume = this.lastStableVolume;\n    }\n  }\n\n  toggleShuffle(value) {\n    const shuffle = typeof value === 'boolean' ? value : !this.state.shuffle;\n    this.setState({ shuffle });\n  }\n\n  setRepeatStrategy(repeatStrategy) {\n    if (repeatStrategyOptions.indexOf(repeatStrategy) === -1) {\n      logWarning(\n        'repeatStrategy \"' +\n          repeatStrategy +\n          '\" is not one of: ' +\n          repeatStrategyOptions.split(', ') +\n          '.'\n      );\n      return;\n    }\n    switch (repeatStrategy) {\n      case 'track':\n        // state update is automatic\n        this.media.loop = true;\n        break;\n      case 'playlist':\n        this.setState({\n          loop: false,\n          cycle: true\n        });\n        this.media.loop = false;\n        break;\n      case 'none':\n        this.setState({\n          loop: false,\n          cycle: false\n        });\n        this.media.loop = false;\n        break;\n    }\n  }\n\n  setPlaybackRate(rate) {\n    this.media.playbackRate = rate;\n  }\n\n  getControlProps() {\n    const { props, state } = this;\n    const playerContext = {\n      playlist: props.playlist,\n      activeTrackIndex: state.activeTrackIndex,\n      trackLoading: state.trackLoading,\n      paused: state.paused,\n      currentTime: state.currentTime,\n      seekPreviewTime: state.seekPreviewTime,\n      seekInProgress: state.seekInProgress,\n      awaitingPlayResume:\n        state.awaitingResumeOnSeekComplete || state.awaitingPlayAfterTrackLoad,\n      duration:\n        state.duration === Infinity ? state.maxKnownTime : state.duration,\n      bufferedRanges: state.bufferedRanges,\n      playedRanges: state.playedRanges,\n      seekableRanges: state.seekableRanges,\n      volume: state.volume,\n      muted: state.muted,\n      shuffle: state.shuffle,\n      stalled: state.stalled,\n      playbackRate: state.playbackRate,\n      mediaCannotPlay: state.mediaCannotPlay,\n      setVolumeInProgress: state.setVolumeInProgress,\n      repeatStrategy: getRepeatStrategy(state.loop, state.cycle),\n      registerVideoHostElement: this.registerVideoHostElement,\n      renderVideoIntoHostElement: this.renderVideoIntoHostElement,\n      unregisterVideoHostElement: this.unregisterVideoHostElement,\n      onTogglePause: this.togglePause,\n      onSelectTrackIndex: this.selectTrackIndex,\n      onBackSkip: this.backSkip,\n      onForwardSkip: this.forwardSkip,\n      onSeekPreview: this.seekPreview,\n      onSeekComplete: this.seekComplete,\n      onSetVolume: this.setVolume,\n      onSetVolumeComplete: this.setVolumeComplete,\n      onToggleMuted: this.toggleMuted,\n      onToggleShuffle: this.toggleShuffle,\n      onSetRepeatStrategy: this.setRepeatStrategy,\n      onSetPlaybackRate: this.setPlaybackRate\n    };\n    if (this.playerContext) {\n      // only update this.playerContext if something has changed\n      for (const key of Object.keys(this.playerContext)) {\n        if (playerContext[key] !== this.playerContext[key]) {\n          this.playerContext = playerContext;\n          break;\n        }\n      }\n    } else {\n      // first time - nothing to compare\n      this.playerContext = playerContext;\n    }\n    return this.playerContext;\n  }\n\n  render() {\n    const playerContext = this.getControlProps();\n    return (\n      <Fragment>\n        <div ref={elem => (this.mediaContainer = elem)} hidden />\n        <PlayerContext.Provider value={playerContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(playerContext)\n            : this.props.children}\n        </PlayerContext.Provider>\n      </Fragment>\n    );\n  }\n}\n\nPlayerContextProvider.propTypes = {\n  /**\n   * An array of [`track`](#track) objects to play in order (except when\n   * shuffle mode is turned on)\n   **/\n  playlist: PropTypes.arrayOf(PlayerPropTypes.track.isRequired).isRequired,\n  /** Set to `true` to play media on player load. Think before doing this. It is\n   * often a bad idea, although it can make sense if your app is expressly made\n   * for media playback and you're resuming playback from the last session.\n   * Note that some platforms will disallow this from happening under many\n   * scenarios, and in these cases, `autoplay` will simply fail gracefully.\n   */\n  autoplay: PropTypes.bool.isRequired,\n  /**\n   * If your app uses a custom implementation of the `HTMLMediaElement`, you\n   * can supply your own factory function to return it. This is an advanced\n   * edge case.\n   */\n  createMediaElement: PropTypes.func.isRequired,\n  /** If you're using `autoplay` but want to wait a few seconds before the\n   * media playback kicks in, you can specify that timeout in second here.\n   */\n  autoplayDelayInSeconds: PropTypes.number.isRequired,\n  /**\n   * Similar to `autoplayDelayInSeconds` but for the pause between tracks\n   * (if you want to evoke the feeling of listening to one of those old CDs with\n   * a negative countdown before it starts, which you never asked for).\n   */\n  gapLengthInSeconds: PropTypes.number.isRequired,\n  /** A [`crossOriginAttribute`](#crossoriginattribute) value */\n  crossOrigin: PlayerPropTypes.crossOriginAttribute,\n  /** The starting volume (0-1) */\n  defaultVolume: PropTypes.number.isRequired,\n  /** The starting `muted` value (`true` or `false`) */\n  defaultMuted: PropTypes.bool,\n  /** The starting [`repeatStrategy`](#repeatstrategy) */\n  defaultRepeatStrategy: PlayerPropTypes.repeatStrategy.isRequired,\n  /** Will shuffle mode be active by default? */\n  defaultShuffle: PropTypes.bool,\n  /** The starting playback rate (1 is normal, 0.5 is half, 2 is double) */\n  defaultPlaybackRate: PropTypes.number.isRequired,\n  /**\n   * The starting track index (an advanced use case.. normally you should put\n   * the track you want to hear first at the start of the playlist, unless\n   * you are loading an `initialStateSnapshot` which will override this value\n   * anyway\n   */\n  startingTrackIndex: PropTypes.number.isRequired,\n  /**\n   * Set this `false` if the player should rest of the final track when\n   * the playlist has completed. Ignored unless the\n   * current [`repeatStrategy`](#repeatstrategy) is `none`\n   */\n  loadFirstTrackOnPlaylistComplete: PropTypes.bool,\n  /** Use this to set the player's [`seekMode`](#seekmode) */\n  seekMode: PlayerPropTypes.seekMode.isRequired,\n  /**\n   * The default media element behavior is to reset the `playbackRate` to 1\n   * whenever a new source is loaded. Set this prop to `true` to maintain the\n   * same irregular playback rate across multiple tracks.\n   */\n  maintainPlaybackRate: PropTypes.bool.isRequired,\n  /**\n   * By default, activating a back skip in shuffle mode will select the previous\n   * track in the shuffled list, but if the current track was the first selected\n   * track, back skip will be disabled. Setting this prop to `true` will\n   * select new arbitrary tracks in the \"past\" if back skip is used beyond\n   * the buffered history.\n   */\n  allowBackShuffle: PropTypes.bool,\n  /**\n   * The number of seconds before pressing back skip becomes \"back to\n   * beginning of current track\" rather than \"go to the previous track\"\n   */\n  stayOnBackSkipThreshold: PropTypes.number.isRequired,\n  /**\n   * An array of [`mediaSessionAction`](#mediasessionaction) types to display\n   * in the end users's system UI, when applicable.\n   * It is *not* the same as the `controls` array.\n   */\n  supportedMediaSessionActions: PropTypes.arrayOf(\n    PlayerPropTypes.mediaSessionAction.isRequired\n  ).isRequired,\n  /** The number of seconds to seek back or forward when the Media Session API\n   * backseek/forwardseek buttons are activated in the end user's system UI\n   */\n  mediaSessionSeekLengthInSeconds: PropTypes.number.isRequired,\n  /**\n   * A function called on component mount and component unmount with a reference\n   * to the underlying media element. Generally not recommended for use, but\n   * can be used as an escape hatch for features that aren't well-supported by\n   * Cassette (if you find yourself needing this, you may want to\n   * [open a new issue](https://github.com/benwiley4000/cassette/issues/new)\n   * to talk about adding first-class support for your use case).\n   */\n  mediaElementRef: PropTypes.func,\n  /**\n   * If you're using `onStateSnapshot` to save snapshots of the media player\n   * state as a serializable object, you should pass that restored object here\n   * to preserve the user's state from the previous session\n   */\n  initialStateSnapshot: PropTypes.object,\n  /**\n   * Called whenever a new state snapshot is generated. The internals of this\n   * snapshot are not documented and may change in a non-major release, so it's\n   * not safe to rely on them directly. Instead, the state snapshot should\n   * be serialized to JSON with `JSON.stringify` and restored later with\n   * `JSON.parse` to be passed as the `initialStateSnapshot` prop\n   */\n  onStateSnapshot: PropTypes.func,\n  /**\n   * A function called whenever the active track is set or updated. Passed an\n   * object with the properties `track`, `trackIndex`, `previousTrack` and\n   * `previousTrackIndex` (these may be `null` or `undefined`)\n   */\n  onActiveTrackUpdate: PropTypes.func,\n  /**\n   * A function called when the media element's `currentTime` attribute has\n   * changed. Passed an object with the properties `currentTime`, `track` and\n   * `trackIndex`\n   */\n  onTimeUpdate: PropTypes.func,\n  /**\n   * A function called when playback of the current track has failed for some\n   * reason. Passed an object with the properties `event`,\n   * `track` and `trackIndex`\n   */\n  onTrackPlaybackFailure: PropTypes.func,\n  /**\n   * A function which receives a [`track`](#track) object (if one is active)\n   * and returns a url pointing to a poster image representing the current\n   * track which should be used in a [`VideoDisplay`](#videodisplay) when the\n   * media content hasn't yet loaded\n   */\n  getPosterImageForTrack: PropTypes.func.isRequired,\n  /**\n   * A function which receives a [`track`](#track) object (if one is active)\n   * and returns the value for the media element's `title` attribute, which\n   * may be used in iOS to display information about the current track in the\n   * system UI\n   */\n  getMediaTitleAttributeForTrack: PropTypes.func.isRequired,\n  /**\n   * Either a renderable React node or a render prop function like the\n   * one passed into [`PlayerContextConsumer`](#playercontextconsumer)\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nPlayerContextProvider.defaultProps = {\n  autoplay: false,\n  autoplayDelayInSeconds: 0,\n  createMediaElement: () => document.createElement('video'),\n  gapLengthInSeconds: 0,\n  defaultVolume: 1,\n  defaultMuted: false,\n  defaultRepeatStrategy: 'playlist',\n  defaultShuffle: false,\n  defaultPlaybackRate: 1,\n  startingTrackIndex: 0,\n  loadFirstTrackOnPlaylistComplete: true,\n  seekMode: 'immediate',\n  maintainPlaybackRate: false,\n  allowBackShuffle: false,\n  stayOnBackSkipThreshold: 5,\n  supportedMediaSessionActions: ['play', 'pause', 'previoustrack', 'nexttrack'],\n  mediaSessionSeekLengthInSeconds: 10,\n  getPosterImageForTrack(track) {\n    return track && track.artwork ? track.artwork[0].src : '';\n  },\n  getMediaTitleAttributeForTrack: getDisplayText\n};\n\nexport class PlayerContextGroupMember extends Component {\n  componentDidMount() {\n    this.props.groupContext.registerMediaElement(this.mediaElement);\n  }\n\n  componentWillUnmount() {\n    // Media element might not exist\n    // (see componentWillUnmount of PlayerContextProvider)\n    if (this.mediaElement) {\n      this.props.groupContext.unregisterMediaElement(this.mediaElement);\n    }\n  }\n\n  render() {\n    const { groupContext, props } = this.props;\n    const { mediaElementRef, ...rest } = props;\n    return (\n      <PlayerContextProvider\n        {...groupContext.groupProps}\n        {...rest}\n        mediaElementRef={ref => {\n          if (mediaElementRef) {\n            mediaElementRef(ref);\n          }\n          this.mediaElement = ref;\n        }}\n      />\n    );\n  }\n}\n\nPlayerContextGroupMember.propTypes = {\n  groupContext: PropTypes.shape({\n    groupProps: PropTypes.object.isRequired,\n    registerMediaElement: PropTypes.func.isRequired,\n    unregisterMediaElement: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction PlayerContextGroupConsumer(props) {\n  return (\n    <GroupContext.Consumer>\n      {groupContext => {\n        if (!groupContext) {\n          return createElement(PlayerContextProvider, props);\n        }\n        return createElement(PlayerContextGroupMember, {\n          groupContext,\n          props\n        });\n      }}\n    </GroupContext.Consumer>\n  );\n}\n\nexport default PlayerContextGroupConsumer;\n","// TODO: support Preact, Inferno, etc.\nfunction getReactParentNameStack(componentInstance) {\n  const fiber = componentInstance._reactInternalFiber;\n  const parentStack = [];\n  let owner = fiber;\n  if (!owner) {\n    return parentStack;\n  }\n  while ((owner = owner._debugOwner)) {\n    if (owner.type.name) {\n      parentStack.push(owner.type.name);\n    }\n  }\n  return parentStack;\n}\n\nexport default getReactParentNameStack;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport PlayerContext from './PlayerContext';\n\nimport { logWarning } from './utils/console';\nimport getReactParentNameStack from './utils/getReactParentNameStack';\n\nclass PlayerContextConsumer extends PureComponent {\n  render() {\n    const { children, filterList } = this.props;\n    if (!filterList) {\n      if (!this.warnedAboutFilterList) {\n        let warning = `\n          Please pass the filterList prop to PlayerContextConsumer in order\n          to avoid unnecessarily frequent re-renders, e.g.\n\n          const filterList = ['paused', 'onTogglePause'];\n          // ...\n          <PlayerContextConsumer filterList={filterList}>\n            {({ paused, onTogglePause }) => {\n              return <div>{/* ... */}</div>;\n            }}\n          </PlayerContextConsumer>\n        `;\n        for (const parentName of getReactParentNameStack(this)) {\n          warning += `\n            Rendered by ${parentName}`;\n        }\n        logWarning(warning);\n        this.warnedAboutFilterList = true;\n      }\n      return <PlayerContext.Consumer>{children}</PlayerContext.Consumer>;\n    }\n\n    const flags = PlayerContext.__cassetteGetObservedBits(filterList);\n    return (\n      <PlayerContext.Consumer unstable_observedBits={flags}>\n        {playerContext => {\n          const usedContext = {};\n          for (const name of filterList) {\n            if (playerContext.hasOwnProperty(name)) {\n              usedContext[name] = playerContext[name];\n            }\n          }\n          return children(usedContext);\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nPlayerContextConsumer.propTypes = {\n  /**\n   * A [render prop](https://reactjs.org/docs/render-props.html) function\n   * which receives as its argument an object with the latest values of the\n   * keys specified in the `filterList` prop (if you forget `filterList`, you\n   * will get all the `playerContext` values and a warning in the console)\n   */\n  children: PropTypes.func.isRequired,\n  /**\n   * A full list of `playerContext` values which will need to be consumed.\n   * Similar to the prop name array passed to\n   * [`playerContextFilter`](#playercontextfilter), but only made up of values\n   * found in [`playerContext`](#playercontext).\n   *\n   */\n  filterList: PropTypes.arrayOf(PropTypes.string.isRequired)\n};\n\nexport default PlayerContextConsumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GroupContext from './GroupContext';\n\n/**\n * A wrapper which can be used to share configuration among multiple descendant [`PlayerContextProvider`](#playercontextprovider) instances as well as prevent multiple media elements from playing audio simultaneously\n */\nexport class PlayerContextGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.registerMediaElement = this.registerMediaElement.bind(this);\n    this.unregisterMediaElement = this.unregisterMediaElement.bind(this);\n    this.enforceOneMediaSourceOnly = this.enforceOneMediaSourceOnly.bind(this);\n    this.mediaElements = [];\n  }\n\n  registerMediaElement(elem) {\n    this.mediaElements = this.mediaElements.concat(elem);\n    elem.addEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.addEventListener('volumechange', this.enforceOneMediaSourceOnly, true);\n  }\n\n  unregisterMediaElement(elem) {\n    this.mediaElements = this.mediaElements.filter(element => elem !== element);\n    elem.removeEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.removeEventListener(\n      'volumechange',\n      this.enforceOneMediaSourceOnly,\n      true\n    );\n  }\n\n  enforceOneMediaSourceOnly(e) {\n    const mediaElement = e.target;\n    const { paused, muted } = mediaElement;\n    if (paused || muted) {\n      return;\n    }\n    for (const element of this.mediaElements) {\n      if (element !== mediaElement && !element.muted) {\n        element.pause();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <GroupContext.Consumer>\n        {groupContext => {\n          const value = groupContext\n            ? {\n                ...groupContext,\n                groupProps: { ...groupContext.groupProps, ...this.props }\n              }\n            : {\n                groupProps: this.props,\n                registerMediaElement: this.registerMediaElement,\n                unregisterMediaElement: this.unregisterMediaElement\n              };\n          return (\n            <GroupContext.Provider value={value}>\n              {this.props.children}\n            </GroupContext.Provider>\n          );\n        }}\n      </GroupContext.Consumer>\n    );\n  }\n}\n\nPlayerContextGroup.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PlayerContextGroup;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\nimport { logWarning } from './utils/console';\n\nexport default createSingleGlobalContext({\n  displayName: 'FullscreenContext',\n  defaultValue: {\n    fullscreen: false,\n    requestFullscreen() {\n      logWarning(\n        'Fullscreen request ignored since there is no ' +\n          'FullscreenContextProvider ancestor.'\n      );\n    },\n    requestExitFullscreen() {\n      logWarning(\n        'Exit fullscreen request ignored since there is no ' +\n          'FullscreenContextProvider ancestor.'\n      );\n    }\n  },\n  keysWillUpdate: ['fullscreen']\n});\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FullscreenContext from './FullscreenContext';\n\nconst fullscreenStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n/**\n * Wraps an area which should be fullscreen-able\n */\nexport class FullscreenContextProvider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullscreen: false\n    };\n    this.requestFullscreen = this.requestFullscreen.bind(this);\n    this.requestExitFullscreen = this.requestExitFullscreen.bind(this);\n    this.handleFullscreenChange = this.handleFullscreenChange.bind(this);\n    this.fullscreenElement = null;\n  }\n\n  componentDidMount() {\n    document.addEventListener('fullscreenchange', this.handleFullscreenChange);\n    document.addEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'fullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  requestFullscreen() {\n    if (!this.props.fullscreenEnabled) {\n      return;\n    }\n    if (this.fullscreenElement.requestFullscreen) {\n      this.fullscreenElement.requestFullscreen();\n    } else if (this.fullscreenElement.webkitRequestFullscreen) {\n      this.fullscreenElement.webkitRequestFullscreen();\n    } else if (this.fullscreenElement.mozRequestFullscreen) {\n      this.fullscreenElement.mozRequestFullScreen();\n    } else if (this.fullscreenElement.msRequestFullscreen) {\n      this.fullscreenElement.msRequestFullscreen();\n    }\n  }\n\n  requestExitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.mozExitFullscreen();\n    }\n  }\n\n  handleFullscreenChange() {\n    const documentFullscreenElement =\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n    this.setState({\n      fullscreen: documentFullscreenElement === this.fullscreenElement\n    });\n  }\n\n  getFullscreenContext() {\n    const fullscreenContext = {\n      fullscreen: this.state.fullscreen,\n      requestFullscreen: this.requestFullscreen,\n      requestExitFullscreen: this.requestExitFullscreen\n    };\n    if (\n      this.fullscreenContext &&\n      fullscreenContext.fullscreen === this.fullscreenContext.fullscreen\n    ) {\n      // no change\n      return this.fullscreenContext;\n    }\n    return (this.fullscreenContext = fullscreenContext);\n  }\n\n  render() {\n    const fullscreenContext = this.getFullscreenContext();\n    return (\n      <div\n        ref={elem => (this.fullscreenElement = elem)}\n        style={this.state.fullscreen ? fullscreenStyle : undefined}\n      >\n        <FullscreenContext.Provider value={fullscreenContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(fullscreenContext)\n            : this.props.children}\n        </FullscreenContext.Provider>\n      </div>\n    );\n  }\n}\n\nFullscreenContextProvider.propTypes = {\n  /** If set `false`, disables fullscreen for the wrapped area */\n  fullscreenEnabled: PropTypes.bool.isRequired,\n  /**\n   * Either a renderable React node or a render prop function like the\n   * one passed into [`FullscreenContextConsumer`](#fullscreencontextconsumer)\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nFullscreenContextProvider.defaultProps = {\n  fullscreenEnabled: true\n};\n\nexport default FullscreenContextProvider;\n","import React, { createElement } from 'react';\n\nimport PlayerContext from './PlayerContext';\nimport FullscreenContext from './FullscreenContext';\nimport { logWarning } from './utils/console';\n\nfunction playerContextFilter(component, contextPropNames) {\n  const warned = {};\n  const childName = component.displayName || component.name;\n  const flags = PlayerContext.__cassetteGetObservedBits(contextPropNames);\n  function PlayerContextFilter(props) {\n    return (\n      <FullscreenContext.Consumer>\n        {fullscreenContext => (\n          <PlayerContext.Consumer unstable_observedBits={flags}>\n            {playerContext => {\n              const childProps = { ...props };\n              for (const propName of contextPropNames) {\n                if (playerContext.hasOwnProperty(propName)) {\n                  childProps[propName] = playerContext[propName];\n                } else if (fullscreenContext.hasOwnProperty(propName)) {\n                  childProps[propName] = fullscreenContext[propName];\n                } else if (!warned[propName]) {\n                  logWarning(\n                    \"Prop '\" +\n                      propName +\n                      \"' for component \" +\n                      childName +\n                      ' not found in playerContext or fullscreenContext.'\n                  );\n                  warned[propName] = true;\n                }\n              }\n              return createElement(component, childProps);\n            }}\n          </PlayerContext.Consumer>\n        )}\n      </FullscreenContext.Consumer>\n    );\n  }\n  if (childName) {\n    PlayerContextFilter.displayName = `PlayerContextFilter(${childName})`;\n  }\n  return PlayerContextFilter;\n}\n\nexport default playerContextFilter;\n","import PlayerContextProvider from './PlayerContextProvider';\nimport PlayerContext from './PlayerContext';\nimport PlayerContextConsumer from './PlayerContextConsumer';\nimport PlayerContextGroup from './PlayerContextGroup';\nimport FullscreenContextProvider from './FullscreenContextProvider';\nimport FullscreenContext from './FullscreenContext';\nimport playerContextFilter from './playerContextFilter';\nimport * as PlayerPropTypes from './PlayerPropTypes';\n\nexport { PlayerContextProvider };\nexport { PlayerContextConsumer };\nexport { PlayerContextGroup };\nexport { FullscreenContextProvider };\nexport const FullscreenContextConsumer = FullscreenContext.Consumer;\nexport { playerContextFilter };\nexport { PlayerPropTypes };\n\n// undocumented exports\nexport * from './utils/console';\nexport {\n  default as convertToNumberWithinIntervalBounds\n} from './utils/convertToNumberWithinIntervalBounds';\nexport { default as isPlaylistValid } from './utils/isPlaylistValid';\nexport { default as getDisplayText } from './utils/getDisplayText';\nexport { repeatStrategyOptions } from './constants';\nexport const donotuse_PlayerContext = PlayerContext;\nexport const donotuse_FullscreenContext = FullscreenContext;\n"],"sourceRoot":""}